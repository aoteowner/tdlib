import 'dart:convert' show json;

export 'object.dart';
import 'object.dart';
export 'function.dart';

export 'objects/error.dart';
import 'objects/error.dart';
export 'objects/ok.dart';
import 'objects/ok.dart';
export 'objects/authentication_code_type.dart';
import 'objects/authentication_code_type.dart';
export 'objects/authentication_code_info.dart';
import 'objects/authentication_code_info.dart';
export 'objects/email_address_authentication_code_info.dart';
import 'objects/email_address_authentication_code_info.dart';
export 'objects/email_address_authentication.dart';
import 'objects/email_address_authentication.dart';
export 'objects/email_address_reset_state.dart';
import 'objects/email_address_reset_state.dart';
export 'objects/text_entity.dart';
import 'objects/text_entity.dart';
export 'objects/text_entities.dart';
import 'objects/text_entities.dart';
export 'objects/formatted_text.dart';
import 'objects/formatted_text.dart';
export 'objects/terms_of_service.dart';
import 'objects/terms_of_service.dart';
export 'objects/authorization_state.dart';
import 'objects/authorization_state.dart';
export 'objects/firebase_device_verification_parameters.dart';
import 'objects/firebase_device_verification_parameters.dart';
export 'objects/password_state.dart';
import 'objects/password_state.dart';
export 'objects/recovery_email_address.dart';
import 'objects/recovery_email_address.dart';
export 'objects/temporary_password_state.dart';
import 'objects/temporary_password_state.dart';
export 'objects/local_file.dart';
import 'objects/local_file.dart';
export 'objects/remote_file.dart';
import 'objects/remote_file.dart';
export 'objects/file.dart';
import 'objects/file.dart';
export 'objects/input_file.dart';
import 'objects/input_file.dart';
export 'objects/photo_size.dart';
import 'objects/photo_size.dart';
export 'objects/minithumbnail.dart';
import 'objects/minithumbnail.dart';
export 'objects/thumbnail_format.dart';
import 'objects/thumbnail_format.dart';
export 'objects/thumbnail.dart';
import 'objects/thumbnail.dart';
export 'objects/mask_point.dart';
import 'objects/mask_point.dart';
export 'objects/mask_position.dart';
import 'objects/mask_position.dart';
export 'objects/sticker_format.dart';
import 'objects/sticker_format.dart';
export 'objects/sticker_type.dart';
import 'objects/sticker_type.dart';
export 'objects/sticker_full_type.dart';
import 'objects/sticker_full_type.dart';
export 'objects/closed_vector_path.dart';
import 'objects/closed_vector_path.dart';
export 'objects/outline.dart';
import 'objects/outline.dart';
export 'objects/poll_option.dart';
import 'objects/poll_option.dart';
export 'objects/poll_type.dart';
import 'objects/poll_type.dart';
export 'objects/animation.dart';
import 'objects/animation.dart';
export 'objects/audio.dart';
import 'objects/audio.dart';
export 'objects/document.dart';
import 'objects/document.dart';
export 'objects/photo.dart';
import 'objects/photo.dart';
export 'objects/sticker.dart';
import 'objects/sticker.dart';
export 'objects/video.dart';
import 'objects/video.dart';
export 'objects/video_note.dart';
import 'objects/video_note.dart';
export 'objects/voice_note.dart';
import 'objects/voice_note.dart';
export 'objects/animated_emoji.dart';
import 'objects/animated_emoji.dart';
export 'objects/contact.dart';
import 'objects/contact.dart';
export 'objects/location.dart';
import 'objects/location.dart';
export 'objects/venue.dart';
import 'objects/venue.dart';
export 'objects/game.dart';
import 'objects/game.dart';
export 'objects/web_app.dart';
import 'objects/web_app.dart';
export 'objects/poll.dart';
import 'objects/poll.dart';
export 'objects/alternative_video.dart';
import 'objects/alternative_video.dart';
export 'objects/background.dart';
import 'objects/background.dart';
export 'objects/backgrounds.dart';
import 'objects/backgrounds.dart';
export 'objects/chat_background.dart';
import 'objects/chat_background.dart';
export 'objects/profile_photo.dart';
import 'objects/profile_photo.dart';
export 'objects/chat_photo_info.dart';
import 'objects/chat_photo_info.dart';
export 'objects/user_type.dart';
import 'objects/user_type.dart';
export 'objects/bot_command.dart';
import 'objects/bot_command.dart';
export 'objects/bot_commands.dart';
import 'objects/bot_commands.dart';
export 'objects/bot_menu_button.dart';
import 'objects/bot_menu_button.dart';
export 'objects/bot_verification_parameters.dart';
import 'objects/bot_verification_parameters.dart';
export 'objects/bot_verification.dart';
import 'objects/bot_verification.dart';
export 'objects/verification_status.dart';
import 'objects/verification_status.dart';
export 'objects/chat_location.dart';
import 'objects/chat_location.dart';
export 'objects/birthdate.dart';
import 'objects/birthdate.dart';
export 'objects/close_birthday_user.dart';
import 'objects/close_birthday_user.dart';
export 'objects/business_away_message_schedule.dart';
import 'objects/business_away_message_schedule.dart';
export 'objects/business_location.dart';
import 'objects/business_location.dart';
export 'objects/business_recipients.dart';
import 'objects/business_recipients.dart';
export 'objects/business_away_message_settings.dart';
import 'objects/business_away_message_settings.dart';
export 'objects/business_greeting_message_settings.dart';
import 'objects/business_greeting_message_settings.dart';
export 'objects/business_bot_rights.dart';
import 'objects/business_bot_rights.dart';
export 'objects/business_connected_bot.dart';
import 'objects/business_connected_bot.dart';
export 'objects/business_start_page.dart';
import 'objects/business_start_page.dart';
export 'objects/input_business_start_page.dart';
import 'objects/input_business_start_page.dart';
export 'objects/business_opening_hours_interval.dart';
import 'objects/business_opening_hours_interval.dart';
export 'objects/business_opening_hours.dart';
import 'objects/business_opening_hours.dart';
export 'objects/business_info.dart';
import 'objects/business_info.dart';
export 'objects/business_chat_link.dart';
import 'objects/business_chat_link.dart';
export 'objects/business_chat_links.dart';
import 'objects/business_chat_links.dart';
export 'objects/input_business_chat_link.dart';
import 'objects/input_business_chat_link.dart';
export 'objects/business_chat_link_info.dart';
import 'objects/business_chat_link_info.dart';
export 'objects/chat_photo_sticker_type.dart';
import 'objects/chat_photo_sticker_type.dart';
export 'objects/chat_photo_sticker.dart';
import 'objects/chat_photo_sticker.dart';
export 'objects/animated_chat_photo.dart';
import 'objects/animated_chat_photo.dart';
export 'objects/chat_photo.dart';
import 'objects/chat_photo.dart';
export 'objects/chat_photos.dart';
import 'objects/chat_photos.dart';
export 'objects/input_chat_photo.dart';
import 'objects/input_chat_photo.dart';
export 'objects/chat_permissions.dart';
import 'objects/chat_permissions.dart';
export 'objects/chat_administrator_rights.dart';
import 'objects/chat_administrator_rights.dart';
export 'objects/star_amount.dart';
import 'objects/star_amount.dart';
export 'objects/star_subscription_type.dart';
import 'objects/star_subscription_type.dart';
export 'objects/star_subscription_pricing.dart';
import 'objects/star_subscription_pricing.dart';
export 'objects/star_subscription.dart';
import 'objects/star_subscription.dart';
export 'objects/star_subscriptions.dart';
import 'objects/star_subscriptions.dart';
export 'objects/affiliate_type.dart';
import 'objects/affiliate_type.dart';
export 'objects/affiliate_program_sort_order.dart';
import 'objects/affiliate_program_sort_order.dart';
export 'objects/affiliate_program_parameters.dart';
import 'objects/affiliate_program_parameters.dart';
export 'objects/affiliate_program_info.dart';
import 'objects/affiliate_program_info.dart';
export 'objects/affiliate_info.dart';
import 'objects/affiliate_info.dart';
export 'objects/found_affiliate_program.dart';
import 'objects/found_affiliate_program.dart';
export 'objects/found_affiliate_programs.dart';
import 'objects/found_affiliate_programs.dart';
export 'objects/connected_affiliate_program.dart';
import 'objects/connected_affiliate_program.dart';
export 'objects/connected_affiliate_programs.dart';
import 'objects/connected_affiliate_programs.dart';
export 'objects/product_info.dart';
import 'objects/product_info.dart';
export 'objects/premium_payment_option.dart';
import 'objects/premium_payment_option.dart';
export 'objects/premium_state_payment_option.dart';
import 'objects/premium_state_payment_option.dart';
export 'objects/premium_gift_payment_option.dart';
import 'objects/premium_gift_payment_option.dart';
export 'objects/premium_gift_payment_options.dart';
import 'objects/premium_gift_payment_options.dart';
export 'objects/premium_giveaway_payment_option.dart';
import 'objects/premium_giveaway_payment_option.dart';
export 'objects/premium_giveaway_payment_options.dart';
import 'objects/premium_giveaway_payment_options.dart';
export 'objects/premium_gift_code_info.dart';
import 'objects/premium_gift_code_info.dart';
export 'objects/star_payment_option.dart';
import 'objects/star_payment_option.dart';
export 'objects/star_payment_options.dart';
import 'objects/star_payment_options.dart';
export 'objects/star_giveaway_winner_option.dart';
import 'objects/star_giveaway_winner_option.dart';
export 'objects/star_giveaway_payment_option.dart';
import 'objects/star_giveaway_payment_option.dart';
export 'objects/star_giveaway_payment_options.dart';
import 'objects/star_giveaway_payment_options.dart';
export 'objects/accepted_gift_types.dart';
import 'objects/accepted_gift_types.dart';
export 'objects/gift_settings.dart';
import 'objects/gift_settings.dart';
export 'objects/upgraded_gift_model.dart';
import 'objects/upgraded_gift_model.dart';
export 'objects/upgraded_gift_symbol.dart';
import 'objects/upgraded_gift_symbol.dart';
export 'objects/upgraded_gift_backdrop_colors.dart';
import 'objects/upgraded_gift_backdrop_colors.dart';
export 'objects/upgraded_gift_backdrop.dart';
import 'objects/upgraded_gift_backdrop.dart';
export 'objects/upgraded_gift_original_details.dart';
import 'objects/upgraded_gift_original_details.dart';
export 'objects/gift.dart';
import 'objects/gift.dart';
export 'objects/upgraded_gift.dart';
import 'objects/upgraded_gift.dart';
export 'objects/upgrade_gift_result.dart';
import 'objects/upgrade_gift_result.dart';
export 'objects/available_gift.dart';
import 'objects/available_gift.dart';
export 'objects/available_gifts.dart';
import 'objects/available_gifts.dart';
export 'objects/upgraded_gift_attribute_id.dart';
import 'objects/upgraded_gift_attribute_id.dart';
export 'objects/upgraded_gift_model_count.dart';
import 'objects/upgraded_gift_model_count.dart';
export 'objects/upgraded_gift_symbol_count.dart';
import 'objects/upgraded_gift_symbol_count.dart';
export 'objects/upgraded_gift_backdrop_count.dart';
import 'objects/upgraded_gift_backdrop_count.dart';
export 'objects/gift_for_resale_order.dart';
import 'objects/gift_for_resale_order.dart';
export 'objects/gift_for_resale.dart';
import 'objects/gift_for_resale.dart';
export 'objects/gifts_for_resale.dart';
import 'objects/gifts_for_resale.dart';
export 'objects/sent_gift.dart';
import 'objects/sent_gift.dart';
export 'objects/received_gift.dart';
import 'objects/received_gift.dart';
export 'objects/received_gifts.dart';
import 'objects/received_gifts.dart';
export 'objects/gift_upgrade_preview.dart';
import 'objects/gift_upgrade_preview.dart';
export 'objects/star_transaction_direction.dart';
import 'objects/star_transaction_direction.dart';
export 'objects/star_transaction_type.dart';
import 'objects/star_transaction_type.dart';
export 'objects/star_transaction.dart';
import 'objects/star_transaction.dart';
export 'objects/star_transactions.dart';
import 'objects/star_transactions.dart';
export 'objects/giveaway_participant_status.dart';
import 'objects/giveaway_participant_status.dart';
export 'objects/giveaway_info.dart';
import 'objects/giveaway_info.dart';
export 'objects/giveaway_prize.dart';
import 'objects/giveaway_prize.dart';
export 'objects/accent_color.dart';
import 'objects/accent_color.dart';
export 'objects/profile_accent_colors.dart';
import 'objects/profile_accent_colors.dart';
export 'objects/profile_accent_color.dart';
import 'objects/profile_accent_color.dart';
export 'objects/emoji_status_type.dart';
import 'objects/emoji_status_type.dart';
export 'objects/emoji_status.dart';
import 'objects/emoji_status.dart';
export 'objects/emoji_statuses.dart';
import 'objects/emoji_statuses.dart';
export 'objects/emoji_status_custom_emojis.dart';
import 'objects/emoji_status_custom_emojis.dart';
export 'objects/usernames.dart';
import 'objects/usernames.dart';
export 'objects/user.dart';
import 'objects/user.dart';
export 'objects/bot_info.dart';
import 'objects/bot_info.dart';
export 'objects/user_full_info.dart';
import 'objects/user_full_info.dart';
export 'objects/users.dart';
import 'objects/users.dart';
export 'objects/found_users.dart';
import 'objects/found_users.dart';
export 'objects/chat_administrator.dart';
import 'objects/chat_administrator.dart';
export 'objects/chat_administrators.dart';
import 'objects/chat_administrators.dart';
export 'objects/chat_member_status.dart';
import 'objects/chat_member_status.dart';
export 'objects/chat_member.dart';
import 'objects/chat_member.dart';
export 'objects/chat_members.dart';
import 'objects/chat_members.dart';
export 'objects/chat_members_filter.dart';
import 'objects/chat_members_filter.dart';
export 'objects/supergroup_members_filter.dart';
import 'objects/supergroup_members_filter.dart';
export 'objects/chat_invite_link.dart';
import 'objects/chat_invite_link.dart';
export 'objects/chat_invite_links.dart';
import 'objects/chat_invite_links.dart';
export 'objects/chat_invite_link_count.dart';
import 'objects/chat_invite_link_count.dart';
export 'objects/chat_invite_link_counts.dart';
import 'objects/chat_invite_link_counts.dart';
export 'objects/chat_invite_link_member.dart';
import 'objects/chat_invite_link_member.dart';
export 'objects/chat_invite_link_members.dart';
import 'objects/chat_invite_link_members.dart';
export 'objects/invite_link_chat_type.dart';
import 'objects/invite_link_chat_type.dart';
export 'objects/chat_invite_link_subscription_info.dart';
import 'objects/chat_invite_link_subscription_info.dart';
export 'objects/chat_invite_link_info.dart';
import 'objects/chat_invite_link_info.dart';
export 'objects/chat_join_request.dart';
import 'objects/chat_join_request.dart';
export 'objects/chat_join_requests.dart';
import 'objects/chat_join_requests.dart';
export 'objects/chat_join_requests_info.dart';
import 'objects/chat_join_requests_info.dart';
export 'objects/basic_group.dart';
import 'objects/basic_group.dart';
export 'objects/basic_group_full_info.dart';
import 'objects/basic_group_full_info.dart';
export 'objects/supergroup.dart';
import 'objects/supergroup.dart';
export 'objects/supergroup_full_info.dart';
import 'objects/supergroup_full_info.dart';
export 'objects/secret_chat_state.dart';
import 'objects/secret_chat_state.dart';
export 'objects/secret_chat.dart';
import 'objects/secret_chat.dart';
export 'objects/message_sender.dart';
import 'objects/message_sender.dart';
export 'objects/message_senders.dart';
import 'objects/message_senders.dart';
export 'objects/chat_message_sender.dart';
import 'objects/chat_message_sender.dart';
export 'objects/chat_message_senders.dart';
import 'objects/chat_message_senders.dart';
export 'objects/message_read_date.dart';
import 'objects/message_read_date.dart';
export 'objects/message_viewer.dart';
import 'objects/message_viewer.dart';
export 'objects/message_viewers.dart';
import 'objects/message_viewers.dart';
export 'objects/message_origin.dart';
import 'objects/message_origin.dart';
export 'objects/forward_source.dart';
import 'objects/forward_source.dart';
export 'objects/reaction_type.dart';
import 'objects/reaction_type.dart';
export 'objects/paid_reaction_type.dart';
import 'objects/paid_reaction_type.dart';
export 'objects/paid_reactor.dart';
import 'objects/paid_reactor.dart';
export 'objects/message_forward_info.dart';
import 'objects/message_forward_info.dart';
export 'objects/message_import_info.dart';
import 'objects/message_import_info.dart';
export 'objects/message_reply_info.dart';
import 'objects/message_reply_info.dart';
export 'objects/message_reaction.dart';
import 'objects/message_reaction.dart';
export 'objects/message_reactions.dart';
import 'objects/message_reactions.dart';
export 'objects/message_interaction_info.dart';
import 'objects/message_interaction_info.dart';
export 'objects/unread_reaction.dart';
import 'objects/unread_reaction.dart';
export 'objects/message_effect_type.dart';
import 'objects/message_effect_type.dart';
export 'objects/message_effect.dart';
import 'objects/message_effect.dart';
export 'objects/message_sending_state.dart';
import 'objects/message_sending_state.dart';
export 'objects/text_quote.dart';
import 'objects/text_quote.dart';
export 'objects/input_text_quote.dart';
import 'objects/input_text_quote.dart';
export 'objects/message_reply_to.dart';
import 'objects/message_reply_to.dart';
export 'objects/input_message_reply_to.dart';
import 'objects/input_message_reply_to.dart';
export 'objects/fact_check.dart';
import 'objects/fact_check.dart';
export 'objects/message.dart';
import 'objects/message.dart';
export 'objects/messages.dart';
import 'objects/messages.dart';
export 'objects/found_messages.dart';
import 'objects/found_messages.dart';
export 'objects/found_chat_messages.dart';
import 'objects/found_chat_messages.dart';
export 'objects/message_position.dart';
import 'objects/message_position.dart';
export 'objects/message_positions.dart';
import 'objects/message_positions.dart';
export 'objects/message_calendar_day.dart';
import 'objects/message_calendar_day.dart';
export 'objects/message_calendar.dart';
import 'objects/message_calendar.dart';
export 'objects/business_message.dart';
import 'objects/business_message.dart';
export 'objects/business_messages.dart';
import 'objects/business_messages.dart';
export 'objects/message_source.dart';
import 'objects/message_source.dart';
export 'objects/message_sponsor.dart';
import 'objects/message_sponsor.dart';
export 'objects/sponsored_message.dart';
import 'objects/sponsored_message.dart';
export 'objects/sponsored_messages.dart';
import 'objects/sponsored_messages.dart';
export 'objects/sponsored_chat.dart';
import 'objects/sponsored_chat.dart';
export 'objects/sponsored_chats.dart';
import 'objects/sponsored_chats.dart';
export 'objects/report_option.dart';
import 'objects/report_option.dart';
export 'objects/report_sponsored_result.dart';
import 'objects/report_sponsored_result.dart';
export 'objects/file_download.dart';
import 'objects/file_download.dart';
export 'objects/downloaded_file_counts.dart';
import 'objects/downloaded_file_counts.dart';
export 'objects/found_file_downloads.dart';
import 'objects/found_file_downloads.dart';
export 'objects/notification_settings_scope.dart';
import 'objects/notification_settings_scope.dart';
export 'objects/chat_notification_settings.dart';
import 'objects/chat_notification_settings.dart';
export 'objects/scope_notification_settings.dart';
import 'objects/scope_notification_settings.dart';
export 'objects/reaction_notification_source.dart';
import 'objects/reaction_notification_source.dart';
export 'objects/reaction_notification_settings.dart';
import 'objects/reaction_notification_settings.dart';
export 'objects/draft_message.dart';
import 'objects/draft_message.dart';
export 'objects/chat_type.dart';
import 'objects/chat_type.dart';
export 'objects/chat_folder_icon.dart';
import 'objects/chat_folder_icon.dart';
export 'objects/chat_folder_name.dart';
import 'objects/chat_folder_name.dart';
export 'objects/chat_folder.dart';
import 'objects/chat_folder.dart';
export 'objects/chat_folder_info.dart';
import 'objects/chat_folder_info.dart';
export 'objects/chat_folder_invite_link.dart';
import 'objects/chat_folder_invite_link.dart';
export 'objects/chat_folder_invite_links.dart';
import 'objects/chat_folder_invite_links.dart';
export 'objects/chat_folder_invite_link_info.dart';
import 'objects/chat_folder_invite_link_info.dart';
export 'objects/recommended_chat_folder.dart';
import 'objects/recommended_chat_folder.dart';
export 'objects/recommended_chat_folders.dart';
import 'objects/recommended_chat_folders.dart';
export 'objects/archive_chat_list_settings.dart';
import 'objects/archive_chat_list_settings.dart';
export 'objects/chat_list.dart';
import 'objects/chat_list.dart';
export 'objects/chat_lists.dart';
import 'objects/chat_lists.dart';
export 'objects/chat_source.dart';
import 'objects/chat_source.dart';
export 'objects/chat_position.dart';
import 'objects/chat_position.dart';
export 'objects/chat_available_reactions.dart';
import 'objects/chat_available_reactions.dart';
export 'objects/saved_messages_tag.dart';
import 'objects/saved_messages_tag.dart';
export 'objects/saved_messages_tags.dart';
import 'objects/saved_messages_tags.dart';
export 'objects/business_bot_manage_bar.dart';
import 'objects/business_bot_manage_bar.dart';
export 'objects/video_chat.dart';
import 'objects/video_chat.dart';
export 'objects/chat.dart';
import 'objects/chat.dart';
export 'objects/chats.dart';
import 'objects/chats.dart';
export 'objects/failed_to_add_member.dart';
import 'objects/failed_to_add_member.dart';
export 'objects/failed_to_add_members.dart';
import 'objects/failed_to_add_members.dart';
export 'objects/created_basic_group_chat.dart';
import 'objects/created_basic_group_chat.dart';
export 'objects/public_chat_type.dart';
import 'objects/public_chat_type.dart';
export 'objects/account_info.dart';
import 'objects/account_info.dart';
export 'objects/chat_action_bar.dart';
import 'objects/chat_action_bar.dart';
export 'objects/keyboard_button_type.dart';
import 'objects/keyboard_button_type.dart';
export 'objects/keyboard_button.dart';
import 'objects/keyboard_button.dart';
export 'objects/inline_keyboard_button_type.dart';
import 'objects/inline_keyboard_button_type.dart';
export 'objects/inline_keyboard_button.dart';
import 'objects/inline_keyboard_button.dart';
export 'objects/reply_markup.dart';
import 'objects/reply_markup.dart';
export 'objects/login_url_info.dart';
import 'objects/login_url_info.dart';
export 'objects/theme_parameters.dart';
import 'objects/theme_parameters.dart';
export 'objects/web_app_open_mode.dart';
import 'objects/web_app_open_mode.dart';
export 'objects/found_web_app.dart';
import 'objects/found_web_app.dart';
export 'objects/web_app_info.dart';
import 'objects/web_app_info.dart';
export 'objects/main_web_app.dart';
import 'objects/main_web_app.dart';
export 'objects/web_app_open_parameters.dart';
import 'objects/web_app_open_parameters.dart';
export 'objects/message_thread_info.dart';
import 'objects/message_thread_info.dart';
export 'objects/saved_messages_topic_type.dart';
import 'objects/saved_messages_topic_type.dart';
export 'objects/saved_messages_topic.dart';
import 'objects/saved_messages_topic.dart';
export 'objects/forum_topic_icon.dart';
import 'objects/forum_topic_icon.dart';
export 'objects/forum_topic_info.dart';
import 'objects/forum_topic_info.dart';
export 'objects/forum_topic.dart';
import 'objects/forum_topic.dart';
export 'objects/forum_topics.dart';
import 'objects/forum_topics.dart';
export 'objects/link_preview_options.dart';
import 'objects/link_preview_options.dart';
export 'objects/shared_user.dart';
import 'objects/shared_user.dart';
export 'objects/shared_chat.dart';
import 'objects/shared_chat.dart';
export 'objects/theme_settings.dart';
import 'objects/theme_settings.dart';
export 'objects/rich_text.dart';
import 'objects/rich_text.dart';
export 'objects/page_block_caption.dart';
import 'objects/page_block_caption.dart';
export 'objects/page_block_list_item.dart';
import 'objects/page_block_list_item.dart';
export 'objects/page_block_horizontal_alignment.dart';
import 'objects/page_block_horizontal_alignment.dart';
export 'objects/page_block_vertical_alignment.dart';
import 'objects/page_block_vertical_alignment.dart';
export 'objects/page_block_table_cell.dart';
import 'objects/page_block_table_cell.dart';
export 'objects/page_block_related_article.dart';
import 'objects/page_block_related_article.dart';
export 'objects/page_block.dart';
import 'objects/page_block.dart';
export 'objects/web_page_instant_view.dart';
import 'objects/web_page_instant_view.dart';
export 'objects/link_preview_album_media.dart';
import 'objects/link_preview_album_media.dart';
export 'objects/link_preview_type.dart';
import 'objects/link_preview_type.dart';
export 'objects/link_preview.dart';
import 'objects/link_preview.dart';
export 'objects/country_info.dart';
import 'objects/country_info.dart';
export 'objects/countries.dart';
import 'objects/countries.dart';
export 'objects/phone_number_info.dart';
import 'objects/phone_number_info.dart';
export 'objects/collectible_item_type.dart';
import 'objects/collectible_item_type.dart';
export 'objects/collectible_item_info.dart';
import 'objects/collectible_item_info.dart';
export 'objects/bank_card_action_open_url.dart';
import 'objects/bank_card_action_open_url.dart';
export 'objects/bank_card_info.dart';
import 'objects/bank_card_info.dart';
export 'objects/address.dart';
import 'objects/address.dart';
export 'objects/location_address.dart';
import 'objects/location_address.dart';
export 'objects/labeled_price_part.dart';
import 'objects/labeled_price_part.dart';
export 'objects/invoice.dart';
import 'objects/invoice.dart';
export 'objects/order_info.dart';
import 'objects/order_info.dart';
export 'objects/shipping_option.dart';
import 'objects/shipping_option.dart';
export 'objects/saved_credentials.dart';
import 'objects/saved_credentials.dart';
export 'objects/input_credentials.dart';
import 'objects/input_credentials.dart';
export 'objects/payment_provider.dart';
import 'objects/payment_provider.dart';
export 'objects/payment_option.dart';
import 'objects/payment_option.dart';
export 'objects/payment_form_type.dart';
import 'objects/payment_form_type.dart';
export 'objects/payment_form.dart';
import 'objects/payment_form.dart';
export 'objects/validated_order_info.dart';
import 'objects/validated_order_info.dart';
export 'objects/payment_result.dart';
import 'objects/payment_result.dart';
export 'objects/payment_receipt_type.dart';
import 'objects/payment_receipt_type.dart';
export 'objects/payment_receipt.dart';
import 'objects/payment_receipt.dart';
export 'objects/input_invoice.dart';
import 'objects/input_invoice.dart';
export 'objects/paid_media.dart';
import 'objects/paid_media.dart';
export 'objects/giveaway_parameters.dart';
import 'objects/giveaway_parameters.dart';
export 'objects/dated_file.dart';
import 'objects/dated_file.dart';
export 'objects/passport_element_type.dart';
import 'objects/passport_element_type.dart';
export 'objects/date.dart';
import 'objects/date.dart';
export 'objects/personal_details.dart';
import 'objects/personal_details.dart';
export 'objects/identity_document.dart';
import 'objects/identity_document.dart';
export 'objects/input_identity_document.dart';
import 'objects/input_identity_document.dart';
export 'objects/personal_document.dart';
import 'objects/personal_document.dart';
export 'objects/input_personal_document.dart';
import 'objects/input_personal_document.dart';
export 'objects/passport_element.dart';
import 'objects/passport_element.dart';
export 'objects/input_passport_element.dart';
import 'objects/input_passport_element.dart';
export 'objects/passport_elements.dart';
import 'objects/passport_elements.dart';
export 'objects/passport_element_error_source.dart';
import 'objects/passport_element_error_source.dart';
export 'objects/passport_element_error.dart';
import 'objects/passport_element_error.dart';
export 'objects/passport_suitable_element.dart';
import 'objects/passport_suitable_element.dart';
export 'objects/passport_required_element.dart';
import 'objects/passport_required_element.dart';
export 'objects/passport_authorization_form.dart';
import 'objects/passport_authorization_form.dart';
export 'objects/passport_elements_with_errors.dart';
import 'objects/passport_elements_with_errors.dart';
export 'objects/encrypted_credentials.dart';
import 'objects/encrypted_credentials.dart';
export 'objects/encrypted_passport_element.dart';
import 'objects/encrypted_passport_element.dart';
export 'objects/input_passport_element_error_source.dart';
import 'objects/input_passport_element_error_source.dart';
export 'objects/input_passport_element_error.dart';
import 'objects/input_passport_element_error.dart';
export 'objects/message_content.dart';
import 'objects/message_content.dart';
export 'objects/text_entity_type.dart';
import 'objects/text_entity_type.dart';
export 'objects/input_thumbnail.dart';
import 'objects/input_thumbnail.dart';
export 'objects/input_paid_media_type.dart';
import 'objects/input_paid_media_type.dart';
export 'objects/input_paid_media.dart';
import 'objects/input_paid_media.dart';
export 'objects/message_scheduling_state.dart';
import 'objects/message_scheduling_state.dart';
export 'objects/message_self_destruct_type.dart';
import 'objects/message_self_destruct_type.dart';
export 'objects/message_send_options.dart';
import 'objects/message_send_options.dart';
export 'objects/message_copy_options.dart';
import 'objects/message_copy_options.dart';
export 'objects/input_message_content.dart';
import 'objects/input_message_content.dart';
export 'objects/message_properties.dart';
import 'objects/message_properties.dart';
export 'objects/search_messages_filter.dart';
import 'objects/search_messages_filter.dart';
export 'objects/search_messages_chat_type_filter.dart';
import 'objects/search_messages_chat_type_filter.dart';
export 'objects/chat_action.dart';
import 'objects/chat_action.dart';
export 'objects/user_status.dart';
import 'objects/user_status.dart';
export 'objects/emoji_keyword.dart';
import 'objects/emoji_keyword.dart';
export 'objects/emoji_keywords.dart';
import 'objects/emoji_keywords.dart';
export 'objects/stickers.dart';
import 'objects/stickers.dart';
export 'objects/emojis.dart';
import 'objects/emojis.dart';
export 'objects/sticker_set.dart';
import 'objects/sticker_set.dart';
export 'objects/sticker_set_info.dart';
import 'objects/sticker_set_info.dart';
export 'objects/sticker_sets.dart';
import 'objects/sticker_sets.dart';
export 'objects/trending_sticker_sets.dart';
import 'objects/trending_sticker_sets.dart';
export 'objects/emoji_category_source.dart';
import 'objects/emoji_category_source.dart';
export 'objects/emoji_category.dart';
import 'objects/emoji_category.dart';
export 'objects/emoji_categories.dart';
import 'objects/emoji_categories.dart';
export 'objects/emoji_category_type.dart';
import 'objects/emoji_category_type.dart';
export 'objects/current_weather.dart';
import 'objects/current_weather.dart';
export 'objects/story_area_position.dart';
import 'objects/story_area_position.dart';
export 'objects/story_area_type.dart';
import 'objects/story_area_type.dart';
export 'objects/story_area.dart';
import 'objects/story_area.dart';
export 'objects/input_story_area_type.dart';
import 'objects/input_story_area_type.dart';
export 'objects/input_story_area.dart';
import 'objects/input_story_area.dart';
export 'objects/input_story_areas.dart';
import 'objects/input_story_areas.dart';
export 'objects/story_video.dart';
import 'objects/story_video.dart';
export 'objects/story_content.dart';
import 'objects/story_content.dart';
export 'objects/input_story_content.dart';
import 'objects/input_story_content.dart';
export 'objects/story_list.dart';
import 'objects/story_list.dart';
export 'objects/story_origin.dart';
import 'objects/story_origin.dart';
export 'objects/story_repost_info.dart';
import 'objects/story_repost_info.dart';
export 'objects/story_interaction_info.dart';
import 'objects/story_interaction_info.dart';
export 'objects/story.dart';
import 'objects/story.dart';
export 'objects/stories.dart';
import 'objects/stories.dart';
export 'objects/found_stories.dart';
import 'objects/found_stories.dart';
export 'objects/story_full_id.dart';
import 'objects/story_full_id.dart';
export 'objects/story_info.dart';
import 'objects/story_info.dart';
export 'objects/chat_active_stories.dart';
import 'objects/chat_active_stories.dart';
export 'objects/story_interaction_type.dart';
import 'objects/story_interaction_type.dart';
export 'objects/story_interaction.dart';
import 'objects/story_interaction.dart';
export 'objects/story_interactions.dart';
import 'objects/story_interactions.dart';
export 'objects/quick_reply_message.dart';
import 'objects/quick_reply_message.dart';
export 'objects/quick_reply_messages.dart';
import 'objects/quick_reply_messages.dart';
export 'objects/quick_reply_shortcut.dart';
import 'objects/quick_reply_shortcut.dart';
export 'objects/public_forward.dart';
import 'objects/public_forward.dart';
export 'objects/public_forwards.dart';
import 'objects/public_forwards.dart';
export 'objects/bot_media_preview.dart';
import 'objects/bot_media_preview.dart';
export 'objects/bot_media_previews.dart';
import 'objects/bot_media_previews.dart';
export 'objects/bot_media_preview_info.dart';
import 'objects/bot_media_preview_info.dart';
export 'objects/chat_boost_level_features.dart';
import 'objects/chat_boost_level_features.dart';
export 'objects/chat_boost_features.dart';
import 'objects/chat_boost_features.dart';
export 'objects/chat_boost_source.dart';
import 'objects/chat_boost_source.dart';
export 'objects/prepaid_giveaway.dart';
import 'objects/prepaid_giveaway.dart';
export 'objects/chat_boost_status.dart';
import 'objects/chat_boost_status.dart';
export 'objects/chat_boost.dart';
import 'objects/chat_boost.dart';
export 'objects/found_chat_boosts.dart';
import 'objects/found_chat_boosts.dart';
export 'objects/chat_boost_slot.dart';
import 'objects/chat_boost_slot.dart';
export 'objects/chat_boost_slots.dart';
import 'objects/chat_boost_slots.dart';
export 'objects/resend_code_reason.dart';
import 'objects/resend_code_reason.dart';
export 'objects/call_discard_reason.dart';
import 'objects/call_discard_reason.dart';
export 'objects/call_protocol.dart';
import 'objects/call_protocol.dart';
export 'objects/call_server_type.dart';
import 'objects/call_server_type.dart';
export 'objects/call_server.dart';
import 'objects/call_server.dart';
export 'objects/call_id.dart';
import 'objects/call_id.dart';
export 'objects/group_call_id.dart';
import 'objects/group_call_id.dart';
export 'objects/call_state.dart';
import 'objects/call_state.dart';
export 'objects/group_call_join_parameters.dart';
import 'objects/group_call_join_parameters.dart';
export 'objects/group_call_video_quality.dart';
import 'objects/group_call_video_quality.dart';
export 'objects/video_chat_stream.dart';
import 'objects/video_chat_stream.dart';
export 'objects/video_chat_streams.dart';
import 'objects/video_chat_streams.dart';
export 'objects/rtmp_url.dart';
import 'objects/rtmp_url.dart';
export 'objects/group_call_recent_speaker.dart';
import 'objects/group_call_recent_speaker.dart';
export 'objects/group_call.dart';
import 'objects/group_call.dart';
export 'objects/group_call_video_source_group.dart';
import 'objects/group_call_video_source_group.dart';
export 'objects/group_call_participant_video_info.dart';
import 'objects/group_call_participant_video_info.dart';
export 'objects/group_call_participant.dart';
import 'objects/group_call_participant.dart';
export 'objects/group_call_participants.dart';
import 'objects/group_call_participants.dart';
export 'objects/group_call_info.dart';
import 'objects/group_call_info.dart';
export 'objects/invite_group_call_participant_result.dart';
import 'objects/invite_group_call_participant_result.dart';
export 'objects/group_call_data_channel.dart';
import 'objects/group_call_data_channel.dart';
export 'objects/input_group_call.dart';
import 'objects/input_group_call.dart';
export 'objects/call_problem.dart';
import 'objects/call_problem.dart';
export 'objects/call.dart';
import 'objects/call.dart';
export 'objects/firebase_authentication_settings.dart';
import 'objects/firebase_authentication_settings.dart';
export 'objects/phone_number_authentication_settings.dart';
import 'objects/phone_number_authentication_settings.dart';
export 'objects/added_reaction.dart';
import 'objects/added_reaction.dart';
export 'objects/added_reactions.dart';
import 'objects/added_reactions.dart';
export 'objects/available_reaction.dart';
import 'objects/available_reaction.dart';
export 'objects/available_reactions.dart';
import 'objects/available_reactions.dart';
export 'objects/emoji_reaction.dart';
import 'objects/emoji_reaction.dart';
export 'objects/reaction_unavailability_reason.dart';
import 'objects/reaction_unavailability_reason.dart';
export 'objects/animations.dart';
import 'objects/animations.dart';
export 'objects/dice_stickers.dart';
import 'objects/dice_stickers.dart';
export 'objects/imported_contacts.dart';
import 'objects/imported_contacts.dart';
export 'objects/speech_recognition_result.dart';
import 'objects/speech_recognition_result.dart';
export 'objects/business_connection.dart';
import 'objects/business_connection.dart';
export 'objects/attachment_menu_bot_color.dart';
import 'objects/attachment_menu_bot_color.dart';
export 'objects/attachment_menu_bot.dart';
import 'objects/attachment_menu_bot.dart';
export 'objects/sent_web_app_message.dart';
import 'objects/sent_web_app_message.dart';
export 'objects/bot_write_access_allow_reason.dart';
import 'objects/bot_write_access_allow_reason.dart';
export 'objects/http_url.dart';
import 'objects/http_url.dart';
export 'objects/user_link.dart';
import 'objects/user_link.dart';
export 'objects/target_chat_types.dart';
import 'objects/target_chat_types.dart';
export 'objects/target_chat.dart';
import 'objects/target_chat.dart';
export 'objects/input_inline_query_result.dart';
import 'objects/input_inline_query_result.dart';
export 'objects/inline_query_result.dart';
import 'objects/inline_query_result.dart';
export 'objects/inline_query_results_button_type.dart';
import 'objects/inline_query_results_button_type.dart';
export 'objects/inline_query_results_button.dart';
import 'objects/inline_query_results_button.dart';
export 'objects/inline_query_results.dart';
import 'objects/inline_query_results.dart';
export 'objects/prepared_inline_message_id.dart';
import 'objects/prepared_inline_message_id.dart';
export 'objects/prepared_inline_message.dart';
import 'objects/prepared_inline_message.dart';
export 'objects/callback_query_payload.dart';
import 'objects/callback_query_payload.dart';
export 'objects/callback_query_answer.dart';
import 'objects/callback_query_answer.dart';
export 'objects/custom_request_result.dart';
import 'objects/custom_request_result.dart';
export 'objects/game_high_score.dart';
import 'objects/game_high_score.dart';
export 'objects/game_high_scores.dart';
import 'objects/game_high_scores.dart';
export 'objects/chat_event_action.dart';
import 'objects/chat_event_action.dart';
export 'objects/chat_event.dart';
import 'objects/chat_event.dart';
export 'objects/chat_events.dart';
import 'objects/chat_events.dart';
export 'objects/chat_event_log_filters.dart';
import 'objects/chat_event_log_filters.dart';
export 'objects/language_pack_string_value.dart';
import 'objects/language_pack_string_value.dart';
export 'objects/language_pack_string.dart';
import 'objects/language_pack_string.dart';
export 'objects/language_pack_strings.dart';
import 'objects/language_pack_strings.dart';
export 'objects/language_pack_info.dart';
import 'objects/language_pack_info.dart';
export 'objects/localization_target_info.dart';
import 'objects/localization_target_info.dart';
export 'objects/premium_limit_type.dart';
import 'objects/premium_limit_type.dart';
export 'objects/premium_feature.dart';
import 'objects/premium_feature.dart';
export 'objects/business_feature.dart';
import 'objects/business_feature.dart';
export 'objects/premium_story_feature.dart';
import 'objects/premium_story_feature.dart';
export 'objects/premium_limit.dart';
import 'objects/premium_limit.dart';
export 'objects/premium_features.dart';
import 'objects/premium_features.dart';
export 'objects/business_features.dart';
import 'objects/business_features.dart';
export 'objects/premium_source.dart';
import 'objects/premium_source.dart';
export 'objects/premium_feature_promotion_animation.dart';
import 'objects/premium_feature_promotion_animation.dart';
export 'objects/business_feature_promotion_animation.dart';
import 'objects/business_feature_promotion_animation.dart';
export 'objects/premium_state.dart';
import 'objects/premium_state.dart';
export 'objects/store_payment_purpose.dart';
import 'objects/store_payment_purpose.dart';
export 'objects/store_transaction.dart';
import 'objects/store_transaction.dart';
export 'objects/telegram_payment_purpose.dart';
import 'objects/telegram_payment_purpose.dart';
export 'objects/device_token.dart';
import 'objects/device_token.dart';
export 'objects/push_receiver_id.dart';
import 'objects/push_receiver_id.dart';
export 'objects/background_fill.dart';
import 'objects/background_fill.dart';
export 'objects/background_type.dart';
import 'objects/background_type.dart';
export 'objects/input_background.dart';
import 'objects/input_background.dart';
export 'objects/chat_theme.dart';
import 'objects/chat_theme.dart';
export 'objects/time_zone.dart';
import 'objects/time_zone.dart';
export 'objects/time_zones.dart';
import 'objects/time_zones.dart';
export 'objects/hashtags.dart';
import 'objects/hashtags.dart';
export 'objects/can_post_story_result.dart';
import 'objects/can_post_story_result.dart';
export 'objects/can_transfer_ownership_result.dart';
import 'objects/can_transfer_ownership_result.dart';
export 'objects/check_chat_username_result.dart';
import 'objects/check_chat_username_result.dart';
export 'objects/check_sticker_set_name_result.dart';
import 'objects/check_sticker_set_name_result.dart';
export 'objects/reset_password_result.dart';
import 'objects/reset_password_result.dart';
export 'objects/message_file_type.dart';
import 'objects/message_file_type.dart';
export 'objects/push_message_content.dart';
import 'objects/push_message_content.dart';
export 'objects/notification_type.dart';
import 'objects/notification_type.dart';
export 'objects/notification_group_type.dart';
import 'objects/notification_group_type.dart';
export 'objects/notification_sound.dart';
import 'objects/notification_sound.dart';
export 'objects/notification_sounds.dart';
import 'objects/notification_sounds.dart';
export 'objects/notification.dart';
import 'objects/notification.dart';
export 'objects/notification_group.dart';
import 'objects/notification_group.dart';
export 'objects/option_value.dart';
import 'objects/option_value.dart';
export 'objects/json_object_member.dart';
import 'objects/json_object_member.dart';
export 'objects/json_value.dart';
import 'objects/json_value.dart';
export 'objects/story_privacy_settings.dart';
import 'objects/story_privacy_settings.dart';
export 'objects/user_privacy_setting_rule.dart';
import 'objects/user_privacy_setting_rule.dart';
export 'objects/user_privacy_setting_rules.dart';
import 'objects/user_privacy_setting_rules.dart';
export 'objects/user_privacy_setting.dart';
import 'objects/user_privacy_setting.dart';
export 'objects/read_date_privacy_settings.dart';
import 'objects/read_date_privacy_settings.dart';
export 'objects/new_chat_privacy_settings.dart';
import 'objects/new_chat_privacy_settings.dart';
export 'objects/can_send_message_to_user_result.dart';
import 'objects/can_send_message_to_user_result.dart';
export 'objects/account_ttl.dart';
import 'objects/account_ttl.dart';
export 'objects/message_auto_delete_time.dart';
import 'objects/message_auto_delete_time.dart';
export 'objects/session_type.dart';
import 'objects/session_type.dart';
export 'objects/session.dart';
import 'objects/session.dart';
export 'objects/sessions.dart';
import 'objects/sessions.dart';
export 'objects/unconfirmed_session.dart';
import 'objects/unconfirmed_session.dart';
export 'objects/connected_website.dart';
import 'objects/connected_website.dart';
export 'objects/connected_websites.dart';
import 'objects/connected_websites.dart';
export 'objects/report_reason.dart';
import 'objects/report_reason.dart';
export 'objects/report_chat_result.dart';
import 'objects/report_chat_result.dart';
export 'objects/report_story_result.dart';
import 'objects/report_story_result.dart';
export 'objects/internal_link_type.dart';
import 'objects/internal_link_type.dart';
export 'objects/message_link.dart';
import 'objects/message_link.dart';
export 'objects/message_link_info.dart';
import 'objects/message_link_info.dart';
export 'objects/chat_boost_link.dart';
import 'objects/chat_boost_link.dart';
export 'objects/chat_boost_link_info.dart';
import 'objects/chat_boost_link_info.dart';
export 'objects/block_list.dart';
import 'objects/block_list.dart';
export 'objects/file_type.dart';
import 'objects/file_type.dart';
export 'objects/storage_statistics_by_file_type.dart';
import 'objects/storage_statistics_by_file_type.dart';
export 'objects/storage_statistics_by_chat.dart';
import 'objects/storage_statistics_by_chat.dart';
export 'objects/storage_statistics.dart';
import 'objects/storage_statistics.dart';
export 'objects/storage_statistics_fast.dart';
import 'objects/storage_statistics_fast.dart';
export 'objects/database_statistics.dart';
import 'objects/database_statistics.dart';
export 'objects/network_type.dart';
import 'objects/network_type.dart';
export 'objects/network_statistics_entry.dart';
import 'objects/network_statistics_entry.dart';
export 'objects/network_statistics.dart';
import 'objects/network_statistics.dart';
export 'objects/auto_download_settings.dart';
import 'objects/auto_download_settings.dart';
export 'objects/auto_download_settings_presets.dart';
import 'objects/auto_download_settings_presets.dart';
export 'objects/autosave_settings_scope.dart';
import 'objects/autosave_settings_scope.dart';
export 'objects/scope_autosave_settings.dart';
import 'objects/scope_autosave_settings.dart';
export 'objects/autosave_settings_exception.dart';
import 'objects/autosave_settings_exception.dart';
export 'objects/autosave_settings.dart';
import 'objects/autosave_settings.dart';
export 'objects/connection_state.dart';
import 'objects/connection_state.dart';
export 'objects/top_chat_category.dart';
import 'objects/top_chat_category.dart';
export 'objects/found_position.dart';
import 'objects/found_position.dart';
export 'objects/found_positions.dart';
import 'objects/found_positions.dart';
export 'objects/t_me_url_type.dart';
import 'objects/t_me_url_type.dart';
export 'objects/t_me_url.dart';
import 'objects/t_me_url.dart';
export 'objects/t_me_urls.dart';
import 'objects/t_me_urls.dart';
export 'objects/suggested_action.dart';
import 'objects/suggested_action.dart';
export 'objects/count.dart';
import 'objects/count.dart';
export 'objects/text.dart';
import 'objects/text.dart';
export 'objects/data.dart';
import 'objects/data.dart';
export 'objects/seconds.dart';
import 'objects/seconds.dart';
export 'objects/file_downloaded_prefix_size.dart';
import 'objects/file_downloaded_prefix_size.dart';
export 'objects/star_count.dart';
import 'objects/star_count.dart';
export 'objects/deep_link_info.dart';
import 'objects/deep_link_info.dart';
export 'objects/text_parse_mode.dart';
import 'objects/text_parse_mode.dart';
export 'objects/proxy_type.dart';
import 'objects/proxy_type.dart';
export 'objects/proxy.dart';
import 'objects/proxy.dart';
export 'objects/proxies.dart';
import 'objects/proxies.dart';
export 'objects/input_sticker.dart';
import 'objects/input_sticker.dart';
export 'objects/date_range.dart';
import 'objects/date_range.dart';
export 'objects/statistical_value.dart';
import 'objects/statistical_value.dart';
export 'objects/statistical_graph.dart';
import 'objects/statistical_graph.dart';
export 'objects/chat_statistics_object_type.dart';
import 'objects/chat_statistics_object_type.dart';
export 'objects/chat_statistics_interaction_info.dart';
import 'objects/chat_statistics_interaction_info.dart';
export 'objects/chat_statistics_message_sender_info.dart';
import 'objects/chat_statistics_message_sender_info.dart';
export 'objects/chat_statistics_administrator_actions_info.dart';
import 'objects/chat_statistics_administrator_actions_info.dart';
export 'objects/chat_statistics_inviter_info.dart';
import 'objects/chat_statistics_inviter_info.dart';
export 'objects/chat_statistics.dart';
import 'objects/chat_statistics.dart';
export 'objects/chat_revenue_amount.dart';
import 'objects/chat_revenue_amount.dart';
export 'objects/chat_revenue_statistics.dart';
import 'objects/chat_revenue_statistics.dart';
export 'objects/message_statistics.dart';
import 'objects/message_statistics.dart';
export 'objects/story_statistics.dart';
import 'objects/story_statistics.dart';
export 'objects/revenue_withdrawal_state.dart';
import 'objects/revenue_withdrawal_state.dart';
export 'objects/chat_revenue_transaction_type.dart';
import 'objects/chat_revenue_transaction_type.dart';
export 'objects/chat_revenue_transaction.dart';
import 'objects/chat_revenue_transaction.dart';
export 'objects/chat_revenue_transactions.dart';
import 'objects/chat_revenue_transactions.dart';
export 'objects/star_revenue_status.dart';
import 'objects/star_revenue_status.dart';
export 'objects/star_revenue_statistics.dart';
import 'objects/star_revenue_statistics.dart';
export 'objects/point.dart';
import 'objects/point.dart';
export 'objects/vector_path_command.dart';
import 'objects/vector_path_command.dart';
export 'objects/bot_command_scope.dart';
import 'objects/bot_command_scope.dart';
export 'objects/phone_number_code_type.dart';
import 'objects/phone_number_code_type.dart';
export 'objects/update.dart';
import 'objects/update.dart';
export 'objects/updates.dart';
import 'objects/updates.dart';
export 'objects/log_stream.dart';
import 'objects/log_stream.dart';
export 'objects/log_verbosity_level.dart';
import 'objects/log_verbosity_level.dart';
export 'objects/log_tags.dart';
import 'objects/log_tags.dart';
export 'objects/user_support_info.dart';
import 'objects/user_support_info.dart';
export 'objects/test_int.dart';
import 'objects/test_int.dart';
export 'objects/test_string.dart';
import 'objects/test_string.dart';
export 'objects/test_bytes.dart';
import 'objects/test_bytes.dart';
export 'objects/test_vector_int.dart';
import 'objects/test_vector_int.dart';
export 'objects/test_vector_int_object.dart';
import 'objects/test_vector_int_object.dart';
export 'objects/test_vector_string.dart';
import 'objects/test_vector_string.dart';
export 'objects/test_vector_string_object.dart';
import 'objects/test_vector_string_object.dart';
export 'functions/get_authorization_state.dart';
export 'functions/set_tdlib_parameters.dart';
export 'functions/set_authentication_phone_number.dart';
export 'functions/check_authentication_premium_purchase.dart';
export 'functions/set_authentication_premium_purchase_transaction.dart';
export 'functions/set_authentication_email_address.dart';
export 'functions/resend_authentication_code.dart';
export 'functions/check_authentication_email_code.dart';
export 'functions/check_authentication_code.dart';
export 'functions/request_qr_code_authentication.dart';
export 'functions/register_user.dart';
export 'functions/reset_authentication_email_address.dart';
export 'functions/check_authentication_password.dart';
export 'functions/request_authentication_password_recovery.dart';
export 'functions/check_authentication_password_recovery_code.dart';
export 'functions/recover_authentication_password.dart';
export 'functions/send_authentication_firebase_sms.dart';
export 'functions/report_authentication_code_missing.dart';
export 'functions/check_authentication_bot_token.dart';
export 'functions/log_out.dart';
export 'functions/close.dart';
export 'functions/destroy.dart';
export 'functions/confirm_qr_code_authentication.dart';
export 'functions/get_current_state.dart';
export 'functions/set_database_encryption_key.dart';
export 'functions/get_password_state.dart';
export 'functions/set_password.dart';
export 'functions/set_login_email_address.dart';
export 'functions/resend_login_email_address_code.dart';
export 'functions/check_login_email_address_code.dart';
export 'functions/get_recovery_email_address.dart';
export 'functions/set_recovery_email_address.dart';
export 'functions/check_recovery_email_address_code.dart';
export 'functions/resend_recovery_email_address_code.dart';
export 'functions/cancel_recovery_email_address_verification.dart';
export 'functions/request_password_recovery.dart';
export 'functions/check_password_recovery_code.dart';
export 'functions/recover_password.dart';
export 'functions/reset_password.dart';
export 'functions/cancel_password_reset.dart';
export 'functions/create_temporary_password.dart';
export 'functions/get_temporary_password_state.dart';
export 'functions/get_me.dart';
export 'functions/get_user.dart';
export 'functions/get_user_full_info.dart';
export 'functions/get_basic_group.dart';
export 'functions/get_basic_group_full_info.dart';
export 'functions/get_supergroup.dart';
export 'functions/get_supergroup_full_info.dart';
export 'functions/get_secret_chat.dart';
export 'functions/get_chat.dart';
export 'functions/get_message.dart';
export 'functions/get_message_locally.dart';
export 'functions/get_replied_message.dart';
export 'functions/get_chat_pinned_message.dart';
export 'functions/get_callback_query_message.dart';
export 'functions/get_messages.dart';
export 'functions/get_message_properties.dart';
export 'functions/get_message_thread.dart';
export 'functions/get_message_read_date.dart';
export 'functions/get_message_viewers.dart';
export 'functions/get_file.dart';
export 'functions/get_remote_file.dart';
export 'functions/load_chats.dart';
export 'functions/get_chats.dart';
export 'functions/search_public_chat.dart';
export 'functions/search_public_chats.dart';
export 'functions/search_chats.dart';
export 'functions/search_chats_on_server.dart';
export 'functions/get_recommended_chats.dart';
export 'functions/get_chat_similar_chats.dart';
export 'functions/get_chat_similar_chat_count.dart';
export 'functions/open_chat_similar_chat.dart';
export 'functions/get_bot_similar_bots.dart';
export 'functions/get_bot_similar_bot_count.dart';
export 'functions/open_bot_similar_bot.dart';
export 'functions/get_top_chats.dart';
export 'functions/remove_top_chat.dart';
export 'functions/search_recently_found_chats.dart';
export 'functions/add_recently_found_chat.dart';
export 'functions/remove_recently_found_chat.dart';
export 'functions/clear_recently_found_chats.dart';
export 'functions/get_recently_opened_chats.dart';
export 'functions/check_chat_username.dart';
export 'functions/get_created_public_chats.dart';
export 'functions/check_created_public_chats_limit.dart';
export 'functions/get_suitable_discussion_chats.dart';
export 'functions/get_inactive_supergroup_chats.dart';
export 'functions/get_suitable_personal_chats.dart';
export 'functions/load_saved_messages_topics.dart';
export 'functions/get_saved_messages_topic_history.dart';
export 'functions/get_saved_messages_topic_message_by_date.dart';
export 'functions/delete_saved_messages_topic_history.dart';
export 'functions/delete_saved_messages_topic_messages_by_date.dart';
export 'functions/toggle_saved_messages_topic_is_pinned.dart';
export 'functions/set_pinned_saved_messages_topics.dart';
export 'functions/get_groups_in_common.dart';
export 'functions/get_chat_history.dart';
export 'functions/get_message_thread_history.dart';
export 'functions/delete_chat_history.dart';
export 'functions/delete_chat.dart';
export 'functions/search_chat_messages.dart';
export 'functions/search_messages.dart';
export 'functions/search_secret_messages.dart';
export 'functions/search_saved_messages.dart';
export 'functions/search_call_messages.dart';
export 'functions/search_outgoing_document_messages.dart';
export 'functions/search_public_messages_by_tag.dart';
export 'functions/search_public_stories_by_tag.dart';
export 'functions/search_public_stories_by_location.dart';
export 'functions/search_public_stories_by_venue.dart';
export 'functions/get_searched_for_tags.dart';
export 'functions/remove_searched_for_tag.dart';
export 'functions/clear_searched_for_tags.dart';
export 'functions/delete_all_call_messages.dart';
export 'functions/search_chat_recent_location_messages.dart';
export 'functions/get_chat_message_by_date.dart';
export 'functions/get_chat_sparse_message_positions.dart';
export 'functions/get_chat_message_calendar.dart';
export 'functions/get_chat_message_count.dart';
export 'functions/get_chat_message_position.dart';
export 'functions/get_chat_scheduled_messages.dart';
export 'functions/get_chat_sponsored_messages.dart';
export 'functions/click_chat_sponsored_message.dart';
export 'functions/report_chat_sponsored_message.dart';
export 'functions/get_search_sponsored_chats.dart';
export 'functions/view_sponsored_chat.dart';
export 'functions/open_sponsored_chat.dart';
export 'functions/report_sponsored_chat.dart';
export 'functions/remove_notification.dart';
export 'functions/remove_notification_group.dart';
export 'functions/get_message_link.dart';
export 'functions/get_message_embedding_code.dart';
export 'functions/get_message_link_info.dart';
export 'functions/translate_text.dart';
export 'functions/translate_message_text.dart';
export 'functions/recognize_speech.dart';
export 'functions/rate_speech_recognition.dart';
export 'functions/get_chat_available_message_senders.dart';
export 'functions/set_chat_message_sender.dart';
export 'functions/send_message.dart';
export 'functions/send_message_album.dart';
export 'functions/send_bot_start_message.dart';
export 'functions/send_inline_query_result_message.dart';
export 'functions/forward_messages.dart';
export 'functions/send_quick_reply_shortcut_messages.dart';
export 'functions/resend_messages.dart';
export 'functions/add_local_message.dart';
export 'functions/delete_messages.dart';
export 'functions/delete_chat_messages_by_sender.dart';
export 'functions/delete_chat_messages_by_date.dart';
export 'functions/edit_message_text.dart';
export 'functions/edit_message_live_location.dart';
export 'functions/edit_message_media.dart';
export 'functions/edit_message_caption.dart';
export 'functions/edit_message_reply_markup.dart';
export 'functions/edit_inline_message_text.dart';
export 'functions/edit_inline_message_live_location.dart';
export 'functions/edit_inline_message_media.dart';
export 'functions/edit_inline_message_caption.dart';
export 'functions/edit_inline_message_reply_markup.dart';
export 'functions/edit_message_scheduling_state.dart';
export 'functions/set_message_fact_check.dart';
export 'functions/send_business_message.dart';
export 'functions/send_business_message_album.dart';
export 'functions/edit_business_message_text.dart';
export 'functions/edit_business_message_live_location.dart';
export 'functions/edit_business_message_media.dart';
export 'functions/edit_business_message_caption.dart';
export 'functions/edit_business_message_reply_markup.dart';
export 'functions/stop_business_poll.dart';
export 'functions/set_business_message_is_pinned.dart';
export 'functions/read_business_message.dart';
export 'functions/delete_business_messages.dart';
export 'functions/edit_business_story.dart';
export 'functions/delete_business_story.dart';
export 'functions/set_business_account_name.dart';
export 'functions/set_business_account_bio.dart';
export 'functions/set_business_account_profile_photo.dart';
export 'functions/set_business_account_username.dart';
export 'functions/set_business_account_gift_settings.dart';
export 'functions/get_business_account_star_amount.dart';
export 'functions/transfer_business_account_stars.dart';
export 'functions/check_quick_reply_shortcut_name.dart';
export 'functions/load_quick_reply_shortcuts.dart';
export 'functions/set_quick_reply_shortcut_name.dart';
export 'functions/delete_quick_reply_shortcut.dart';
export 'functions/reorder_quick_reply_shortcuts.dart';
export 'functions/load_quick_reply_shortcut_messages.dart';
export 'functions/delete_quick_reply_shortcut_messages.dart';
export 'functions/add_quick_reply_shortcut_message.dart';
export 'functions/add_quick_reply_shortcut_inline_query_result_message.dart';
export 'functions/add_quick_reply_shortcut_message_album.dart';
export 'functions/readd_quick_reply_shortcut_messages.dart';
export 'functions/edit_quick_reply_message.dart';
export 'functions/get_forum_topic_default_icons.dart';
export 'functions/create_forum_topic.dart';
export 'functions/edit_forum_topic.dart';
export 'functions/get_forum_topic.dart';
export 'functions/get_forum_topic_link.dart';
export 'functions/get_forum_topics.dart';
export 'functions/set_forum_topic_notification_settings.dart';
export 'functions/toggle_forum_topic_is_closed.dart';
export 'functions/toggle_general_forum_topic_is_hidden.dart';
export 'functions/toggle_forum_topic_is_pinned.dart';
export 'functions/set_pinned_forum_topics.dart';
export 'functions/delete_forum_topic.dart';
export 'functions/get_emoji_reaction.dart';
export 'functions/get_custom_emoji_reaction_animations.dart';
export 'functions/get_message_available_reactions.dart';
export 'functions/clear_recent_reactions.dart';
export 'functions/add_message_reaction.dart';
export 'functions/remove_message_reaction.dart';
export 'functions/get_chat_available_paid_message_reaction_senders.dart';
export 'functions/add_pending_paid_message_reaction.dart';
export 'functions/commit_pending_paid_message_reactions.dart';
export 'functions/remove_pending_paid_message_reactions.dart';
export 'functions/set_paid_message_reaction_type.dart';
export 'functions/set_message_reactions.dart';
export 'functions/get_message_added_reactions.dart';
export 'functions/set_default_reaction_type.dart';
export 'functions/get_saved_messages_tags.dart';
export 'functions/set_saved_messages_tag_label.dart';
export 'functions/get_message_effect.dart';
export 'functions/search_quote.dart';
export 'functions/get_text_entities.dart';
export 'functions/parse_text_entities.dart';
export 'functions/parse_markdown.dart';
export 'functions/get_markdown_text.dart';
export 'functions/get_country_flag_emoji.dart';
export 'functions/get_file_mime_type.dart';
export 'functions/get_file_extension.dart';
export 'functions/clean_file_name.dart';
export 'functions/get_language_pack_string.dart';
export 'functions/get_json_value.dart';
export 'functions/get_json_string.dart';
export 'functions/get_theme_parameters_json_string.dart';
export 'functions/set_poll_answer.dart';
export 'functions/get_poll_voters.dart';
export 'functions/stop_poll.dart';
export 'functions/hide_suggested_action.dart';
export 'functions/hide_contact_close_birthdays.dart';
export 'functions/get_business_connection.dart';
export 'functions/get_login_url_info.dart';
export 'functions/get_login_url.dart';
export 'functions/share_users_with_bot.dart';
export 'functions/share_chat_with_bot.dart';
export 'functions/get_inline_query_results.dart';
export 'functions/answer_inline_query.dart';
export 'functions/save_prepared_inline_message.dart';
export 'functions/get_prepared_inline_message.dart';
export 'functions/get_grossing_web_app_bots.dart';
export 'functions/search_web_app.dart';
export 'functions/get_web_app_placeholder.dart';
export 'functions/get_web_app_link_url.dart';
export 'functions/get_main_web_app.dart';
export 'functions/get_web_app_url.dart';
export 'functions/send_web_app_data.dart';
export 'functions/open_web_app.dart';
export 'functions/close_web_app.dart';
export 'functions/answer_web_app_query.dart';
export 'functions/check_web_app_file_download.dart';
export 'functions/get_callback_query_answer.dart';
export 'functions/answer_callback_query.dart';
export 'functions/answer_shipping_query.dart';
export 'functions/answer_pre_checkout_query.dart';
export 'functions/set_game_score.dart';
export 'functions/set_inline_game_score.dart';
export 'functions/get_game_high_scores.dart';
export 'functions/get_inline_game_high_scores.dart';
export 'functions/delete_chat_reply_markup.dart';
export 'functions/send_chat_action.dart';
export 'functions/open_chat.dart';
export 'functions/close_chat.dart';
export 'functions/view_messages.dart';
export 'functions/open_message_content.dart';
export 'functions/click_animated_emoji_message.dart';
export 'functions/get_internal_link.dart';
export 'functions/get_internal_link_type.dart';
export 'functions/get_external_link_info.dart';
export 'functions/get_external_link.dart';
export 'functions/read_all_chat_mentions.dart';
export 'functions/read_all_message_thread_mentions.dart';
export 'functions/read_all_chat_reactions.dart';
export 'functions/read_all_message_thread_reactions.dart';
export 'functions/create_private_chat.dart';
export 'functions/create_basic_group_chat.dart';
export 'functions/create_supergroup_chat.dart';
export 'functions/create_secret_chat.dart';
export 'functions/create_new_basic_group_chat.dart';
export 'functions/create_new_supergroup_chat.dart';
export 'functions/create_new_secret_chat.dart';
export 'functions/upgrade_basic_group_chat_to_supergroup_chat.dart';
export 'functions/get_chat_lists_to_add_chat.dart';
export 'functions/add_chat_to_list.dart';
export 'functions/get_chat_folder.dart';
export 'functions/create_chat_folder.dart';
export 'functions/edit_chat_folder.dart';
export 'functions/delete_chat_folder.dart';
export 'functions/get_chat_folder_chats_to_leave.dart';
export 'functions/get_chat_folder_chat_count.dart';
export 'functions/reorder_chat_folders.dart';
export 'functions/toggle_chat_folder_tags.dart';
export 'functions/get_recommended_chat_folders.dart';
export 'functions/get_chat_folder_default_icon_name.dart';
export 'functions/get_chats_for_chat_folder_invite_link.dart';
export 'functions/create_chat_folder_invite_link.dart';
export 'functions/get_chat_folder_invite_links.dart';
export 'functions/edit_chat_folder_invite_link.dart';
export 'functions/delete_chat_folder_invite_link.dart';
export 'functions/check_chat_folder_invite_link.dart';
export 'functions/add_chat_folder_by_invite_link.dart';
export 'functions/get_chat_folder_new_chats.dart';
export 'functions/process_chat_folder_new_chats.dart';
export 'functions/get_archive_chat_list_settings.dart';
export 'functions/set_archive_chat_list_settings.dart';
export 'functions/set_chat_title.dart';
export 'functions/set_chat_photo.dart';
export 'functions/set_chat_accent_color.dart';
export 'functions/set_chat_profile_accent_color.dart';
export 'functions/set_chat_message_auto_delete_time.dart';
export 'functions/set_chat_emoji_status.dart';
export 'functions/set_chat_permissions.dart';
export 'functions/set_chat_background.dart';
export 'functions/delete_chat_background.dart';
export 'functions/set_chat_theme.dart';
export 'functions/set_chat_draft_message.dart';
export 'functions/set_chat_notification_settings.dart';
export 'functions/toggle_chat_has_protected_content.dart';
export 'functions/toggle_chat_view_as_topics.dart';
export 'functions/toggle_chat_is_translatable.dart';
export 'functions/toggle_chat_is_marked_as_unread.dart';
export 'functions/toggle_chat_default_disable_notification.dart';
export 'functions/set_chat_available_reactions.dart';
export 'functions/set_chat_client_data.dart';
export 'functions/set_chat_description.dart';
export 'functions/set_chat_discussion_group.dart';
export 'functions/set_chat_location.dart';
export 'functions/set_chat_slow_mode_delay.dart';
export 'functions/pin_chat_message.dart';
export 'functions/unpin_chat_message.dart';
export 'functions/unpin_all_chat_messages.dart';
export 'functions/unpin_all_message_thread_messages.dart';
export 'functions/join_chat.dart';
export 'functions/leave_chat.dart';
export 'functions/add_chat_member.dart';
export 'functions/add_chat_members.dart';
export 'functions/set_chat_member_status.dart';
export 'functions/ban_chat_member.dart';
export 'functions/can_transfer_ownership.dart';
export 'functions/transfer_chat_ownership.dart';
export 'functions/get_chat_member.dart';
export 'functions/search_chat_members.dart';
export 'functions/get_chat_administrators.dart';
export 'functions/clear_all_draft_messages.dart';
export 'functions/get_saved_notification_sound.dart';
export 'functions/get_saved_notification_sounds.dart';
export 'functions/add_saved_notification_sound.dart';
export 'functions/remove_saved_notification_sound.dart';
export 'functions/get_chat_notification_settings_exceptions.dart';
export 'functions/get_scope_notification_settings.dart';
export 'functions/set_scope_notification_settings.dart';
export 'functions/set_reaction_notification_settings.dart';
export 'functions/reset_all_notification_settings.dart';
export 'functions/toggle_chat_is_pinned.dart';
export 'functions/set_pinned_chats.dart';
export 'functions/read_chat_list.dart';
export 'functions/get_current_weather.dart';
export 'functions/get_story.dart';
export 'functions/get_chats_to_post_stories.dart';
export 'functions/can_post_story.dart';
export 'functions/post_story.dart';
export 'functions/edit_story.dart';
export 'functions/edit_story_cover.dart';
export 'functions/set_story_privacy_settings.dart';
export 'functions/toggle_story_is_posted_to_chat_page.dart';
export 'functions/delete_story.dart';
export 'functions/get_story_notification_settings_exceptions.dart';
export 'functions/load_active_stories.dart';
export 'functions/set_chat_active_stories_list.dart';
export 'functions/get_chat_active_stories.dart';
export 'functions/get_chat_posted_to_chat_page_stories.dart';
export 'functions/get_chat_archived_stories.dart';
export 'functions/set_chat_pinned_stories.dart';
export 'functions/open_story.dart';
export 'functions/close_story.dart';
export 'functions/get_story_available_reactions.dart';
export 'functions/set_story_reaction.dart';
export 'functions/get_story_interactions.dart';
export 'functions/get_chat_story_interactions.dart';
export 'functions/report_story.dart';
export 'functions/activate_story_stealth_mode.dart';
export 'functions/get_story_public_forwards.dart';
export 'functions/get_chat_boost_level_features.dart';
export 'functions/get_chat_boost_features.dart';
export 'functions/get_available_chat_boost_slots.dart';
export 'functions/get_chat_boost_status.dart';
export 'functions/boost_chat.dart';
export 'functions/get_chat_boost_link.dart';
export 'functions/get_chat_boost_link_info.dart';
export 'functions/get_chat_boosts.dart';
export 'functions/get_user_chat_boosts.dart';
export 'functions/get_attachment_menu_bot.dart';
export 'functions/toggle_bot_is_added_to_attachment_menu.dart';
export 'functions/get_themed_emoji_statuses.dart';
export 'functions/get_recent_emoji_statuses.dart';
export 'functions/get_upgraded_gift_emoji_statuses.dart';
export 'functions/get_default_emoji_statuses.dart';
export 'functions/clear_recent_emoji_statuses.dart';
export 'functions/get_themed_chat_emoji_statuses.dart';
export 'functions/get_default_chat_emoji_statuses.dart';
export 'functions/get_disallowed_chat_emoji_statuses.dart';
export 'functions/download_file.dart';
export 'functions/get_file_downloaded_prefix_size.dart';
export 'functions/cancel_download_file.dart';
export 'functions/get_suggested_file_name.dart';
export 'functions/preliminary_upload_file.dart';
export 'functions/cancel_preliminary_upload_file.dart';
export 'functions/write_generated_file_part.dart';
export 'functions/set_file_generation_progress.dart';
export 'functions/finish_file_generation.dart';
export 'functions/read_file_part.dart';
export 'functions/delete_file.dart';
export 'functions/add_file_to_downloads.dart';
export 'functions/toggle_download_is_paused.dart';
export 'functions/toggle_all_downloads_are_paused.dart';
export 'functions/remove_file_from_downloads.dart';
export 'functions/remove_all_files_from_downloads.dart';
export 'functions/search_file_downloads.dart';
export 'functions/set_application_verification_token.dart';
export 'functions/get_message_file_type.dart';
export 'functions/get_message_import_confirmation_text.dart';
export 'functions/import_messages.dart';
export 'functions/replace_primary_chat_invite_link.dart';
export 'functions/create_chat_invite_link.dart';
export 'functions/create_chat_subscription_invite_link.dart';
export 'functions/edit_chat_invite_link.dart';
export 'functions/edit_chat_subscription_invite_link.dart';
export 'functions/get_chat_invite_link.dart';
export 'functions/get_chat_invite_link_counts.dart';
export 'functions/get_chat_invite_links.dart';
export 'functions/get_chat_invite_link_members.dart';
export 'functions/revoke_chat_invite_link.dart';
export 'functions/delete_revoked_chat_invite_link.dart';
export 'functions/delete_all_revoked_chat_invite_links.dart';
export 'functions/check_chat_invite_link.dart';
export 'functions/join_chat_by_invite_link.dart';
export 'functions/get_chat_join_requests.dart';
export 'functions/process_chat_join_request.dart';
export 'functions/process_chat_join_requests.dart';
export 'functions/create_call.dart';
export 'functions/accept_call.dart';
export 'functions/send_call_signaling_data.dart';
export 'functions/discard_call.dart';
export 'functions/send_call_rating.dart';
export 'functions/send_call_debug_information.dart';
export 'functions/send_call_log.dart';
export 'functions/get_video_chat_available_participants.dart';
export 'functions/set_video_chat_default_participant.dart';
export 'functions/create_video_chat.dart';
export 'functions/create_group_call.dart';
export 'functions/get_video_chat_rtmp_url.dart';
export 'functions/replace_video_chat_rtmp_url.dart';
export 'functions/get_group_call.dart';
export 'functions/start_scheduled_video_chat.dart';
export 'functions/toggle_video_chat_enabled_start_notification.dart';
export 'functions/join_group_call.dart';
export 'functions/join_video_chat.dart';
export 'functions/start_group_call_screen_sharing.dart';
export 'functions/toggle_group_call_screen_sharing_is_paused.dart';
export 'functions/end_group_call_screen_sharing.dart';
export 'functions/set_video_chat_title.dart';
export 'functions/toggle_video_chat_mute_new_participants.dart';
export 'functions/invite_group_call_participant.dart';
export 'functions/decline_group_call_invitation.dart';
export 'functions/ban_group_call_participants.dart';
export 'functions/invite_video_chat_participants.dart';
export 'functions/get_video_chat_invite_link.dart';
export 'functions/revoke_group_call_invite_link.dart';
export 'functions/start_group_call_recording.dart';
export 'functions/end_group_call_recording.dart';
export 'functions/toggle_group_call_is_my_video_paused.dart';
export 'functions/toggle_group_call_is_my_video_enabled.dart';
export 'functions/set_group_call_participant_is_speaking.dart';
export 'functions/toggle_group_call_participant_is_muted.dart';
export 'functions/set_group_call_participant_volume_level.dart';
export 'functions/toggle_group_call_participant_is_hand_raised.dart';
export 'functions/get_group_call_participants.dart';
export 'functions/load_group_call_participants.dart';
export 'functions/leave_group_call.dart';
export 'functions/end_group_call.dart';
export 'functions/get_video_chat_streams.dart';
export 'functions/get_video_chat_stream_segment.dart';
export 'functions/encrypt_group_call_data.dart';
export 'functions/decrypt_group_call_data.dart';
export 'functions/set_message_sender_block_list.dart';
export 'functions/block_message_sender_from_replies.dart';
export 'functions/get_blocked_message_senders.dart';
export 'functions/add_contact.dart';
export 'functions/import_contacts.dart';
export 'functions/get_contacts.dart';
export 'functions/search_contacts.dart';
export 'functions/remove_contacts.dart';
export 'functions/get_imported_contact_count.dart';
export 'functions/change_imported_contacts.dart';
export 'functions/clear_imported_contacts.dart';
export 'functions/set_close_friends.dart';
export 'functions/get_close_friends.dart';
export 'functions/set_user_personal_profile_photo.dart';
export 'functions/suggest_user_profile_photo.dart';
export 'functions/toggle_bot_can_manage_emoji_status.dart';
export 'functions/set_user_emoji_status.dart';
export 'functions/search_user_by_phone_number.dart';
export 'functions/share_phone_number.dart';
export 'functions/get_user_profile_photos.dart';
export 'functions/get_sticker_outline.dart';
export 'functions/get_stickers.dart';
export 'functions/get_all_sticker_emojis.dart';
export 'functions/search_stickers.dart';
export 'functions/get_greeting_stickers.dart';
export 'functions/get_premium_stickers.dart';
export 'functions/get_installed_sticker_sets.dart';
export 'functions/get_archived_sticker_sets.dart';
export 'functions/get_trending_sticker_sets.dart';
export 'functions/get_attached_sticker_sets.dart';
export 'functions/get_sticker_set.dart';
export 'functions/get_sticker_set_name.dart';
export 'functions/search_sticker_set.dart';
export 'functions/search_installed_sticker_sets.dart';
export 'functions/search_sticker_sets.dart';
export 'functions/change_sticker_set.dart';
export 'functions/view_trending_sticker_sets.dart';
export 'functions/reorder_installed_sticker_sets.dart';
export 'functions/get_recent_stickers.dart';
export 'functions/add_recent_sticker.dart';
export 'functions/remove_recent_sticker.dart';
export 'functions/clear_recent_stickers.dart';
export 'functions/get_favorite_stickers.dart';
export 'functions/add_favorite_sticker.dart';
export 'functions/remove_favorite_sticker.dart';
export 'functions/get_sticker_emojis.dart';
export 'functions/search_emojis.dart';
export 'functions/get_keyword_emojis.dart';
export 'functions/get_emoji_categories.dart';
export 'functions/get_animated_emoji.dart';
export 'functions/get_emoji_suggestions_url.dart';
export 'functions/get_custom_emoji_stickers.dart';
export 'functions/get_default_chat_photo_custom_emoji_stickers.dart';
export 'functions/get_default_profile_photo_custom_emoji_stickers.dart';
export 'functions/get_default_background_custom_emoji_stickers.dart';
export 'functions/get_saved_animations.dart';
export 'functions/add_saved_animation.dart';
export 'functions/remove_saved_animation.dart';
export 'functions/get_recent_inline_bots.dart';
export 'functions/get_owned_bots.dart';
export 'functions/search_hashtags.dart';
export 'functions/remove_recent_hashtag.dart';
export 'functions/get_link_preview.dart';
export 'functions/get_web_page_instant_view.dart';
export 'functions/set_profile_photo.dart';
export 'functions/delete_profile_photo.dart';
export 'functions/set_accent_color.dart';
export 'functions/set_profile_accent_color.dart';
export 'functions/set_name.dart';
export 'functions/set_bio.dart';
export 'functions/set_username.dart';
export 'functions/toggle_username_is_active.dart';
export 'functions/reorder_active_usernames.dart';
export 'functions/set_birthdate.dart';
export 'functions/set_personal_chat.dart';
export 'functions/set_emoji_status.dart';
export 'functions/toggle_has_sponsored_messages_enabled.dart';
export 'functions/set_business_location.dart';
export 'functions/set_business_opening_hours.dart';
export 'functions/set_business_greeting_message_settings.dart';
export 'functions/set_business_away_message_settings.dart';
export 'functions/set_business_start_page.dart';
export 'functions/send_phone_number_code.dart';
export 'functions/send_phone_number_firebase_sms.dart';
export 'functions/report_phone_number_code_missing.dart';
export 'functions/resend_phone_number_code.dart';
export 'functions/check_phone_number_code.dart';
export 'functions/get_business_connected_bot.dart';
export 'functions/set_business_connected_bot.dart';
export 'functions/delete_business_connected_bot.dart';
export 'functions/toggle_business_connected_bot_chat_is_paused.dart';
export 'functions/remove_business_connected_bot_from_chat.dart';
export 'functions/get_business_chat_links.dart';
export 'functions/create_business_chat_link.dart';
export 'functions/edit_business_chat_link.dart';
export 'functions/delete_business_chat_link.dart';
export 'functions/get_business_chat_link_info.dart';
export 'functions/get_user_link.dart';
export 'functions/search_user_by_token.dart';
export 'functions/set_commands.dart';
export 'functions/delete_commands.dart';
export 'functions/get_commands.dart';
export 'functions/set_menu_button.dart';
export 'functions/get_menu_button.dart';
export 'functions/set_default_group_administrator_rights.dart';
export 'functions/set_default_channel_administrator_rights.dart';
export 'functions/can_bot_send_messages.dart';
export 'functions/allow_bot_to_send_messages.dart';
export 'functions/send_web_app_custom_request.dart';
export 'functions/get_bot_media_previews.dart';
export 'functions/get_bot_media_preview_info.dart';
export 'functions/add_bot_media_preview.dart';
export 'functions/edit_bot_media_preview.dart';
export 'functions/reorder_bot_media_previews.dart';
export 'functions/delete_bot_media_previews.dart';
export 'functions/set_bot_name.dart';
export 'functions/get_bot_name.dart';
export 'functions/set_bot_profile_photo.dart';
export 'functions/toggle_bot_username_is_active.dart';
export 'functions/reorder_bot_active_usernames.dart';
export 'functions/set_bot_info_description.dart';
export 'functions/get_bot_info_description.dart';
export 'functions/set_bot_info_short_description.dart';
export 'functions/get_bot_info_short_description.dart';
export 'functions/set_message_sender_bot_verification.dart';
export 'functions/remove_message_sender_bot_verification.dart';
export 'functions/get_active_sessions.dart';
export 'functions/terminate_session.dart';
export 'functions/terminate_all_other_sessions.dart';
export 'functions/confirm_session.dart';
export 'functions/toggle_session_can_accept_calls.dart';
export 'functions/toggle_session_can_accept_secret_chats.dart';
export 'functions/set_inactive_session_ttl.dart';
export 'functions/get_connected_websites.dart';
export 'functions/disconnect_website.dart';
export 'functions/disconnect_all_websites.dart';
export 'functions/set_supergroup_username.dart';
export 'functions/toggle_supergroup_username_is_active.dart';
export 'functions/disable_all_supergroup_usernames.dart';
export 'functions/reorder_supergroup_active_usernames.dart';
export 'functions/set_supergroup_sticker_set.dart';
export 'functions/set_supergroup_custom_emoji_sticker_set.dart';
export 'functions/set_supergroup_unrestrict_boost_count.dart';
export 'functions/toggle_supergroup_sign_messages.dart';
export 'functions/toggle_supergroup_join_to_send_messages.dart';
export 'functions/toggle_supergroup_join_by_request.dart';
export 'functions/toggle_supergroup_is_all_history_available.dart';
export 'functions/toggle_supergroup_can_have_sponsored_messages.dart';
export 'functions/toggle_supergroup_has_automatic_translation.dart';
export 'functions/toggle_supergroup_has_hidden_members.dart';
export 'functions/toggle_supergroup_has_aggressive_anti_spam_enabled.dart';
export 'functions/toggle_supergroup_is_forum.dart';
export 'functions/toggle_supergroup_is_broadcast_group.dart';
export 'functions/report_supergroup_spam.dart';
export 'functions/report_supergroup_anti_spam_false_positive.dart';
export 'functions/get_supergroup_members.dart';
export 'functions/close_secret_chat.dart';
export 'functions/get_chat_event_log.dart';
export 'functions/get_time_zones.dart';
export 'functions/get_payment_form.dart';
export 'functions/validate_order_info.dart';
export 'functions/send_payment_form.dart';
export 'functions/get_payment_receipt.dart';
export 'functions/get_saved_order_info.dart';
export 'functions/delete_saved_order_info.dart';
export 'functions/delete_saved_credentials.dart';
export 'functions/set_gift_settings.dart';
export 'functions/get_available_gifts.dart';
export 'functions/send_gift.dart';
export 'functions/sell_gift.dart';
export 'functions/toggle_gift_is_saved.dart';
export 'functions/set_pinned_gifts.dart';
export 'functions/toggle_chat_gift_notifications.dart';
export 'functions/get_gift_upgrade_preview.dart';
export 'functions/upgrade_gift.dart';
export 'functions/transfer_gift.dart';
export 'functions/send_resold_gift.dart';
export 'functions/get_received_gifts.dart';
export 'functions/get_received_gift.dart';
export 'functions/get_upgraded_gift.dart';
export 'functions/get_upgraded_gift_withdrawal_url.dart';
export 'functions/set_gift_resale_price.dart';
export 'functions/search_gifts_for_resale.dart';
export 'functions/create_invoice_link.dart';
export 'functions/refund_star_payment.dart';
export 'functions/get_support_user.dart';
export 'functions/get_background_url.dart';
export 'functions/search_background.dart';
export 'functions/set_default_background.dart';
export 'functions/delete_default_background.dart';
export 'functions/get_installed_backgrounds.dart';
export 'functions/remove_installed_background.dart';
export 'functions/reset_installed_backgrounds.dart';
export 'functions/get_localization_target_info.dart';
export 'functions/get_language_pack_info.dart';
export 'functions/get_language_pack_strings.dart';
export 'functions/synchronize_language_pack.dart';
export 'functions/add_custom_server_language_pack.dart';
export 'functions/set_custom_language_pack.dart';
export 'functions/edit_custom_language_pack_info.dart';
export 'functions/set_custom_language_pack_string.dart';
export 'functions/delete_language_pack.dart';
export 'functions/register_device.dart';
export 'functions/process_push_notification.dart';
export 'functions/get_push_receiver_id.dart';
export 'functions/get_recently_visited_t_me_urls.dart';
export 'functions/set_user_privacy_setting_rules.dart';
export 'functions/get_user_privacy_setting_rules.dart';
export 'functions/set_read_date_privacy_settings.dart';
export 'functions/get_read_date_privacy_settings.dart';
export 'functions/set_new_chat_privacy_settings.dart';
export 'functions/get_new_chat_privacy_settings.dart';
export 'functions/get_paid_message_revenue.dart';
export 'functions/allow_unpaid_messages_from_user.dart';
export 'functions/set_chat_paid_message_star_count.dart';
export 'functions/can_send_message_to_user.dart';
export 'functions/get_option.dart';
export 'functions/set_option.dart';
export 'functions/set_account_ttl.dart';
export 'functions/get_account_ttl.dart';
export 'functions/delete_account.dart';
export 'functions/set_default_message_auto_delete_time.dart';
export 'functions/get_default_message_auto_delete_time.dart';
export 'functions/remove_chat_action_bar.dart';
export 'functions/report_chat.dart';
export 'functions/report_chat_photo.dart';
export 'functions/report_message_reactions.dart';
export 'functions/get_chat_revenue_statistics.dart';
export 'functions/get_chat_revenue_withdrawal_url.dart';
export 'functions/get_chat_revenue_transactions.dart';
export 'functions/get_star_revenue_statistics.dart';
export 'functions/get_star_withdrawal_url.dart';
export 'functions/get_star_ad_account_url.dart';
export 'functions/get_chat_statistics.dart';
export 'functions/get_message_statistics.dart';
export 'functions/get_message_public_forwards.dart';
export 'functions/get_story_statistics.dart';
export 'functions/get_statistical_graph.dart';
export 'functions/get_storage_statistics.dart';
export 'functions/get_storage_statistics_fast.dart';
export 'functions/get_database_statistics.dart';
export 'functions/optimize_storage.dart';
export 'functions/set_network_type.dart';
export 'functions/get_network_statistics.dart';
export 'functions/add_network_statistics.dart';
export 'functions/reset_network_statistics.dart';
export 'functions/get_auto_download_settings_presets.dart';
export 'functions/set_auto_download_settings.dart';
export 'functions/get_autosave_settings.dart';
export 'functions/set_autosave_settings.dart';
export 'functions/clear_autosave_settings_exceptions.dart';
export 'functions/get_bank_card_info.dart';
export 'functions/get_passport_element.dart';
export 'functions/get_all_passport_elements.dart';
export 'functions/set_passport_element.dart';
export 'functions/delete_passport_element.dart';
export 'functions/set_passport_element_errors.dart';
export 'functions/get_preferred_country_language.dart';
export 'functions/send_email_address_verification_code.dart';
export 'functions/resend_email_address_verification_code.dart';
export 'functions/check_email_address_verification_code.dart';
export 'functions/get_passport_authorization_form.dart';
export 'functions/get_passport_authorization_form_available_elements.dart';
export 'functions/send_passport_authorization_form.dart';
export 'functions/set_bot_updates_status.dart';
export 'functions/upload_sticker_file.dart';
export 'functions/get_suggested_sticker_set_name.dart';
export 'functions/check_sticker_set_name.dart';
export 'functions/create_new_sticker_set.dart';
export 'functions/add_sticker_to_set.dart';
export 'functions/replace_sticker_in_set.dart';
export 'functions/set_sticker_set_thumbnail.dart';
export 'functions/set_custom_emoji_sticker_set_thumbnail.dart';
export 'functions/set_sticker_set_title.dart';
export 'functions/delete_sticker_set.dart';
export 'functions/set_sticker_position_in_set.dart';
export 'functions/remove_sticker_from_set.dart';
export 'functions/set_sticker_emojis.dart';
export 'functions/set_sticker_keywords.dart';
export 'functions/set_sticker_mask_position.dart';
export 'functions/get_owned_sticker_sets.dart';
export 'functions/get_map_thumbnail_file.dart';
export 'functions/get_premium_limit.dart';
export 'functions/get_premium_features.dart';
export 'functions/get_premium_sticker_examples.dart';
export 'functions/get_premium_info_sticker.dart';
export 'functions/view_premium_feature.dart';
export 'functions/click_premium_subscription_button.dart';
export 'functions/get_premium_state.dart';
export 'functions/get_premium_gift_payment_options.dart';
export 'functions/get_premium_giveaway_payment_options.dart';
export 'functions/check_premium_gift_code.dart';
export 'functions/apply_premium_gift_code.dart';
export 'functions/gift_premium_with_stars.dart';
export 'functions/launch_prepaid_giveaway.dart';
export 'functions/get_giveaway_info.dart';
export 'functions/get_star_payment_options.dart';
export 'functions/get_star_gift_payment_options.dart';
export 'functions/get_star_giveaway_payment_options.dart';
export 'functions/get_star_transactions.dart';
export 'functions/get_star_subscriptions.dart';
export 'functions/can_purchase_from_store.dart';
export 'functions/assign_store_transaction.dart';
export 'functions/edit_star_subscription.dart';
export 'functions/edit_user_star_subscription.dart';
export 'functions/reuse_star_subscription.dart';
export 'functions/set_chat_affiliate_program.dart';
export 'functions/search_chat_affiliate_program.dart';
export 'functions/search_affiliate_programs.dart';
export 'functions/connect_affiliate_program.dart';
export 'functions/disconnect_affiliate_program.dart';
export 'functions/get_connected_affiliate_program.dart';
export 'functions/get_connected_affiliate_programs.dart';
export 'functions/get_business_features.dart';
export 'functions/accept_terms_of_service.dart';
export 'functions/search_strings_by_prefix.dart';
export 'functions/send_custom_request.dart';
export 'functions/answer_custom_query.dart';
export 'functions/set_alarm.dart';
export 'functions/get_countries.dart';
export 'functions/get_country_code.dart';
export 'functions/get_phone_number_info.dart';
export 'functions/get_phone_number_info_sync.dart';
export 'functions/get_collectible_item_info.dart';
export 'functions/get_deep_link_info.dart';
export 'functions/get_application_config.dart';
export 'functions/save_application_log_event.dart';
export 'functions/get_application_download_link.dart';
export 'functions/add_proxy.dart';
export 'functions/edit_proxy.dart';
export 'functions/enable_proxy.dart';
export 'functions/disable_proxy.dart';
export 'functions/remove_proxy.dart';
export 'functions/get_proxies.dart';
export 'functions/get_proxy_link.dart';
export 'functions/ping_proxy.dart';
export 'functions/set_log_stream.dart';
export 'functions/get_log_stream.dart';
export 'functions/set_log_verbosity_level.dart';
export 'functions/get_log_verbosity_level.dart';
export 'functions/get_log_tags.dart';
export 'functions/set_log_tag_verbosity_level.dart';
export 'functions/get_log_tag_verbosity_level.dart';
export 'functions/add_log_message.dart';
export 'functions/get_user_support_info.dart';
export 'functions/set_user_support_info.dart';
export 'functions/get_support_name.dart';
export 'functions/test_call_empty.dart';
export 'functions/test_call_string.dart';
export 'functions/test_call_bytes.dart';
export 'functions/test_call_vector_int.dart';
export 'functions/test_call_vector_int_object.dart';
export 'functions/test_call_vector_string.dart';
export 'functions/test_call_vector_string_object.dart';
export 'functions/test_square_int.dart';
export 'functions/test_network.dart';
export 'functions/test_proxy.dart';
export 'functions/test_get_difference.dart';
export 'functions/test_use_update.dart';
export 'functions/test_return_error.dart';

TdObject? convertToObject(String? query) {
  if (query == null) return null;
  final newJson = json.decode(query);
  switch (newJson['@type']) {
    case 'error':
      return TdError.fromJson(newJson);
    case 'ok':
      return Ok.fromJson(newJson);
    case 'authenticationCodeType':
      return AuthenticationCodeType.fromJson(newJson);
    case 'authenticationCodeTypeTelegramMessage':
      return AuthenticationCodeTypeTelegramMessage.fromJson(newJson);
    case 'authenticationCodeTypeSms':
      return AuthenticationCodeTypeSms.fromJson(newJson);
    case 'authenticationCodeTypeSmsWord':
      return AuthenticationCodeTypeSmsWord.fromJson(newJson);
    case 'authenticationCodeTypeSmsPhrase':
      return AuthenticationCodeTypeSmsPhrase.fromJson(newJson);
    case 'authenticationCodeTypeCall':
      return AuthenticationCodeTypeCall.fromJson(newJson);
    case 'authenticationCodeTypeFlashCall':
      return AuthenticationCodeTypeFlashCall.fromJson(newJson);
    case 'authenticationCodeTypeMissedCall':
      return AuthenticationCodeTypeMissedCall.fromJson(newJson);
    case 'authenticationCodeTypeFragment':
      return AuthenticationCodeTypeFragment.fromJson(newJson);
    case 'authenticationCodeTypeFirebaseAndroid':
      return AuthenticationCodeTypeFirebaseAndroid.fromJson(newJson);
    case 'authenticationCodeTypeFirebaseIos':
      return AuthenticationCodeTypeFirebaseIos.fromJson(newJson);
    case 'authenticationCodeInfo':
      return AuthenticationCodeInfo.fromJson(newJson);
    case 'emailAddressAuthenticationCodeInfo':
      return EmailAddressAuthenticationCodeInfo.fromJson(newJson);
    case 'emailAddressAuthentication':
      return EmailAddressAuthentication.fromJson(newJson);
    case 'emailAddressAuthenticationCode':
      return EmailAddressAuthenticationCode.fromJson(newJson);
    case 'emailAddressAuthenticationAppleId':
      return EmailAddressAuthenticationAppleId.fromJson(newJson);
    case 'emailAddressAuthenticationGoogleId':
      return EmailAddressAuthenticationGoogleId.fromJson(newJson);
    case 'emailAddressResetState':
      return EmailAddressResetState.fromJson(newJson);
    case 'emailAddressResetStateAvailable':
      return EmailAddressResetStateAvailable.fromJson(newJson);
    case 'emailAddressResetStatePending':
      return EmailAddressResetStatePending.fromJson(newJson);
    case 'textEntity':
      return TextEntity.fromJson(newJson);
    case 'textEntities':
      return TextEntities.fromJson(newJson);
    case 'formattedText':
      return FormattedText.fromJson(newJson);
    case 'termsOfService':
      return TermsOfService.fromJson(newJson);
    case 'authorizationState':
      return AuthorizationState.fromJson(newJson);
    case 'authorizationStateWaitTdlibParameters':
      return AuthorizationStateWaitTdlibParameters.fromJson(newJson);
    case 'authorizationStateWaitPhoneNumber':
      return AuthorizationStateWaitPhoneNumber.fromJson(newJson);
    case 'authorizationStateWaitPremiumPurchase':
      return AuthorizationStateWaitPremiumPurchase.fromJson(newJson);
    case 'authorizationStateWaitEmailAddress':
      return AuthorizationStateWaitEmailAddress.fromJson(newJson);
    case 'authorizationStateWaitEmailCode':
      return AuthorizationStateWaitEmailCode.fromJson(newJson);
    case 'authorizationStateWaitCode':
      return AuthorizationStateWaitCode.fromJson(newJson);
    case 'authorizationStateWaitOtherDeviceConfirmation':
      return AuthorizationStateWaitOtherDeviceConfirmation.fromJson(newJson);
    case 'authorizationStateWaitRegistration':
      return AuthorizationStateWaitRegistration.fromJson(newJson);
    case 'authorizationStateWaitPassword':
      return AuthorizationStateWaitPassword.fromJson(newJson);
    case 'authorizationStateReady':
      return AuthorizationStateReady.fromJson(newJson);
    case 'authorizationStateLoggingOut':
      return AuthorizationStateLoggingOut.fromJson(newJson);
    case 'authorizationStateClosing':
      return AuthorizationStateClosing.fromJson(newJson);
    case 'authorizationStateClosed':
      return AuthorizationStateClosed.fromJson(newJson);
    case 'firebaseDeviceVerificationParameters':
      return FirebaseDeviceVerificationParameters.fromJson(newJson);
    case 'firebaseDeviceVerificationParametersSafetyNet':
      return FirebaseDeviceVerificationParametersSafetyNet.fromJson(newJson);
    case 'firebaseDeviceVerificationParametersPlayIntegrity':
      return FirebaseDeviceVerificationParametersPlayIntegrity.fromJson(
          newJson);
    case 'passwordState':
      return PasswordState.fromJson(newJson);
    case 'recoveryEmailAddress':
      return RecoveryEmailAddress.fromJson(newJson);
    case 'temporaryPasswordState':
      return TemporaryPasswordState.fromJson(newJson);
    case 'localFile':
      return LocalFile.fromJson(newJson);
    case 'remoteFile':
      return RemoteFile.fromJson(newJson);
    case 'file':
      return File.fromJson(newJson);
    case 'inputFile':
      return InputFile.fromJson(newJson);
    case 'inputFileId':
      return InputFileId.fromJson(newJson);
    case 'inputFileRemote':
      return InputFileRemote.fromJson(newJson);
    case 'inputFileLocal':
      return InputFileLocal.fromJson(newJson);
    case 'inputFileGenerated':
      return InputFileGenerated.fromJson(newJson);
    case 'photoSize':
      return PhotoSize.fromJson(newJson);
    case 'minithumbnail':
      return Minithumbnail.fromJson(newJson);
    case 'thumbnailFormat':
      return ThumbnailFormat.fromJson(newJson);
    case 'thumbnailFormatJpeg':
      return ThumbnailFormatJpeg.fromJson(newJson);
    case 'thumbnailFormatGif':
      return ThumbnailFormatGif.fromJson(newJson);
    case 'thumbnailFormatMpeg4':
      return ThumbnailFormatMpeg4.fromJson(newJson);
    case 'thumbnailFormatPng':
      return ThumbnailFormatPng.fromJson(newJson);
    case 'thumbnailFormatTgs':
      return ThumbnailFormatTgs.fromJson(newJson);
    case 'thumbnailFormatWebm':
      return ThumbnailFormatWebm.fromJson(newJson);
    case 'thumbnailFormatWebp':
      return ThumbnailFormatWebp.fromJson(newJson);
    case 'thumbnail':
      return Thumbnail.fromJson(newJson);
    case 'maskPoint':
      return MaskPoint.fromJson(newJson);
    case 'maskPointForehead':
      return MaskPointForehead.fromJson(newJson);
    case 'maskPointEyes':
      return MaskPointEyes.fromJson(newJson);
    case 'maskPointMouth':
      return MaskPointMouth.fromJson(newJson);
    case 'maskPointChin':
      return MaskPointChin.fromJson(newJson);
    case 'maskPosition':
      return MaskPosition.fromJson(newJson);
    case 'stickerFormat':
      return StickerFormat.fromJson(newJson);
    case 'stickerFormatWebp':
      return StickerFormatWebp.fromJson(newJson);
    case 'stickerFormatTgs':
      return StickerFormatTgs.fromJson(newJson);
    case 'stickerFormatWebm':
      return StickerFormatWebm.fromJson(newJson);
    case 'stickerType':
      return StickerType.fromJson(newJson);
    case 'stickerTypeRegular':
      return StickerTypeRegular.fromJson(newJson);
    case 'stickerTypeMask':
      return StickerTypeMask.fromJson(newJson);
    case 'stickerTypeCustomEmoji':
      return StickerTypeCustomEmoji.fromJson(newJson);
    case 'stickerFullType':
      return StickerFullType.fromJson(newJson);
    case 'stickerFullTypeRegular':
      return StickerFullTypeRegular.fromJson(newJson);
    case 'stickerFullTypeMask':
      return StickerFullTypeMask.fromJson(newJson);
    case 'stickerFullTypeCustomEmoji':
      return StickerFullTypeCustomEmoji.fromJson(newJson);
    case 'closedVectorPath':
      return ClosedVectorPath.fromJson(newJson);
    case 'outline':
      return Outline.fromJson(newJson);
    case 'pollOption':
      return PollOption.fromJson(newJson);
    case 'pollType':
      return PollType.fromJson(newJson);
    case 'pollTypeRegular':
      return PollTypeRegular.fromJson(newJson);
    case 'pollTypeQuiz':
      return PollTypeQuiz.fromJson(newJson);
    case 'animation':
      return Animation.fromJson(newJson);
    case 'audio':
      return Audio.fromJson(newJson);
    case 'document':
      return Document.fromJson(newJson);
    case 'photo':
      return Photo.fromJson(newJson);
    case 'sticker':
      return Sticker.fromJson(newJson);
    case 'video':
      return Video.fromJson(newJson);
    case 'videoNote':
      return VideoNote.fromJson(newJson);
    case 'voiceNote':
      return VoiceNote.fromJson(newJson);
    case 'animatedEmoji':
      return AnimatedEmoji.fromJson(newJson);
    case 'contact':
      return Contact.fromJson(newJson);
    case 'location':
      return Location.fromJson(newJson);
    case 'venue':
      return Venue.fromJson(newJson);
    case 'game':
      return Game.fromJson(newJson);
    case 'webApp':
      return WebApp.fromJson(newJson);
    case 'poll':
      return Poll.fromJson(newJson);
    case 'alternativeVideo':
      return AlternativeVideo.fromJson(newJson);
    case 'background':
      return Background.fromJson(newJson);
    case 'backgrounds':
      return Backgrounds.fromJson(newJson);
    case 'chatBackground':
      return ChatBackground.fromJson(newJson);
    case 'profilePhoto':
      return ProfilePhoto.fromJson(newJson);
    case 'chatPhotoInfo':
      return ChatPhotoInfo.fromJson(newJson);
    case 'userType':
      return UserType.fromJson(newJson);
    case 'userTypeRegular':
      return UserTypeRegular.fromJson(newJson);
    case 'userTypeDeleted':
      return UserTypeDeleted.fromJson(newJson);
    case 'userTypeBot':
      return UserTypeBot.fromJson(newJson);
    case 'userTypeUnknown':
      return UserTypeUnknown.fromJson(newJson);
    case 'botCommand':
      return BotCommand.fromJson(newJson);
    case 'botCommands':
      return BotCommands.fromJson(newJson);
    case 'botMenuButton':
      return BotMenuButton.fromJson(newJson);
    case 'botVerificationParameters':
      return BotVerificationParameters.fromJson(newJson);
    case 'botVerification':
      return BotVerification.fromJson(newJson);
    case 'verificationStatus':
      return VerificationStatus.fromJson(newJson);
    case 'chatLocation':
      return ChatLocation.fromJson(newJson);
    case 'birthdate':
      return Birthdate.fromJson(newJson);
    case 'closeBirthdayUser':
      return CloseBirthdayUser.fromJson(newJson);
    case 'businessAwayMessageSchedule':
      return BusinessAwayMessageSchedule.fromJson(newJson);
    case 'businessAwayMessageScheduleAlways':
      return BusinessAwayMessageScheduleAlways.fromJson(newJson);
    case 'businessAwayMessageScheduleOutsideOfOpeningHours':
      return BusinessAwayMessageScheduleOutsideOfOpeningHours.fromJson(newJson);
    case 'businessAwayMessageScheduleCustom':
      return BusinessAwayMessageScheduleCustom.fromJson(newJson);
    case 'businessLocation':
      return BusinessLocation.fromJson(newJson);
    case 'businessRecipients':
      return BusinessRecipients.fromJson(newJson);
    case 'businessAwayMessageSettings':
      return BusinessAwayMessageSettings.fromJson(newJson);
    case 'businessGreetingMessageSettings':
      return BusinessGreetingMessageSettings.fromJson(newJson);
    case 'businessBotRights':
      return BusinessBotRights.fromJson(newJson);
    case 'businessConnectedBot':
      return BusinessConnectedBot.fromJson(newJson);
    case 'businessStartPage':
      return BusinessStartPage.fromJson(newJson);
    case 'inputBusinessStartPage':
      return InputBusinessStartPage.fromJson(newJson);
    case 'businessOpeningHoursInterval':
      return BusinessOpeningHoursInterval.fromJson(newJson);
    case 'businessOpeningHours':
      return BusinessOpeningHours.fromJson(newJson);
    case 'businessInfo':
      return BusinessInfo.fromJson(newJson);
    case 'businessChatLink':
      return BusinessChatLink.fromJson(newJson);
    case 'businessChatLinks':
      return BusinessChatLinks.fromJson(newJson);
    case 'inputBusinessChatLink':
      return InputBusinessChatLink.fromJson(newJson);
    case 'businessChatLinkInfo':
      return BusinessChatLinkInfo.fromJson(newJson);
    case 'chatPhotoStickerType':
      return ChatPhotoStickerType.fromJson(newJson);
    case 'chatPhotoStickerTypeRegularOrMask':
      return ChatPhotoStickerTypeRegularOrMask.fromJson(newJson);
    case 'chatPhotoStickerTypeCustomEmoji':
      return ChatPhotoStickerTypeCustomEmoji.fromJson(newJson);
    case 'chatPhotoSticker':
      return ChatPhotoSticker.fromJson(newJson);
    case 'animatedChatPhoto':
      return AnimatedChatPhoto.fromJson(newJson);
    case 'chatPhoto':
      return ChatPhoto.fromJson(newJson);
    case 'chatPhotos':
      return ChatPhotos.fromJson(newJson);
    case 'inputChatPhoto':
      return InputChatPhoto.fromJson(newJson);
    case 'inputChatPhotoPrevious':
      return InputChatPhotoPrevious.fromJson(newJson);
    case 'inputChatPhotoStatic':
      return InputChatPhotoStatic.fromJson(newJson);
    case 'inputChatPhotoAnimation':
      return InputChatPhotoAnimation.fromJson(newJson);
    case 'inputChatPhotoSticker':
      return InputChatPhotoSticker.fromJson(newJson);
    case 'chatPermissions':
      return ChatPermissions.fromJson(newJson);
    case 'chatAdministratorRights':
      return ChatAdministratorRights.fromJson(newJson);
    case 'starAmount':
      return StarAmount.fromJson(newJson);
    case 'starSubscriptionType':
      return StarSubscriptionType.fromJson(newJson);
    case 'starSubscriptionTypeChannel':
      return StarSubscriptionTypeChannel.fromJson(newJson);
    case 'starSubscriptionTypeBot':
      return StarSubscriptionTypeBot.fromJson(newJson);
    case 'starSubscriptionPricing':
      return StarSubscriptionPricing.fromJson(newJson);
    case 'starSubscription':
      return StarSubscription.fromJson(newJson);
    case 'starSubscriptions':
      return StarSubscriptions.fromJson(newJson);
    case 'affiliateType':
      return AffiliateType.fromJson(newJson);
    case 'affiliateTypeCurrentUser':
      return AffiliateTypeCurrentUser.fromJson(newJson);
    case 'affiliateTypeBot':
      return AffiliateTypeBot.fromJson(newJson);
    case 'affiliateTypeChannel':
      return AffiliateTypeChannel.fromJson(newJson);
    case 'affiliateProgramSortOrder':
      return AffiliateProgramSortOrder.fromJson(newJson);
    case 'affiliateProgramSortOrderProfitability':
      return AffiliateProgramSortOrderProfitability.fromJson(newJson);
    case 'affiliateProgramSortOrderCreationDate':
      return AffiliateProgramSortOrderCreationDate.fromJson(newJson);
    case 'affiliateProgramSortOrderRevenue':
      return AffiliateProgramSortOrderRevenue.fromJson(newJson);
    case 'affiliateProgramParameters':
      return AffiliateProgramParameters.fromJson(newJson);
    case 'affiliateProgramInfo':
      return AffiliateProgramInfo.fromJson(newJson);
    case 'affiliateInfo':
      return AffiliateInfo.fromJson(newJson);
    case 'foundAffiliateProgram':
      return FoundAffiliateProgram.fromJson(newJson);
    case 'foundAffiliatePrograms':
      return FoundAffiliatePrograms.fromJson(newJson);
    case 'connectedAffiliateProgram':
      return ConnectedAffiliateProgram.fromJson(newJson);
    case 'connectedAffiliatePrograms':
      return ConnectedAffiliatePrograms.fromJson(newJson);
    case 'productInfo':
      return ProductInfo.fromJson(newJson);
    case 'premiumPaymentOption':
      return PremiumPaymentOption.fromJson(newJson);
    case 'premiumStatePaymentOption':
      return PremiumStatePaymentOption.fromJson(newJson);
    case 'premiumGiftPaymentOption':
      return PremiumGiftPaymentOption.fromJson(newJson);
    case 'premiumGiftPaymentOptions':
      return PremiumGiftPaymentOptions.fromJson(newJson);
    case 'premiumGiveawayPaymentOption':
      return PremiumGiveawayPaymentOption.fromJson(newJson);
    case 'premiumGiveawayPaymentOptions':
      return PremiumGiveawayPaymentOptions.fromJson(newJson);
    case 'premiumGiftCodeInfo':
      return PremiumGiftCodeInfo.fromJson(newJson);
    case 'starPaymentOption':
      return StarPaymentOption.fromJson(newJson);
    case 'starPaymentOptions':
      return StarPaymentOptions.fromJson(newJson);
    case 'starGiveawayWinnerOption':
      return StarGiveawayWinnerOption.fromJson(newJson);
    case 'starGiveawayPaymentOption':
      return StarGiveawayPaymentOption.fromJson(newJson);
    case 'starGiveawayPaymentOptions':
      return StarGiveawayPaymentOptions.fromJson(newJson);
    case 'acceptedGiftTypes':
      return AcceptedGiftTypes.fromJson(newJson);
    case 'giftSettings':
      return GiftSettings.fromJson(newJson);
    case 'upgradedGiftModel':
      return UpgradedGiftModel.fromJson(newJson);
    case 'upgradedGiftSymbol':
      return UpgradedGiftSymbol.fromJson(newJson);
    case 'upgradedGiftBackdropColors':
      return UpgradedGiftBackdropColors.fromJson(newJson);
    case 'upgradedGiftBackdrop':
      return UpgradedGiftBackdrop.fromJson(newJson);
    case 'upgradedGiftOriginalDetails':
      return UpgradedGiftOriginalDetails.fromJson(newJson);
    case 'gift':
      return Gift.fromJson(newJson);
    case 'upgradedGift':
      return UpgradedGift.fromJson(newJson);
    case 'upgradeGiftResult':
      return UpgradeGiftResult.fromJson(newJson);
    case 'availableGift':
      return AvailableGift.fromJson(newJson);
    case 'availableGifts':
      return AvailableGifts.fromJson(newJson);
    case 'upgradedGiftAttributeId':
      return UpgradedGiftAttributeId.fromJson(newJson);
    case 'upgradedGiftAttributeIdModel':
      return UpgradedGiftAttributeIdModel.fromJson(newJson);
    case 'upgradedGiftAttributeIdSymbol':
      return UpgradedGiftAttributeIdSymbol.fromJson(newJson);
    case 'upgradedGiftAttributeIdBackdrop':
      return UpgradedGiftAttributeIdBackdrop.fromJson(newJson);
    case 'upgradedGiftModelCount':
      return UpgradedGiftModelCount.fromJson(newJson);
    case 'upgradedGiftSymbolCount':
      return UpgradedGiftSymbolCount.fromJson(newJson);
    case 'upgradedGiftBackdropCount':
      return UpgradedGiftBackdropCount.fromJson(newJson);
    case 'giftForResaleOrder':
      return GiftForResaleOrder.fromJson(newJson);
    case 'giftForResaleOrderPrice':
      return GiftForResaleOrderPrice.fromJson(newJson);
    case 'giftForResaleOrderPriceChangeDate':
      return GiftForResaleOrderPriceChangeDate.fromJson(newJson);
    case 'giftForResaleOrderNumber':
      return GiftForResaleOrderNumber.fromJson(newJson);
    case 'giftForResale':
      return GiftForResale.fromJson(newJson);
    case 'giftsForResale':
      return GiftsForResale.fromJson(newJson);
    case 'sentGift':
      return SentGift.fromJson(newJson);
    case 'sentGiftRegular':
      return SentGiftRegular.fromJson(newJson);
    case 'sentGiftUpgraded':
      return SentGiftUpgraded.fromJson(newJson);
    case 'receivedGift':
      return ReceivedGift.fromJson(newJson);
    case 'receivedGifts':
      return ReceivedGifts.fromJson(newJson);
    case 'giftUpgradePreview':
      return GiftUpgradePreview.fromJson(newJson);
    case 'starTransactionDirection':
      return StarTransactionDirection.fromJson(newJson);
    case 'starTransactionDirectionIncoming':
      return StarTransactionDirectionIncoming.fromJson(newJson);
    case 'starTransactionDirectionOutgoing':
      return StarTransactionDirectionOutgoing.fromJson(newJson);
    case 'starTransactionType':
      return StarTransactionType.fromJson(newJson);
    case 'starTransactionTypePremiumBotDeposit':
      return StarTransactionTypePremiumBotDeposit.fromJson(newJson);
    case 'starTransactionTypeAppStoreDeposit':
      return StarTransactionTypeAppStoreDeposit.fromJson(newJson);
    case 'starTransactionTypeGooglePlayDeposit':
      return StarTransactionTypeGooglePlayDeposit.fromJson(newJson);
    case 'starTransactionTypeFragmentDeposit':
      return StarTransactionTypeFragmentDeposit.fromJson(newJson);
    case 'starTransactionTypeUserDeposit':
      return StarTransactionTypeUserDeposit.fromJson(newJson);
    case 'starTransactionTypeGiveawayDeposit':
      return StarTransactionTypeGiveawayDeposit.fromJson(newJson);
    case 'starTransactionTypeFragmentWithdrawal':
      return StarTransactionTypeFragmentWithdrawal.fromJson(newJson);
    case 'starTransactionTypeTelegramAdsWithdrawal':
      return StarTransactionTypeTelegramAdsWithdrawal.fromJson(newJson);
    case 'starTransactionTypeTelegramApiUsage':
      return StarTransactionTypeTelegramApiUsage.fromJson(newJson);
    case 'starTransactionTypeBotPaidMediaPurchase':
      return StarTransactionTypeBotPaidMediaPurchase.fromJson(newJson);
    case 'starTransactionTypeBotPaidMediaSale':
      return StarTransactionTypeBotPaidMediaSale.fromJson(newJson);
    case 'starTransactionTypeChannelPaidMediaPurchase':
      return StarTransactionTypeChannelPaidMediaPurchase.fromJson(newJson);
    case 'starTransactionTypeChannelPaidMediaSale':
      return StarTransactionTypeChannelPaidMediaSale.fromJson(newJson);
    case 'starTransactionTypeBotInvoicePurchase':
      return StarTransactionTypeBotInvoicePurchase.fromJson(newJson);
    case 'starTransactionTypeBotInvoiceSale':
      return StarTransactionTypeBotInvoiceSale.fromJson(newJson);
    case 'starTransactionTypeBotSubscriptionPurchase':
      return StarTransactionTypeBotSubscriptionPurchase.fromJson(newJson);
    case 'starTransactionTypeBotSubscriptionSale':
      return StarTransactionTypeBotSubscriptionSale.fromJson(newJson);
    case 'starTransactionTypeChannelSubscriptionPurchase':
      return StarTransactionTypeChannelSubscriptionPurchase.fromJson(newJson);
    case 'starTransactionTypeChannelSubscriptionSale':
      return StarTransactionTypeChannelSubscriptionSale.fromJson(newJson);
    case 'starTransactionTypeGiftPurchase':
      return StarTransactionTypeGiftPurchase.fromJson(newJson);
    case 'starTransactionTypeGiftTransfer':
      return StarTransactionTypeGiftTransfer.fromJson(newJson);
    case 'starTransactionTypeGiftSale':
      return StarTransactionTypeGiftSale.fromJson(newJson);
    case 'starTransactionTypeGiftUpgrade':
      return StarTransactionTypeGiftUpgrade.fromJson(newJson);
    case 'starTransactionTypeUpgradedGiftPurchase':
      return StarTransactionTypeUpgradedGiftPurchase.fromJson(newJson);
    case 'starTransactionTypeUpgradedGiftSale':
      return StarTransactionTypeUpgradedGiftSale.fromJson(newJson);
    case 'starTransactionTypeChannelPaidReactionSend':
      return StarTransactionTypeChannelPaidReactionSend.fromJson(newJson);
    case 'starTransactionTypeChannelPaidReactionReceive':
      return StarTransactionTypeChannelPaidReactionReceive.fromJson(newJson);
    case 'starTransactionTypeAffiliateProgramCommission':
      return StarTransactionTypeAffiliateProgramCommission.fromJson(newJson);
    case 'starTransactionTypePaidMessageSend':
      return StarTransactionTypePaidMessageSend.fromJson(newJson);
    case 'starTransactionTypePaidMessageReceive':
      return StarTransactionTypePaidMessageReceive.fromJson(newJson);
    case 'starTransactionTypePremiumPurchase':
      return StarTransactionTypePremiumPurchase.fromJson(newJson);
    case 'starTransactionTypeBusinessBotTransferSend':
      return StarTransactionTypeBusinessBotTransferSend.fromJson(newJson);
    case 'starTransactionTypeBusinessBotTransferReceive':
      return StarTransactionTypeBusinessBotTransferReceive.fromJson(newJson);
    case 'starTransactionTypeUnsupported':
      return StarTransactionTypeUnsupported.fromJson(newJson);
    case 'starTransaction':
      return StarTransaction.fromJson(newJson);
    case 'starTransactions':
      return StarTransactions.fromJson(newJson);
    case 'giveawayParticipantStatus':
      return GiveawayParticipantStatus.fromJson(newJson);
    case 'giveawayParticipantStatusEligible':
      return GiveawayParticipantStatusEligible.fromJson(newJson);
    case 'giveawayParticipantStatusParticipating':
      return GiveawayParticipantStatusParticipating.fromJson(newJson);
    case 'giveawayParticipantStatusAlreadyWasMember':
      return GiveawayParticipantStatusAlreadyWasMember.fromJson(newJson);
    case 'giveawayParticipantStatusAdministrator':
      return GiveawayParticipantStatusAdministrator.fromJson(newJson);
    case 'giveawayParticipantStatusDisallowedCountry':
      return GiveawayParticipantStatusDisallowedCountry.fromJson(newJson);
    case 'giveawayInfo':
      return GiveawayInfo.fromJson(newJson);
    case 'giveawayInfoOngoing':
      return GiveawayInfoOngoing.fromJson(newJson);
    case 'giveawayInfoCompleted':
      return GiveawayInfoCompleted.fromJson(newJson);
    case 'giveawayPrize':
      return GiveawayPrize.fromJson(newJson);
    case 'giveawayPrizePremium':
      return GiveawayPrizePremium.fromJson(newJson);
    case 'giveawayPrizeStars':
      return GiveawayPrizeStars.fromJson(newJson);
    case 'accentColor':
      return AccentColor.fromJson(newJson);
    case 'profileAccentColors':
      return ProfileAccentColors.fromJson(newJson);
    case 'profileAccentColor':
      return ProfileAccentColor.fromJson(newJson);
    case 'emojiStatusType':
      return EmojiStatusType.fromJson(newJson);
    case 'emojiStatusTypeCustomEmoji':
      return EmojiStatusTypeCustomEmoji.fromJson(newJson);
    case 'emojiStatusTypeUpgradedGift':
      return EmojiStatusTypeUpgradedGift.fromJson(newJson);
    case 'emojiStatus':
      return EmojiStatus.fromJson(newJson);
    case 'emojiStatuses':
      return EmojiStatuses.fromJson(newJson);
    case 'emojiStatusCustomEmojis':
      return EmojiStatusCustomEmojis.fromJson(newJson);
    case 'usernames':
      return Usernames.fromJson(newJson);
    case 'user':
      return User.fromJson(newJson);
    case 'botInfo':
      return BotInfo.fromJson(newJson);
    case 'userFullInfo':
      return UserFullInfo.fromJson(newJson);
    case 'users':
      return Users.fromJson(newJson);
    case 'foundUsers':
      return FoundUsers.fromJson(newJson);
    case 'chatAdministrator':
      return ChatAdministrator.fromJson(newJson);
    case 'chatAdministrators':
      return ChatAdministrators.fromJson(newJson);
    case 'chatMemberStatus':
      return ChatMemberStatus.fromJson(newJson);
    case 'chatMemberStatusCreator':
      return ChatMemberStatusCreator.fromJson(newJson);
    case 'chatMemberStatusAdministrator':
      return ChatMemberStatusAdministrator.fromJson(newJson);
    case 'chatMemberStatusMember':
      return ChatMemberStatusMember.fromJson(newJson);
    case 'chatMemberStatusRestricted':
      return ChatMemberStatusRestricted.fromJson(newJson);
    case 'chatMemberStatusLeft':
      return ChatMemberStatusLeft.fromJson(newJson);
    case 'chatMemberStatusBanned':
      return ChatMemberStatusBanned.fromJson(newJson);
    case 'chatMember':
      return ChatMember.fromJson(newJson);
    case 'chatMembers':
      return ChatMembers.fromJson(newJson);
    case 'chatMembersFilter':
      return ChatMembersFilter.fromJson(newJson);
    case 'chatMembersFilterContacts':
      return ChatMembersFilterContacts.fromJson(newJson);
    case 'chatMembersFilterAdministrators':
      return ChatMembersFilterAdministrators.fromJson(newJson);
    case 'chatMembersFilterMembers':
      return ChatMembersFilterMembers.fromJson(newJson);
    case 'chatMembersFilterMention':
      return ChatMembersFilterMention.fromJson(newJson);
    case 'chatMembersFilterRestricted':
      return ChatMembersFilterRestricted.fromJson(newJson);
    case 'chatMembersFilterBanned':
      return ChatMembersFilterBanned.fromJson(newJson);
    case 'chatMembersFilterBots':
      return ChatMembersFilterBots.fromJson(newJson);
    case 'supergroupMembersFilter':
      return SupergroupMembersFilter.fromJson(newJson);
    case 'supergroupMembersFilterRecent':
      return SupergroupMembersFilterRecent.fromJson(newJson);
    case 'supergroupMembersFilterContacts':
      return SupergroupMembersFilterContacts.fromJson(newJson);
    case 'supergroupMembersFilterAdministrators':
      return SupergroupMembersFilterAdministrators.fromJson(newJson);
    case 'supergroupMembersFilterSearch':
      return SupergroupMembersFilterSearch.fromJson(newJson);
    case 'supergroupMembersFilterRestricted':
      return SupergroupMembersFilterRestricted.fromJson(newJson);
    case 'supergroupMembersFilterBanned':
      return SupergroupMembersFilterBanned.fromJson(newJson);
    case 'supergroupMembersFilterMention':
      return SupergroupMembersFilterMention.fromJson(newJson);
    case 'supergroupMembersFilterBots':
      return SupergroupMembersFilterBots.fromJson(newJson);
    case 'chatInviteLink':
      return ChatInviteLink.fromJson(newJson);
    case 'chatInviteLinks':
      return ChatInviteLinks.fromJson(newJson);
    case 'chatInviteLinkCount':
      return ChatInviteLinkCount.fromJson(newJson);
    case 'chatInviteLinkCounts':
      return ChatInviteLinkCounts.fromJson(newJson);
    case 'chatInviteLinkMember':
      return ChatInviteLinkMember.fromJson(newJson);
    case 'chatInviteLinkMembers':
      return ChatInviteLinkMembers.fromJson(newJson);
    case 'inviteLinkChatType':
      return InviteLinkChatType.fromJson(newJson);
    case 'inviteLinkChatTypeBasicGroup':
      return InviteLinkChatTypeBasicGroup.fromJson(newJson);
    case 'inviteLinkChatTypeSupergroup':
      return InviteLinkChatTypeSupergroup.fromJson(newJson);
    case 'inviteLinkChatTypeChannel':
      return InviteLinkChatTypeChannel.fromJson(newJson);
    case 'chatInviteLinkSubscriptionInfo':
      return ChatInviteLinkSubscriptionInfo.fromJson(newJson);
    case 'chatInviteLinkInfo':
      return ChatInviteLinkInfo.fromJson(newJson);
    case 'chatJoinRequest':
      return ChatJoinRequest.fromJson(newJson);
    case 'chatJoinRequests':
      return ChatJoinRequests.fromJson(newJson);
    case 'chatJoinRequestsInfo':
      return ChatJoinRequestsInfo.fromJson(newJson);
    case 'basicGroup':
      return BasicGroup.fromJson(newJson);
    case 'basicGroupFullInfo':
      return BasicGroupFullInfo.fromJson(newJson);
    case 'supergroup':
      return Supergroup.fromJson(newJson);
    case 'supergroupFullInfo':
      return SupergroupFullInfo.fromJson(newJson);
    case 'secretChatState':
      return SecretChatState.fromJson(newJson);
    case 'secretChatStatePending':
      return SecretChatStatePending.fromJson(newJson);
    case 'secretChatStateReady':
      return SecretChatStateReady.fromJson(newJson);
    case 'secretChatStateClosed':
      return SecretChatStateClosed.fromJson(newJson);
    case 'secretChat':
      return SecretChat.fromJson(newJson);
    case 'messageSender':
      return MessageSender.fromJson(newJson);
    case 'messageSenderUser':
      return MessageSenderUser.fromJson(newJson);
    case 'messageSenderChat':
      return MessageSenderChat.fromJson(newJson);
    case 'messageSenders':
      return MessageSenders.fromJson(newJson);
    case 'chatMessageSender':
      return ChatMessageSender.fromJson(newJson);
    case 'chatMessageSenders':
      return ChatMessageSenders.fromJson(newJson);
    case 'messageReadDate':
      return MessageReadDate.fromJson(newJson);
    case 'messageReadDateRead':
      return MessageReadDateRead.fromJson(newJson);
    case 'messageReadDateUnread':
      return MessageReadDateUnread.fromJson(newJson);
    case 'messageReadDateTooOld':
      return MessageReadDateTooOld.fromJson(newJson);
    case 'messageReadDateUserPrivacyRestricted':
      return MessageReadDateUserPrivacyRestricted.fromJson(newJson);
    case 'messageReadDateMyPrivacyRestricted':
      return MessageReadDateMyPrivacyRestricted.fromJson(newJson);
    case 'messageViewer':
      return MessageViewer.fromJson(newJson);
    case 'messageViewers':
      return MessageViewers.fromJson(newJson);
    case 'messageOrigin':
      return MessageOrigin.fromJson(newJson);
    case 'messageOriginUser':
      return MessageOriginUser.fromJson(newJson);
    case 'messageOriginHiddenUser':
      return MessageOriginHiddenUser.fromJson(newJson);
    case 'messageOriginChat':
      return MessageOriginChat.fromJson(newJson);
    case 'messageOriginChannel':
      return MessageOriginChannel.fromJson(newJson);
    case 'forwardSource':
      return ForwardSource.fromJson(newJson);
    case 'reactionType':
      return ReactionType.fromJson(newJson);
    case 'reactionTypeEmoji':
      return ReactionTypeEmoji.fromJson(newJson);
    case 'reactionTypeCustomEmoji':
      return ReactionTypeCustomEmoji.fromJson(newJson);
    case 'reactionTypePaid':
      return ReactionTypePaid.fromJson(newJson);
    case 'paidReactionType':
      return PaidReactionType.fromJson(newJson);
    case 'paidReactionTypeRegular':
      return PaidReactionTypeRegular.fromJson(newJson);
    case 'paidReactionTypeAnonymous':
      return PaidReactionTypeAnonymous.fromJson(newJson);
    case 'paidReactionTypeChat':
      return PaidReactionTypeChat.fromJson(newJson);
    case 'paidReactor':
      return PaidReactor.fromJson(newJson);
    case 'messageForwardInfo':
      return MessageForwardInfo.fromJson(newJson);
    case 'messageImportInfo':
      return MessageImportInfo.fromJson(newJson);
    case 'messageReplyInfo':
      return MessageReplyInfo.fromJson(newJson);
    case 'messageReaction':
      return MessageReaction.fromJson(newJson);
    case 'messageReactions':
      return MessageReactions.fromJson(newJson);
    case 'messageInteractionInfo':
      return MessageInteractionInfo.fromJson(newJson);
    case 'unreadReaction':
      return UnreadReaction.fromJson(newJson);
    case 'messageEffectType':
      return MessageEffectType.fromJson(newJson);
    case 'messageEffectTypeEmojiReaction':
      return MessageEffectTypeEmojiReaction.fromJson(newJson);
    case 'messageEffectTypePremiumSticker':
      return MessageEffectTypePremiumSticker.fromJson(newJson);
    case 'messageEffect':
      return MessageEffect.fromJson(newJson);
    case 'messageSendingState':
      return MessageSendingState.fromJson(newJson);
    case 'messageSendingStatePending':
      return MessageSendingStatePending.fromJson(newJson);
    case 'messageSendingStateFailed':
      return MessageSendingStateFailed.fromJson(newJson);
    case 'textQuote':
      return TextQuote.fromJson(newJson);
    case 'inputTextQuote':
      return InputTextQuote.fromJson(newJson);
    case 'messageReplyTo':
      return MessageReplyTo.fromJson(newJson);
    case 'messageReplyToMessage':
      return MessageReplyToMessage.fromJson(newJson);
    case 'messageReplyToStory':
      return MessageReplyToStory.fromJson(newJson);
    case 'inputMessageReplyTo':
      return InputMessageReplyTo.fromJson(newJson);
    case 'inputMessageReplyToMessage':
      return InputMessageReplyToMessage.fromJson(newJson);
    case 'inputMessageReplyToExternalMessage':
      return InputMessageReplyToExternalMessage.fromJson(newJson);
    case 'inputMessageReplyToStory':
      return InputMessageReplyToStory.fromJson(newJson);
    case 'factCheck':
      return FactCheck.fromJson(newJson);
    case 'message':
      return Message.fromJson(newJson);
    case 'messages':
      return Messages.fromJson(newJson);
    case 'foundMessages':
      return FoundMessages.fromJson(newJson);
    case 'foundChatMessages':
      return FoundChatMessages.fromJson(newJson);
    case 'messagePosition':
      return MessagePosition.fromJson(newJson);
    case 'messagePositions':
      return MessagePositions.fromJson(newJson);
    case 'messageCalendarDay':
      return MessageCalendarDay.fromJson(newJson);
    case 'messageCalendar':
      return MessageCalendar.fromJson(newJson);
    case 'businessMessage':
      return BusinessMessage.fromJson(newJson);
    case 'businessMessages':
      return BusinessMessages.fromJson(newJson);
    case 'messageSource':
      return MessageSource.fromJson(newJson);
    case 'messageSourceChatHistory':
      return MessageSourceChatHistory.fromJson(newJson);
    case 'messageSourceMessageThreadHistory':
      return MessageSourceMessageThreadHistory.fromJson(newJson);
    case 'messageSourceForumTopicHistory':
      return MessageSourceForumTopicHistory.fromJson(newJson);
    case 'messageSourceHistoryPreview':
      return MessageSourceHistoryPreview.fromJson(newJson);
    case 'messageSourceChatList':
      return MessageSourceChatList.fromJson(newJson);
    case 'messageSourceSearch':
      return MessageSourceSearch.fromJson(newJson);
    case 'messageSourceChatEventLog':
      return MessageSourceChatEventLog.fromJson(newJson);
    case 'messageSourceNotification':
      return MessageSourceNotification.fromJson(newJson);
    case 'messageSourceScreenshot':
      return MessageSourceScreenshot.fromJson(newJson);
    case 'messageSourceOther':
      return MessageSourceOther.fromJson(newJson);
    case 'messageSponsor':
      return MessageSponsor.fromJson(newJson);
    case 'sponsoredMessage':
      return SponsoredMessage.fromJson(newJson);
    case 'sponsoredMessages':
      return SponsoredMessages.fromJson(newJson);
    case 'sponsoredChat':
      return SponsoredChat.fromJson(newJson);
    case 'sponsoredChats':
      return SponsoredChats.fromJson(newJson);
    case 'reportOption':
      return ReportOption.fromJson(newJson);
    case 'reportSponsoredResult':
      return ReportSponsoredResult.fromJson(newJson);
    case 'reportSponsoredResultOk':
      return ReportSponsoredResultOk.fromJson(newJson);
    case 'reportSponsoredResultFailed':
      return ReportSponsoredResultFailed.fromJson(newJson);
    case 'reportSponsoredResultOptionRequired':
      return ReportSponsoredResultOptionRequired.fromJson(newJson);
    case 'reportSponsoredResultAdsHidden':
      return ReportSponsoredResultAdsHidden.fromJson(newJson);
    case 'reportSponsoredResultPremiumRequired':
      return ReportSponsoredResultPremiumRequired.fromJson(newJson);
    case 'fileDownload':
      return FileDownload.fromJson(newJson);
    case 'downloadedFileCounts':
      return DownloadedFileCounts.fromJson(newJson);
    case 'foundFileDownloads':
      return FoundFileDownloads.fromJson(newJson);
    case 'notificationSettingsScope':
      return NotificationSettingsScope.fromJson(newJson);
    case 'notificationSettingsScopePrivateChats':
      return NotificationSettingsScopePrivateChats.fromJson(newJson);
    case 'notificationSettingsScopeGroupChats':
      return NotificationSettingsScopeGroupChats.fromJson(newJson);
    case 'notificationSettingsScopeChannelChats':
      return NotificationSettingsScopeChannelChats.fromJson(newJson);
    case 'chatNotificationSettings':
      return ChatNotificationSettings.fromJson(newJson);
    case 'scopeNotificationSettings':
      return ScopeNotificationSettings.fromJson(newJson);
    case 'reactionNotificationSource':
      return ReactionNotificationSource.fromJson(newJson);
    case 'reactionNotificationSourceNone':
      return ReactionNotificationSourceNone.fromJson(newJson);
    case 'reactionNotificationSourceContacts':
      return ReactionNotificationSourceContacts.fromJson(newJson);
    case 'reactionNotificationSourceAll':
      return ReactionNotificationSourceAll.fromJson(newJson);
    case 'reactionNotificationSettings':
      return ReactionNotificationSettings.fromJson(newJson);
    case 'draftMessage':
      return DraftMessage.fromJson(newJson);
    case 'chatType':
      return ChatType.fromJson(newJson);
    case 'chatTypePrivate':
      return ChatTypePrivate.fromJson(newJson);
    case 'chatTypeBasicGroup':
      return ChatTypeBasicGroup.fromJson(newJson);
    case 'chatTypeSupergroup':
      return ChatTypeSupergroup.fromJson(newJson);
    case 'chatTypeSecret':
      return ChatTypeSecret.fromJson(newJson);
    case 'chatFolderIcon':
      return ChatFolderIcon.fromJson(newJson);
    case 'chatFolderName':
      return ChatFolderName.fromJson(newJson);
    case 'chatFolder':
      return ChatFolder.fromJson(newJson);
    case 'chatFolderInfo':
      return ChatFolderInfo.fromJson(newJson);
    case 'chatFolderInviteLink':
      return ChatFolderInviteLink.fromJson(newJson);
    case 'chatFolderInviteLinks':
      return ChatFolderInviteLinks.fromJson(newJson);
    case 'chatFolderInviteLinkInfo':
      return ChatFolderInviteLinkInfo.fromJson(newJson);
    case 'recommendedChatFolder':
      return RecommendedChatFolder.fromJson(newJson);
    case 'recommendedChatFolders':
      return RecommendedChatFolders.fromJson(newJson);
    case 'archiveChatListSettings':
      return ArchiveChatListSettings.fromJson(newJson);
    case 'chatList':
      return ChatList.fromJson(newJson);
    case 'chatListMain':
      return ChatListMain.fromJson(newJson);
    case 'chatListArchive':
      return ChatListArchive.fromJson(newJson);
    case 'chatListFolder':
      return ChatListFolder.fromJson(newJson);
    case 'chatLists':
      return ChatLists.fromJson(newJson);
    case 'chatSource':
      return ChatSource.fromJson(newJson);
    case 'chatSourceMtprotoProxy':
      return ChatSourceMtprotoProxy.fromJson(newJson);
    case 'chatSourcePublicServiceAnnouncement':
      return ChatSourcePublicServiceAnnouncement.fromJson(newJson);
    case 'chatPosition':
      return ChatPosition.fromJson(newJson);
    case 'chatAvailableReactions':
      return ChatAvailableReactions.fromJson(newJson);
    case 'chatAvailableReactionsAll':
      return ChatAvailableReactionsAll.fromJson(newJson);
    case 'chatAvailableReactionsSome':
      return ChatAvailableReactionsSome.fromJson(newJson);
    case 'savedMessagesTag':
      return SavedMessagesTag.fromJson(newJson);
    case 'savedMessagesTags':
      return SavedMessagesTags.fromJson(newJson);
    case 'businessBotManageBar':
      return BusinessBotManageBar.fromJson(newJson);
    case 'videoChat':
      return VideoChat.fromJson(newJson);
    case 'chat':
      return Chat.fromJson(newJson);
    case 'chats':
      return Chats.fromJson(newJson);
    case 'failedToAddMember':
      return FailedToAddMember.fromJson(newJson);
    case 'failedToAddMembers':
      return FailedToAddMembers.fromJson(newJson);
    case 'createdBasicGroupChat':
      return CreatedBasicGroupChat.fromJson(newJson);
    case 'publicChatType':
      return PublicChatType.fromJson(newJson);
    case 'publicChatTypeHasUsername':
      return PublicChatTypeHasUsername.fromJson(newJson);
    case 'publicChatTypeIsLocationBased':
      return PublicChatTypeIsLocationBased.fromJson(newJson);
    case 'accountInfo':
      return AccountInfo.fromJson(newJson);
    case 'chatActionBar':
      return ChatActionBar.fromJson(newJson);
    case 'chatActionBarReportSpam':
      return ChatActionBarReportSpam.fromJson(newJson);
    case 'chatActionBarInviteMembers':
      return ChatActionBarInviteMembers.fromJson(newJson);
    case 'chatActionBarReportAddBlock':
      return ChatActionBarReportAddBlock.fromJson(newJson);
    case 'chatActionBarAddContact':
      return ChatActionBarAddContact.fromJson(newJson);
    case 'chatActionBarSharePhoneNumber':
      return ChatActionBarSharePhoneNumber.fromJson(newJson);
    case 'chatActionBarJoinRequest':
      return ChatActionBarJoinRequest.fromJson(newJson);
    case 'keyboardButtonType':
      return KeyboardButtonType.fromJson(newJson);
    case 'keyboardButtonTypeText':
      return KeyboardButtonTypeText.fromJson(newJson);
    case 'keyboardButtonTypeRequestPhoneNumber':
      return KeyboardButtonTypeRequestPhoneNumber.fromJson(newJson);
    case 'keyboardButtonTypeRequestLocation':
      return KeyboardButtonTypeRequestLocation.fromJson(newJson);
    case 'keyboardButtonTypeRequestPoll':
      return KeyboardButtonTypeRequestPoll.fromJson(newJson);
    case 'keyboardButtonTypeRequestUsers':
      return KeyboardButtonTypeRequestUsers.fromJson(newJson);
    case 'keyboardButtonTypeRequestChat':
      return KeyboardButtonTypeRequestChat.fromJson(newJson);
    case 'keyboardButtonTypeWebApp':
      return KeyboardButtonTypeWebApp.fromJson(newJson);
    case 'keyboardButton':
      return KeyboardButton.fromJson(newJson);
    case 'inlineKeyboardButtonType':
      return InlineKeyboardButtonType.fromJson(newJson);
    case 'inlineKeyboardButtonTypeUrl':
      return InlineKeyboardButtonTypeUrl.fromJson(newJson);
    case 'inlineKeyboardButtonTypeLoginUrl':
      return InlineKeyboardButtonTypeLoginUrl.fromJson(newJson);
    case 'inlineKeyboardButtonTypeWebApp':
      return InlineKeyboardButtonTypeWebApp.fromJson(newJson);
    case 'inlineKeyboardButtonTypeCallback':
      return InlineKeyboardButtonTypeCallback.fromJson(newJson);
    case 'inlineKeyboardButtonTypeCallbackWithPassword':
      return InlineKeyboardButtonTypeCallbackWithPassword.fromJson(newJson);
    case 'inlineKeyboardButtonTypeCallbackGame':
      return InlineKeyboardButtonTypeCallbackGame.fromJson(newJson);
    case 'inlineKeyboardButtonTypeSwitchInline':
      return InlineKeyboardButtonTypeSwitchInline.fromJson(newJson);
    case 'inlineKeyboardButtonTypeBuy':
      return InlineKeyboardButtonTypeBuy.fromJson(newJson);
    case 'inlineKeyboardButtonTypeUser':
      return InlineKeyboardButtonTypeUser.fromJson(newJson);
    case 'inlineKeyboardButtonTypeCopyText':
      return InlineKeyboardButtonTypeCopyText.fromJson(newJson);
    case 'inlineKeyboardButton':
      return InlineKeyboardButton.fromJson(newJson);
    case 'replyMarkup':
      return ReplyMarkup.fromJson(newJson);
    case 'replyMarkupRemoveKeyboard':
      return ReplyMarkupRemoveKeyboard.fromJson(newJson);
    case 'replyMarkupForceReply':
      return ReplyMarkupForceReply.fromJson(newJson);
    case 'replyMarkupShowKeyboard':
      return ReplyMarkupShowKeyboard.fromJson(newJson);
    case 'replyMarkupInlineKeyboard':
      return ReplyMarkupInlineKeyboard.fromJson(newJson);
    case 'loginUrlInfo':
      return LoginUrlInfo.fromJson(newJson);
    case 'loginUrlInfoOpen':
      return LoginUrlInfoOpen.fromJson(newJson);
    case 'loginUrlInfoRequestConfirmation':
      return LoginUrlInfoRequestConfirmation.fromJson(newJson);
    case 'themeParameters':
      return ThemeParameters.fromJson(newJson);
    case 'webAppOpenMode':
      return WebAppOpenMode.fromJson(newJson);
    case 'webAppOpenModeCompact':
      return WebAppOpenModeCompact.fromJson(newJson);
    case 'webAppOpenModeFullSize':
      return WebAppOpenModeFullSize.fromJson(newJson);
    case 'webAppOpenModeFullScreen':
      return WebAppOpenModeFullScreen.fromJson(newJson);
    case 'foundWebApp':
      return FoundWebApp.fromJson(newJson);
    case 'webAppInfo':
      return WebAppInfo.fromJson(newJson);
    case 'mainWebApp':
      return MainWebApp.fromJson(newJson);
    case 'webAppOpenParameters':
      return WebAppOpenParameters.fromJson(newJson);
    case 'messageThreadInfo':
      return MessageThreadInfo.fromJson(newJson);
    case 'savedMessagesTopicType':
      return SavedMessagesTopicType.fromJson(newJson);
    case 'savedMessagesTopicTypeMyNotes':
      return SavedMessagesTopicTypeMyNotes.fromJson(newJson);
    case 'savedMessagesTopicTypeAuthorHidden':
      return SavedMessagesTopicTypeAuthorHidden.fromJson(newJson);
    case 'savedMessagesTopicTypeSavedFromChat':
      return SavedMessagesTopicTypeSavedFromChat.fromJson(newJson);
    case 'savedMessagesTopic':
      return SavedMessagesTopic.fromJson(newJson);
    case 'forumTopicIcon':
      return ForumTopicIcon.fromJson(newJson);
    case 'forumTopicInfo':
      return ForumTopicInfo.fromJson(newJson);
    case 'forumTopic':
      return ForumTopic.fromJson(newJson);
    case 'forumTopics':
      return ForumTopics.fromJson(newJson);
    case 'linkPreviewOptions':
      return LinkPreviewOptions.fromJson(newJson);
    case 'sharedUser':
      return SharedUser.fromJson(newJson);
    case 'sharedChat':
      return SharedChat.fromJson(newJson);
    case 'themeSettings':
      return ThemeSettings.fromJson(newJson);
    case 'richText':
      return RichText.fromJson(newJson);
    case 'richTextPlain':
      return RichTextPlain.fromJson(newJson);
    case 'richTextBold':
      return RichTextBold.fromJson(newJson);
    case 'richTextItalic':
      return RichTextItalic.fromJson(newJson);
    case 'richTextUnderline':
      return RichTextUnderline.fromJson(newJson);
    case 'richTextStrikethrough':
      return RichTextStrikethrough.fromJson(newJson);
    case 'richTextFixed':
      return RichTextFixed.fromJson(newJson);
    case 'richTextUrl':
      return RichTextUrl.fromJson(newJson);
    case 'richTextEmailAddress':
      return RichTextEmailAddress.fromJson(newJson);
    case 'richTextSubscript':
      return RichTextSubscript.fromJson(newJson);
    case 'richTextSuperscript':
      return RichTextSuperscript.fromJson(newJson);
    case 'richTextMarked':
      return RichTextMarked.fromJson(newJson);
    case 'richTextPhoneNumber':
      return RichTextPhoneNumber.fromJson(newJson);
    case 'richTextIcon':
      return RichTextIcon.fromJson(newJson);
    case 'richTextReference':
      return RichTextReference.fromJson(newJson);
    case 'richTextAnchor':
      return RichTextAnchor.fromJson(newJson);
    case 'richTextAnchorLink':
      return RichTextAnchorLink.fromJson(newJson);
    case 'richTexts':
      return RichTexts.fromJson(newJson);
    case 'pageBlockCaption':
      return PageBlockCaption.fromJson(newJson);
    case 'pageBlockListItem':
      return PageBlockListItem.fromJson(newJson);
    case 'pageBlockHorizontalAlignment':
      return PageBlockHorizontalAlignment.fromJson(newJson);
    case 'pageBlockHorizontalAlignmentLeft':
      return PageBlockHorizontalAlignmentLeft.fromJson(newJson);
    case 'pageBlockHorizontalAlignmentCenter':
      return PageBlockHorizontalAlignmentCenter.fromJson(newJson);
    case 'pageBlockHorizontalAlignmentRight':
      return PageBlockHorizontalAlignmentRight.fromJson(newJson);
    case 'pageBlockVerticalAlignment':
      return PageBlockVerticalAlignment.fromJson(newJson);
    case 'pageBlockVerticalAlignmentTop':
      return PageBlockVerticalAlignmentTop.fromJson(newJson);
    case 'pageBlockVerticalAlignmentMiddle':
      return PageBlockVerticalAlignmentMiddle.fromJson(newJson);
    case 'pageBlockVerticalAlignmentBottom':
      return PageBlockVerticalAlignmentBottom.fromJson(newJson);
    case 'pageBlockTableCell':
      return PageBlockTableCell.fromJson(newJson);
    case 'pageBlockRelatedArticle':
      return PageBlockRelatedArticle.fromJson(newJson);
    case 'pageBlock':
      return PageBlock.fromJson(newJson);
    case 'pageBlockTitle':
      return PageBlockTitle.fromJson(newJson);
    case 'pageBlockSubtitle':
      return PageBlockSubtitle.fromJson(newJson);
    case 'pageBlockAuthorDate':
      return PageBlockAuthorDate.fromJson(newJson);
    case 'pageBlockHeader':
      return PageBlockHeader.fromJson(newJson);
    case 'pageBlockSubheader':
      return PageBlockSubheader.fromJson(newJson);
    case 'pageBlockKicker':
      return PageBlockKicker.fromJson(newJson);
    case 'pageBlockParagraph':
      return PageBlockParagraph.fromJson(newJson);
    case 'pageBlockPreformatted':
      return PageBlockPreformatted.fromJson(newJson);
    case 'pageBlockFooter':
      return PageBlockFooter.fromJson(newJson);
    case 'pageBlockDivider':
      return PageBlockDivider.fromJson(newJson);
    case 'pageBlockAnchor':
      return PageBlockAnchor.fromJson(newJson);
    case 'pageBlockList':
      return PageBlockList.fromJson(newJson);
    case 'pageBlockBlockQuote':
      return PageBlockBlockQuote.fromJson(newJson);
    case 'pageBlockPullQuote':
      return PageBlockPullQuote.fromJson(newJson);
    case 'pageBlockAnimation':
      return PageBlockAnimation.fromJson(newJson);
    case 'pageBlockAudio':
      return PageBlockAudio.fromJson(newJson);
    case 'pageBlockPhoto':
      return PageBlockPhoto.fromJson(newJson);
    case 'pageBlockVideo':
      return PageBlockVideo.fromJson(newJson);
    case 'pageBlockVoiceNote':
      return PageBlockVoiceNote.fromJson(newJson);
    case 'pageBlockCover':
      return PageBlockCover.fromJson(newJson);
    case 'pageBlockEmbedded':
      return PageBlockEmbedded.fromJson(newJson);
    case 'pageBlockEmbeddedPost':
      return PageBlockEmbeddedPost.fromJson(newJson);
    case 'pageBlockCollage':
      return PageBlockCollage.fromJson(newJson);
    case 'pageBlockSlideshow':
      return PageBlockSlideshow.fromJson(newJson);
    case 'pageBlockChatLink':
      return PageBlockChatLink.fromJson(newJson);
    case 'pageBlockTable':
      return PageBlockTable.fromJson(newJson);
    case 'pageBlockDetails':
      return PageBlockDetails.fromJson(newJson);
    case 'pageBlockRelatedArticles':
      return PageBlockRelatedArticles.fromJson(newJson);
    case 'pageBlockMap':
      return PageBlockMap.fromJson(newJson);
    case 'webPageInstantView':
      return WebPageInstantView.fromJson(newJson);
    case 'linkPreviewAlbumMedia':
      return LinkPreviewAlbumMedia.fromJson(newJson);
    case 'linkPreviewAlbumMediaPhoto':
      return LinkPreviewAlbumMediaPhoto.fromJson(newJson);
    case 'linkPreviewAlbumMediaVideo':
      return LinkPreviewAlbumMediaVideo.fromJson(newJson);
    case 'linkPreviewType':
      return LinkPreviewType.fromJson(newJson);
    case 'linkPreviewTypeAlbum':
      return LinkPreviewTypeAlbum.fromJson(newJson);
    case 'linkPreviewTypeAnimation':
      return LinkPreviewTypeAnimation.fromJson(newJson);
    case 'linkPreviewTypeApp':
      return LinkPreviewTypeApp.fromJson(newJson);
    case 'linkPreviewTypeArticle':
      return LinkPreviewTypeArticle.fromJson(newJson);
    case 'linkPreviewTypeAudio':
      return LinkPreviewTypeAudio.fromJson(newJson);
    case 'linkPreviewTypeBackground':
      return LinkPreviewTypeBackground.fromJson(newJson);
    case 'linkPreviewTypeChannelBoost':
      return LinkPreviewTypeChannelBoost.fromJson(newJson);
    case 'linkPreviewTypeChat':
      return LinkPreviewTypeChat.fromJson(newJson);
    case 'linkPreviewTypeDocument':
      return LinkPreviewTypeDocument.fromJson(newJson);
    case 'linkPreviewTypeEmbeddedAnimationPlayer':
      return LinkPreviewTypeEmbeddedAnimationPlayer.fromJson(newJson);
    case 'linkPreviewTypeEmbeddedAudioPlayer':
      return LinkPreviewTypeEmbeddedAudioPlayer.fromJson(newJson);
    case 'linkPreviewTypeEmbeddedVideoPlayer':
      return LinkPreviewTypeEmbeddedVideoPlayer.fromJson(newJson);
    case 'linkPreviewTypeExternalAudio':
      return LinkPreviewTypeExternalAudio.fromJson(newJson);
    case 'linkPreviewTypeExternalVideo':
      return LinkPreviewTypeExternalVideo.fromJson(newJson);
    case 'linkPreviewTypeGroupCall':
      return LinkPreviewTypeGroupCall.fromJson(newJson);
    case 'linkPreviewTypeInvoice':
      return LinkPreviewTypeInvoice.fromJson(newJson);
    case 'linkPreviewTypeMessage':
      return LinkPreviewTypeMessage.fromJson(newJson);
    case 'linkPreviewTypePhoto':
      return LinkPreviewTypePhoto.fromJson(newJson);
    case 'linkPreviewTypePremiumGiftCode':
      return LinkPreviewTypePremiumGiftCode.fromJson(newJson);
    case 'linkPreviewTypeShareableChatFolder':
      return LinkPreviewTypeShareableChatFolder.fromJson(newJson);
    case 'linkPreviewTypeSticker':
      return LinkPreviewTypeSticker.fromJson(newJson);
    case 'linkPreviewTypeStickerSet':
      return LinkPreviewTypeStickerSet.fromJson(newJson);
    case 'linkPreviewTypeStory':
      return LinkPreviewTypeStory.fromJson(newJson);
    case 'linkPreviewTypeSupergroupBoost':
      return LinkPreviewTypeSupergroupBoost.fromJson(newJson);
    case 'linkPreviewTypeTheme':
      return LinkPreviewTypeTheme.fromJson(newJson);
    case 'linkPreviewTypeUnsupported':
      return LinkPreviewTypeUnsupported.fromJson(newJson);
    case 'linkPreviewTypeUpgradedGift':
      return LinkPreviewTypeUpgradedGift.fromJson(newJson);
    case 'linkPreviewTypeUser':
      return LinkPreviewTypeUser.fromJson(newJson);
    case 'linkPreviewTypeVideo':
      return LinkPreviewTypeVideo.fromJson(newJson);
    case 'linkPreviewTypeVideoChat':
      return LinkPreviewTypeVideoChat.fromJson(newJson);
    case 'linkPreviewTypeVideoNote':
      return LinkPreviewTypeVideoNote.fromJson(newJson);
    case 'linkPreviewTypeVoiceNote':
      return LinkPreviewTypeVoiceNote.fromJson(newJson);
    case 'linkPreviewTypeWebApp':
      return LinkPreviewTypeWebApp.fromJson(newJson);
    case 'linkPreview':
      return LinkPreview.fromJson(newJson);
    case 'countryInfo':
      return CountryInfo.fromJson(newJson);
    case 'countries':
      return Countries.fromJson(newJson);
    case 'phoneNumberInfo':
      return PhoneNumberInfo.fromJson(newJson);
    case 'collectibleItemType':
      return CollectibleItemType.fromJson(newJson);
    case 'collectibleItemTypeUsername':
      return CollectibleItemTypeUsername.fromJson(newJson);
    case 'collectibleItemTypePhoneNumber':
      return CollectibleItemTypePhoneNumber.fromJson(newJson);
    case 'collectibleItemInfo':
      return CollectibleItemInfo.fromJson(newJson);
    case 'bankCardActionOpenUrl':
      return BankCardActionOpenUrl.fromJson(newJson);
    case 'bankCardInfo':
      return BankCardInfo.fromJson(newJson);
    case 'address':
      return Address.fromJson(newJson);
    case 'locationAddress':
      return LocationAddress.fromJson(newJson);
    case 'labeledPricePart':
      return LabeledPricePart.fromJson(newJson);
    case 'invoice':
      return Invoice.fromJson(newJson);
    case 'orderInfo':
      return OrderInfo.fromJson(newJson);
    case 'shippingOption':
      return ShippingOption.fromJson(newJson);
    case 'savedCredentials':
      return SavedCredentials.fromJson(newJson);
    case 'inputCredentials':
      return InputCredentials.fromJson(newJson);
    case 'inputCredentialsSaved':
      return InputCredentialsSaved.fromJson(newJson);
    case 'inputCredentialsNew':
      return InputCredentialsNew.fromJson(newJson);
    case 'inputCredentialsApplePay':
      return InputCredentialsApplePay.fromJson(newJson);
    case 'inputCredentialsGooglePay':
      return InputCredentialsGooglePay.fromJson(newJson);
    case 'paymentProvider':
      return PaymentProvider.fromJson(newJson);
    case 'paymentProviderSmartGlocal':
      return PaymentProviderSmartGlocal.fromJson(newJson);
    case 'paymentProviderStripe':
      return PaymentProviderStripe.fromJson(newJson);
    case 'paymentProviderOther':
      return PaymentProviderOther.fromJson(newJson);
    case 'paymentOption':
      return PaymentOption.fromJson(newJson);
    case 'paymentFormType':
      return PaymentFormType.fromJson(newJson);
    case 'paymentFormTypeRegular':
      return PaymentFormTypeRegular.fromJson(newJson);
    case 'paymentFormTypeStars':
      return PaymentFormTypeStars.fromJson(newJson);
    case 'paymentFormTypeStarSubscription':
      return PaymentFormTypeStarSubscription.fromJson(newJson);
    case 'paymentForm':
      return PaymentForm.fromJson(newJson);
    case 'validatedOrderInfo':
      return ValidatedOrderInfo.fromJson(newJson);
    case 'paymentResult':
      return PaymentResult.fromJson(newJson);
    case 'paymentReceiptType':
      return PaymentReceiptType.fromJson(newJson);
    case 'paymentReceiptTypeRegular':
      return PaymentReceiptTypeRegular.fromJson(newJson);
    case 'paymentReceiptTypeStars':
      return PaymentReceiptTypeStars.fromJson(newJson);
    case 'paymentReceipt':
      return PaymentReceipt.fromJson(newJson);
    case 'inputInvoice':
      return InputInvoice.fromJson(newJson);
    case 'inputInvoiceMessage':
      return InputInvoiceMessage.fromJson(newJson);
    case 'inputInvoiceName':
      return InputInvoiceName.fromJson(newJson);
    case 'inputInvoiceTelegram':
      return InputInvoiceTelegram.fromJson(newJson);
    case 'paidMedia':
      return PaidMedia.fromJson(newJson);
    case 'paidMediaPreview':
      return PaidMediaPreview.fromJson(newJson);
    case 'paidMediaPhoto':
      return PaidMediaPhoto.fromJson(newJson);
    case 'paidMediaVideo':
      return PaidMediaVideo.fromJson(newJson);
    case 'paidMediaUnsupported':
      return PaidMediaUnsupported.fromJson(newJson);
    case 'giveawayParameters':
      return GiveawayParameters.fromJson(newJson);
    case 'datedFile':
      return DatedFile.fromJson(newJson);
    case 'passportElementType':
      return PassportElementType.fromJson(newJson);
    case 'passportElementTypePersonalDetails':
      return PassportElementTypePersonalDetails.fromJson(newJson);
    case 'passportElementTypePassport':
      return PassportElementTypePassport.fromJson(newJson);
    case 'passportElementTypeDriverLicense':
      return PassportElementTypeDriverLicense.fromJson(newJson);
    case 'passportElementTypeIdentityCard':
      return PassportElementTypeIdentityCard.fromJson(newJson);
    case 'passportElementTypeInternalPassport':
      return PassportElementTypeInternalPassport.fromJson(newJson);
    case 'passportElementTypeAddress':
      return PassportElementTypeAddress.fromJson(newJson);
    case 'passportElementTypeUtilityBill':
      return PassportElementTypeUtilityBill.fromJson(newJson);
    case 'passportElementTypeBankStatement':
      return PassportElementTypeBankStatement.fromJson(newJson);
    case 'passportElementTypeRentalAgreement':
      return PassportElementTypeRentalAgreement.fromJson(newJson);
    case 'passportElementTypePassportRegistration':
      return PassportElementTypePassportRegistration.fromJson(newJson);
    case 'passportElementTypeTemporaryRegistration':
      return PassportElementTypeTemporaryRegistration.fromJson(newJson);
    case 'passportElementTypePhoneNumber':
      return PassportElementTypePhoneNumber.fromJson(newJson);
    case 'passportElementTypeEmailAddress':
      return PassportElementTypeEmailAddress.fromJson(newJson);
    case 'date':
      return Date.fromJson(newJson);
    case 'personalDetails':
      return PersonalDetails.fromJson(newJson);
    case 'identityDocument':
      return IdentityDocument.fromJson(newJson);
    case 'inputIdentityDocument':
      return InputIdentityDocument.fromJson(newJson);
    case 'personalDocument':
      return PersonalDocument.fromJson(newJson);
    case 'inputPersonalDocument':
      return InputPersonalDocument.fromJson(newJson);
    case 'passportElement':
      return PassportElement.fromJson(newJson);
    case 'passportElementPersonalDetails':
      return PassportElementPersonalDetails.fromJson(newJson);
    case 'passportElementPassport':
      return PassportElementPassport.fromJson(newJson);
    case 'passportElementDriverLicense':
      return PassportElementDriverLicense.fromJson(newJson);
    case 'passportElementIdentityCard':
      return PassportElementIdentityCard.fromJson(newJson);
    case 'passportElementInternalPassport':
      return PassportElementInternalPassport.fromJson(newJson);
    case 'passportElementAddress':
      return PassportElementAddress.fromJson(newJson);
    case 'passportElementUtilityBill':
      return PassportElementUtilityBill.fromJson(newJson);
    case 'passportElementBankStatement':
      return PassportElementBankStatement.fromJson(newJson);
    case 'passportElementRentalAgreement':
      return PassportElementRentalAgreement.fromJson(newJson);
    case 'passportElementPassportRegistration':
      return PassportElementPassportRegistration.fromJson(newJson);
    case 'passportElementTemporaryRegistration':
      return PassportElementTemporaryRegistration.fromJson(newJson);
    case 'passportElementPhoneNumber':
      return PassportElementPhoneNumber.fromJson(newJson);
    case 'passportElementEmailAddress':
      return PassportElementEmailAddress.fromJson(newJson);
    case 'inputPassportElement':
      return InputPassportElement.fromJson(newJson);
    case 'inputPassportElementPersonalDetails':
      return InputPassportElementPersonalDetails.fromJson(newJson);
    case 'inputPassportElementPassport':
      return InputPassportElementPassport.fromJson(newJson);
    case 'inputPassportElementDriverLicense':
      return InputPassportElementDriverLicense.fromJson(newJson);
    case 'inputPassportElementIdentityCard':
      return InputPassportElementIdentityCard.fromJson(newJson);
    case 'inputPassportElementInternalPassport':
      return InputPassportElementInternalPassport.fromJson(newJson);
    case 'inputPassportElementAddress':
      return InputPassportElementAddress.fromJson(newJson);
    case 'inputPassportElementUtilityBill':
      return InputPassportElementUtilityBill.fromJson(newJson);
    case 'inputPassportElementBankStatement':
      return InputPassportElementBankStatement.fromJson(newJson);
    case 'inputPassportElementRentalAgreement':
      return InputPassportElementRentalAgreement.fromJson(newJson);
    case 'inputPassportElementPassportRegistration':
      return InputPassportElementPassportRegistration.fromJson(newJson);
    case 'inputPassportElementTemporaryRegistration':
      return InputPassportElementTemporaryRegistration.fromJson(newJson);
    case 'inputPassportElementPhoneNumber':
      return InputPassportElementPhoneNumber.fromJson(newJson);
    case 'inputPassportElementEmailAddress':
      return InputPassportElementEmailAddress.fromJson(newJson);
    case 'passportElements':
      return PassportElements.fromJson(newJson);
    case 'passportElementErrorSource':
      return PassportElementErrorSource.fromJson(newJson);
    case 'passportElementErrorSourceUnspecified':
      return PassportElementErrorSourceUnspecified.fromJson(newJson);
    case 'passportElementErrorSourceDataField':
      return PassportElementErrorSourceDataField.fromJson(newJson);
    case 'passportElementErrorSourceFrontSide':
      return PassportElementErrorSourceFrontSide.fromJson(newJson);
    case 'passportElementErrorSourceReverseSide':
      return PassportElementErrorSourceReverseSide.fromJson(newJson);
    case 'passportElementErrorSourceSelfie':
      return PassportElementErrorSourceSelfie.fromJson(newJson);
    case 'passportElementErrorSourceTranslationFile':
      return PassportElementErrorSourceTranslationFile.fromJson(newJson);
    case 'passportElementErrorSourceTranslationFiles':
      return PassportElementErrorSourceTranslationFiles.fromJson(newJson);
    case 'passportElementErrorSourceFile':
      return PassportElementErrorSourceFile.fromJson(newJson);
    case 'passportElementErrorSourceFiles':
      return PassportElementErrorSourceFiles.fromJson(newJson);
    case 'passportElementError':
      return PassportElementError.fromJson(newJson);
    case 'passportSuitableElement':
      return PassportSuitableElement.fromJson(newJson);
    case 'passportRequiredElement':
      return PassportRequiredElement.fromJson(newJson);
    case 'passportAuthorizationForm':
      return PassportAuthorizationForm.fromJson(newJson);
    case 'passportElementsWithErrors':
      return PassportElementsWithErrors.fromJson(newJson);
    case 'encryptedCredentials':
      return EncryptedCredentials.fromJson(newJson);
    case 'encryptedPassportElement':
      return EncryptedPassportElement.fromJson(newJson);
    case 'inputPassportElementErrorSource':
      return InputPassportElementErrorSource.fromJson(newJson);
    case 'inputPassportElementErrorSourceUnspecified':
      return InputPassportElementErrorSourceUnspecified.fromJson(newJson);
    case 'inputPassportElementErrorSourceDataField':
      return InputPassportElementErrorSourceDataField.fromJson(newJson);
    case 'inputPassportElementErrorSourceFrontSide':
      return InputPassportElementErrorSourceFrontSide.fromJson(newJson);
    case 'inputPassportElementErrorSourceReverseSide':
      return InputPassportElementErrorSourceReverseSide.fromJson(newJson);
    case 'inputPassportElementErrorSourceSelfie':
      return InputPassportElementErrorSourceSelfie.fromJson(newJson);
    case 'inputPassportElementErrorSourceTranslationFile':
      return InputPassportElementErrorSourceTranslationFile.fromJson(newJson);
    case 'inputPassportElementErrorSourceTranslationFiles':
      return InputPassportElementErrorSourceTranslationFiles.fromJson(newJson);
    case 'inputPassportElementErrorSourceFile':
      return InputPassportElementErrorSourceFile.fromJson(newJson);
    case 'inputPassportElementErrorSourceFiles':
      return InputPassportElementErrorSourceFiles.fromJson(newJson);
    case 'inputPassportElementError':
      return InputPassportElementError.fromJson(newJson);
    case 'messageContent':
      return MessageContent.fromJson(newJson);
    case 'messageText':
      return MessageText.fromJson(newJson);
    case 'messageAnimation':
      return MessageAnimation.fromJson(newJson);
    case 'messageAudio':
      return MessageAudio.fromJson(newJson);
    case 'messageDocument':
      return MessageDocument.fromJson(newJson);
    case 'messagePaidMedia':
      return MessagePaidMedia.fromJson(newJson);
    case 'messagePhoto':
      return MessagePhoto.fromJson(newJson);
    case 'messageSticker':
      return MessageSticker.fromJson(newJson);
    case 'messageVideo':
      return MessageVideo.fromJson(newJson);
    case 'messageVideoNote':
      return MessageVideoNote.fromJson(newJson);
    case 'messageVoiceNote':
      return MessageVoiceNote.fromJson(newJson);
    case 'messageExpiredPhoto':
      return MessageExpiredPhoto.fromJson(newJson);
    case 'messageExpiredVideo':
      return MessageExpiredVideo.fromJson(newJson);
    case 'messageExpiredVideoNote':
      return MessageExpiredVideoNote.fromJson(newJson);
    case 'messageExpiredVoiceNote':
      return MessageExpiredVoiceNote.fromJson(newJson);
    case 'messageLocation':
      return MessageLocation.fromJson(newJson);
    case 'messageVenue':
      return MessageVenue.fromJson(newJson);
    case 'messageContact':
      return MessageContact.fromJson(newJson);
    case 'messageAnimatedEmoji':
      return MessageAnimatedEmoji.fromJson(newJson);
    case 'messageDice':
      return MessageDice.fromJson(newJson);
    case 'messageGame':
      return MessageGame.fromJson(newJson);
    case 'messagePoll':
      return MessagePoll.fromJson(newJson);
    case 'messageStory':
      return MessageStory.fromJson(newJson);
    case 'messageInvoice':
      return MessageInvoice.fromJson(newJson);
    case 'messageCall':
      return MessageCall.fromJson(newJson);
    case 'messageGroupCall':
      return MessageGroupCall.fromJson(newJson);
    case 'messageVideoChatScheduled':
      return MessageVideoChatScheduled.fromJson(newJson);
    case 'messageVideoChatStarted':
      return MessageVideoChatStarted.fromJson(newJson);
    case 'messageVideoChatEnded':
      return MessageVideoChatEnded.fromJson(newJson);
    case 'messageInviteVideoChatParticipants':
      return MessageInviteVideoChatParticipants.fromJson(newJson);
    case 'messageBasicGroupChatCreate':
      return MessageBasicGroupChatCreate.fromJson(newJson);
    case 'messageSupergroupChatCreate':
      return MessageSupergroupChatCreate.fromJson(newJson);
    case 'messageChatChangeTitle':
      return MessageChatChangeTitle.fromJson(newJson);
    case 'messageChatChangePhoto':
      return MessageChatChangePhoto.fromJson(newJson);
    case 'messageChatDeletePhoto':
      return MessageChatDeletePhoto.fromJson(newJson);
    case 'messageChatAddMembers':
      return MessageChatAddMembers.fromJson(newJson);
    case 'messageChatJoinByLink':
      return MessageChatJoinByLink.fromJson(newJson);
    case 'messageChatJoinByRequest':
      return MessageChatJoinByRequest.fromJson(newJson);
    case 'messageChatDeleteMember':
      return MessageChatDeleteMember.fromJson(newJson);
    case 'messageChatUpgradeTo':
      return MessageChatUpgradeTo.fromJson(newJson);
    case 'messageChatUpgradeFrom':
      return MessageChatUpgradeFrom.fromJson(newJson);
    case 'messagePinMessage':
      return MessagePinMessage.fromJson(newJson);
    case 'messageScreenshotTaken':
      return MessageScreenshotTaken.fromJson(newJson);
    case 'messageChatSetBackground':
      return MessageChatSetBackground.fromJson(newJson);
    case 'messageChatSetTheme':
      return MessageChatSetTheme.fromJson(newJson);
    case 'messageChatSetMessageAutoDeleteTime':
      return MessageChatSetMessageAutoDeleteTime.fromJson(newJson);
    case 'messageChatBoost':
      return MessageChatBoost.fromJson(newJson);
    case 'messageForumTopicCreated':
      return MessageForumTopicCreated.fromJson(newJson);
    case 'messageForumTopicEdited':
      return MessageForumTopicEdited.fromJson(newJson);
    case 'messageForumTopicIsClosedToggled':
      return MessageForumTopicIsClosedToggled.fromJson(newJson);
    case 'messageForumTopicIsHiddenToggled':
      return MessageForumTopicIsHiddenToggled.fromJson(newJson);
    case 'messageSuggestProfilePhoto':
      return MessageSuggestProfilePhoto.fromJson(newJson);
    case 'messageCustomServiceAction':
      return MessageCustomServiceAction.fromJson(newJson);
    case 'messageGameScore':
      return MessageGameScore.fromJson(newJson);
    case 'messagePaymentSuccessful':
      return MessagePaymentSuccessful.fromJson(newJson);
    case 'messagePaymentSuccessfulBot':
      return MessagePaymentSuccessfulBot.fromJson(newJson);
    case 'messagePaymentRefunded':
      return MessagePaymentRefunded.fromJson(newJson);
    case 'messageGiftedPremium':
      return MessageGiftedPremium.fromJson(newJson);
    case 'messagePremiumGiftCode':
      return MessagePremiumGiftCode.fromJson(newJson);
    case 'messageGiveawayCreated':
      return MessageGiveawayCreated.fromJson(newJson);
    case 'messageGiveaway':
      return MessageGiveaway.fromJson(newJson);
    case 'messageGiveawayCompleted':
      return MessageGiveawayCompleted.fromJson(newJson);
    case 'messageGiveawayWinners':
      return MessageGiveawayWinners.fromJson(newJson);
    case 'messageGiftedStars':
      return MessageGiftedStars.fromJson(newJson);
    case 'messageGiveawayPrizeStars':
      return MessageGiveawayPrizeStars.fromJson(newJson);
    case 'messageGift':
      return MessageGift.fromJson(newJson);
    case 'messageUpgradedGift':
      return MessageUpgradedGift.fromJson(newJson);
    case 'messageRefundedUpgradedGift':
      return MessageRefundedUpgradedGift.fromJson(newJson);
    case 'messagePaidMessagesRefunded':
      return MessagePaidMessagesRefunded.fromJson(newJson);
    case 'messagePaidMessagePriceChanged':
      return MessagePaidMessagePriceChanged.fromJson(newJson);
    case 'messageContactRegistered':
      return MessageContactRegistered.fromJson(newJson);
    case 'messageUsersShared':
      return MessageUsersShared.fromJson(newJson);
    case 'messageChatShared':
      return MessageChatShared.fromJson(newJson);
    case 'messageBotWriteAccessAllowed':
      return MessageBotWriteAccessAllowed.fromJson(newJson);
    case 'messageWebAppDataSent':
      return MessageWebAppDataSent.fromJson(newJson);
    case 'messageWebAppDataReceived':
      return MessageWebAppDataReceived.fromJson(newJson);
    case 'messagePassportDataSent':
      return MessagePassportDataSent.fromJson(newJson);
    case 'messagePassportDataReceived':
      return MessagePassportDataReceived.fromJson(newJson);
    case 'messageProximityAlertTriggered':
      return MessageProximityAlertTriggered.fromJson(newJson);
    case 'messageUnsupported':
      return MessageUnsupported.fromJson(newJson);
    case 'textEntityType':
      return TextEntityType.fromJson(newJson);
    case 'textEntityTypeMention':
      return TextEntityTypeMention.fromJson(newJson);
    case 'textEntityTypeHashtag':
      return TextEntityTypeHashtag.fromJson(newJson);
    case 'textEntityTypeCashtag':
      return TextEntityTypeCashtag.fromJson(newJson);
    case 'textEntityTypeBotCommand':
      return TextEntityTypeBotCommand.fromJson(newJson);
    case 'textEntityTypeUrl':
      return TextEntityTypeUrl.fromJson(newJson);
    case 'textEntityTypeEmailAddress':
      return TextEntityTypeEmailAddress.fromJson(newJson);
    case 'textEntityTypePhoneNumber':
      return TextEntityTypePhoneNumber.fromJson(newJson);
    case 'textEntityTypeBankCardNumber':
      return TextEntityTypeBankCardNumber.fromJson(newJson);
    case 'textEntityTypeBold':
      return TextEntityTypeBold.fromJson(newJson);
    case 'textEntityTypeItalic':
      return TextEntityTypeItalic.fromJson(newJson);
    case 'textEntityTypeUnderline':
      return TextEntityTypeUnderline.fromJson(newJson);
    case 'textEntityTypeStrikethrough':
      return TextEntityTypeStrikethrough.fromJson(newJson);
    case 'textEntityTypeSpoiler':
      return TextEntityTypeSpoiler.fromJson(newJson);
    case 'textEntityTypeCode':
      return TextEntityTypeCode.fromJson(newJson);
    case 'textEntityTypePre':
      return TextEntityTypePre.fromJson(newJson);
    case 'textEntityTypePreCode':
      return TextEntityTypePreCode.fromJson(newJson);
    case 'textEntityTypeBlockQuote':
      return TextEntityTypeBlockQuote.fromJson(newJson);
    case 'textEntityTypeExpandableBlockQuote':
      return TextEntityTypeExpandableBlockQuote.fromJson(newJson);
    case 'textEntityTypeTextUrl':
      return TextEntityTypeTextUrl.fromJson(newJson);
    case 'textEntityTypeMentionName':
      return TextEntityTypeMentionName.fromJson(newJson);
    case 'textEntityTypeCustomEmoji':
      return TextEntityTypeCustomEmoji.fromJson(newJson);
    case 'textEntityTypeMediaTimestamp':
      return TextEntityTypeMediaTimestamp.fromJson(newJson);
    case 'inputThumbnail':
      return InputThumbnail.fromJson(newJson);
    case 'inputPaidMediaType':
      return InputPaidMediaType.fromJson(newJson);
    case 'inputPaidMediaTypePhoto':
      return InputPaidMediaTypePhoto.fromJson(newJson);
    case 'inputPaidMediaTypeVideo':
      return InputPaidMediaTypeVideo.fromJson(newJson);
    case 'inputPaidMedia':
      return InputPaidMedia.fromJson(newJson);
    case 'messageSchedulingState':
      return MessageSchedulingState.fromJson(newJson);
    case 'messageSchedulingStateSendAtDate':
      return MessageSchedulingStateSendAtDate.fromJson(newJson);
    case 'messageSchedulingStateSendWhenOnline':
      return MessageSchedulingStateSendWhenOnline.fromJson(newJson);
    case 'messageSchedulingStateSendWhenVideoProcessed':
      return MessageSchedulingStateSendWhenVideoProcessed.fromJson(newJson);
    case 'messageSelfDestructType':
      return MessageSelfDestructType.fromJson(newJson);
    case 'messageSelfDestructTypeTimer':
      return MessageSelfDestructTypeTimer.fromJson(newJson);
    case 'messageSelfDestructTypeImmediately':
      return MessageSelfDestructTypeImmediately.fromJson(newJson);
    case 'messageSendOptions':
      return MessageSendOptions.fromJson(newJson);
    case 'messageCopyOptions':
      return MessageCopyOptions.fromJson(newJson);
    case 'inputMessageContent':
      return InputMessageContent.fromJson(newJson);
    case 'inputMessageText':
      return InputMessageText.fromJson(newJson);
    case 'inputMessageAnimation':
      return InputMessageAnimation.fromJson(newJson);
    case 'inputMessageAudio':
      return InputMessageAudio.fromJson(newJson);
    case 'inputMessageDocument':
      return InputMessageDocument.fromJson(newJson);
    case 'inputMessagePaidMedia':
      return InputMessagePaidMedia.fromJson(newJson);
    case 'inputMessagePhoto':
      return InputMessagePhoto.fromJson(newJson);
    case 'inputMessageSticker':
      return InputMessageSticker.fromJson(newJson);
    case 'inputMessageVideo':
      return InputMessageVideo.fromJson(newJson);
    case 'inputMessageVideoNote':
      return InputMessageVideoNote.fromJson(newJson);
    case 'inputMessageVoiceNote':
      return InputMessageVoiceNote.fromJson(newJson);
    case 'inputMessageLocation':
      return InputMessageLocation.fromJson(newJson);
    case 'inputMessageVenue':
      return InputMessageVenue.fromJson(newJson);
    case 'inputMessageContact':
      return InputMessageContact.fromJson(newJson);
    case 'inputMessageDice':
      return InputMessageDice.fromJson(newJson);
    case 'inputMessageGame':
      return InputMessageGame.fromJson(newJson);
    case 'inputMessageInvoice':
      return InputMessageInvoice.fromJson(newJson);
    case 'inputMessagePoll':
      return InputMessagePoll.fromJson(newJson);
    case 'inputMessageStory':
      return InputMessageStory.fromJson(newJson);
    case 'inputMessageForwarded':
      return InputMessageForwarded.fromJson(newJson);
    case 'messageProperties':
      return MessageProperties.fromJson(newJson);
    case 'searchMessagesFilter':
      return SearchMessagesFilter.fromJson(newJson);
    case 'searchMessagesFilterEmpty':
      return SearchMessagesFilterEmpty.fromJson(newJson);
    case 'searchMessagesFilterAnimation':
      return SearchMessagesFilterAnimation.fromJson(newJson);
    case 'searchMessagesFilterAudio':
      return SearchMessagesFilterAudio.fromJson(newJson);
    case 'searchMessagesFilterDocument':
      return SearchMessagesFilterDocument.fromJson(newJson);
    case 'searchMessagesFilterPhoto':
      return SearchMessagesFilterPhoto.fromJson(newJson);
    case 'searchMessagesFilterVideo':
      return SearchMessagesFilterVideo.fromJson(newJson);
    case 'searchMessagesFilterVoiceNote':
      return SearchMessagesFilterVoiceNote.fromJson(newJson);
    case 'searchMessagesFilterPhotoAndVideo':
      return SearchMessagesFilterPhotoAndVideo.fromJson(newJson);
    case 'searchMessagesFilterUrl':
      return SearchMessagesFilterUrl.fromJson(newJson);
    case 'searchMessagesFilterChatPhoto':
      return SearchMessagesFilterChatPhoto.fromJson(newJson);
    case 'searchMessagesFilterVideoNote':
      return SearchMessagesFilterVideoNote.fromJson(newJson);
    case 'searchMessagesFilterVoiceAndVideoNote':
      return SearchMessagesFilterVoiceAndVideoNote.fromJson(newJson);
    case 'searchMessagesFilterMention':
      return SearchMessagesFilterMention.fromJson(newJson);
    case 'searchMessagesFilterUnreadMention':
      return SearchMessagesFilterUnreadMention.fromJson(newJson);
    case 'searchMessagesFilterUnreadReaction':
      return SearchMessagesFilterUnreadReaction.fromJson(newJson);
    case 'searchMessagesFilterFailedToSend':
      return SearchMessagesFilterFailedToSend.fromJson(newJson);
    case 'searchMessagesFilterPinned':
      return SearchMessagesFilterPinned.fromJson(newJson);
    case 'searchMessagesChatTypeFilter':
      return SearchMessagesChatTypeFilter.fromJson(newJson);
    case 'searchMessagesChatTypeFilterPrivate':
      return SearchMessagesChatTypeFilterPrivate.fromJson(newJson);
    case 'searchMessagesChatTypeFilterGroup':
      return SearchMessagesChatTypeFilterGroup.fromJson(newJson);
    case 'searchMessagesChatTypeFilterChannel':
      return SearchMessagesChatTypeFilterChannel.fromJson(newJson);
    case 'chatAction':
      return ChatAction.fromJson(newJson);
    case 'chatActionTyping':
      return ChatActionTyping.fromJson(newJson);
    case 'chatActionRecordingVideo':
      return ChatActionRecordingVideo.fromJson(newJson);
    case 'chatActionUploadingVideo':
      return ChatActionUploadingVideo.fromJson(newJson);
    case 'chatActionRecordingVoiceNote':
      return ChatActionRecordingVoiceNote.fromJson(newJson);
    case 'chatActionUploadingVoiceNote':
      return ChatActionUploadingVoiceNote.fromJson(newJson);
    case 'chatActionUploadingPhoto':
      return ChatActionUploadingPhoto.fromJson(newJson);
    case 'chatActionUploadingDocument':
      return ChatActionUploadingDocument.fromJson(newJson);
    case 'chatActionChoosingSticker':
      return ChatActionChoosingSticker.fromJson(newJson);
    case 'chatActionChoosingLocation':
      return ChatActionChoosingLocation.fromJson(newJson);
    case 'chatActionChoosingContact':
      return ChatActionChoosingContact.fromJson(newJson);
    case 'chatActionStartPlayingGame':
      return ChatActionStartPlayingGame.fromJson(newJson);
    case 'chatActionRecordingVideoNote':
      return ChatActionRecordingVideoNote.fromJson(newJson);
    case 'chatActionUploadingVideoNote':
      return ChatActionUploadingVideoNote.fromJson(newJson);
    case 'chatActionWatchingAnimations':
      return ChatActionWatchingAnimations.fromJson(newJson);
    case 'chatActionCancel':
      return ChatActionCancel.fromJson(newJson);
    case 'userStatus':
      return UserStatus.fromJson(newJson);
    case 'userStatusEmpty':
      return UserStatusEmpty.fromJson(newJson);
    case 'userStatusOnline':
      return UserStatusOnline.fromJson(newJson);
    case 'userStatusOffline':
      return UserStatusOffline.fromJson(newJson);
    case 'userStatusRecently':
      return UserStatusRecently.fromJson(newJson);
    case 'userStatusLastWeek':
      return UserStatusLastWeek.fromJson(newJson);
    case 'userStatusLastMonth':
      return UserStatusLastMonth.fromJson(newJson);
    case 'emojiKeyword':
      return EmojiKeyword.fromJson(newJson);
    case 'emojiKeywords':
      return EmojiKeywords.fromJson(newJson);
    case 'stickers':
      return Stickers.fromJson(newJson);
    case 'emojis':
      return Emojis.fromJson(newJson);
    case 'stickerSet':
      return StickerSet.fromJson(newJson);
    case 'stickerSetInfo':
      return StickerSetInfo.fromJson(newJson);
    case 'stickerSets':
      return StickerSets.fromJson(newJson);
    case 'trendingStickerSets':
      return TrendingStickerSets.fromJson(newJson);
    case 'emojiCategorySource':
      return EmojiCategorySource.fromJson(newJson);
    case 'emojiCategorySourceSearch':
      return EmojiCategorySourceSearch.fromJson(newJson);
    case 'emojiCategorySourcePremium':
      return EmojiCategorySourcePremium.fromJson(newJson);
    case 'emojiCategory':
      return EmojiCategory.fromJson(newJson);
    case 'emojiCategories':
      return EmojiCategories.fromJson(newJson);
    case 'emojiCategoryType':
      return EmojiCategoryType.fromJson(newJson);
    case 'emojiCategoryTypeDefault':
      return EmojiCategoryTypeDefault.fromJson(newJson);
    case 'emojiCategoryTypeRegularStickers':
      return EmojiCategoryTypeRegularStickers.fromJson(newJson);
    case 'emojiCategoryTypeEmojiStatus':
      return EmojiCategoryTypeEmojiStatus.fromJson(newJson);
    case 'emojiCategoryTypeChatPhoto':
      return EmojiCategoryTypeChatPhoto.fromJson(newJson);
    case 'currentWeather':
      return CurrentWeather.fromJson(newJson);
    case 'storyAreaPosition':
      return StoryAreaPosition.fromJson(newJson);
    case 'storyAreaType':
      return StoryAreaType.fromJson(newJson);
    case 'storyAreaTypeLocation':
      return StoryAreaTypeLocation.fromJson(newJson);
    case 'storyAreaTypeVenue':
      return StoryAreaTypeVenue.fromJson(newJson);
    case 'storyAreaTypeSuggestedReaction':
      return StoryAreaTypeSuggestedReaction.fromJson(newJson);
    case 'storyAreaTypeMessage':
      return StoryAreaTypeMessage.fromJson(newJson);
    case 'storyAreaTypeLink':
      return StoryAreaTypeLink.fromJson(newJson);
    case 'storyAreaTypeWeather':
      return StoryAreaTypeWeather.fromJson(newJson);
    case 'storyAreaTypeUpgradedGift':
      return StoryAreaTypeUpgradedGift.fromJson(newJson);
    case 'storyArea':
      return StoryArea.fromJson(newJson);
    case 'inputStoryAreaType':
      return InputStoryAreaType.fromJson(newJson);
    case 'inputStoryAreaTypeLocation':
      return InputStoryAreaTypeLocation.fromJson(newJson);
    case 'inputStoryAreaTypeFoundVenue':
      return InputStoryAreaTypeFoundVenue.fromJson(newJson);
    case 'inputStoryAreaTypePreviousVenue':
      return InputStoryAreaTypePreviousVenue.fromJson(newJson);
    case 'inputStoryAreaTypeSuggestedReaction':
      return InputStoryAreaTypeSuggestedReaction.fromJson(newJson);
    case 'inputStoryAreaTypeMessage':
      return InputStoryAreaTypeMessage.fromJson(newJson);
    case 'inputStoryAreaTypeLink':
      return InputStoryAreaTypeLink.fromJson(newJson);
    case 'inputStoryAreaTypeWeather':
      return InputStoryAreaTypeWeather.fromJson(newJson);
    case 'inputStoryAreaTypeUpgradedGift':
      return InputStoryAreaTypeUpgradedGift.fromJson(newJson);
    case 'inputStoryArea':
      return InputStoryArea.fromJson(newJson);
    case 'inputStoryAreas':
      return InputStoryAreas.fromJson(newJson);
    case 'storyVideo':
      return StoryVideo.fromJson(newJson);
    case 'storyContent':
      return StoryContent.fromJson(newJson);
    case 'storyContentPhoto':
      return StoryContentPhoto.fromJson(newJson);
    case 'storyContentVideo':
      return StoryContentVideo.fromJson(newJson);
    case 'storyContentUnsupported':
      return StoryContentUnsupported.fromJson(newJson);
    case 'inputStoryContent':
      return InputStoryContent.fromJson(newJson);
    case 'inputStoryContentPhoto':
      return InputStoryContentPhoto.fromJson(newJson);
    case 'inputStoryContentVideo':
      return InputStoryContentVideo.fromJson(newJson);
    case 'storyList':
      return StoryList.fromJson(newJson);
    case 'storyListMain':
      return StoryListMain.fromJson(newJson);
    case 'storyListArchive':
      return StoryListArchive.fromJson(newJson);
    case 'storyOrigin':
      return StoryOrigin.fromJson(newJson);
    case 'storyOriginPublicStory':
      return StoryOriginPublicStory.fromJson(newJson);
    case 'storyOriginHiddenUser':
      return StoryOriginHiddenUser.fromJson(newJson);
    case 'storyRepostInfo':
      return StoryRepostInfo.fromJson(newJson);
    case 'storyInteractionInfo':
      return StoryInteractionInfo.fromJson(newJson);
    case 'story':
      return Story.fromJson(newJson);
    case 'stories':
      return Stories.fromJson(newJson);
    case 'foundStories':
      return FoundStories.fromJson(newJson);
    case 'storyFullId':
      return StoryFullId.fromJson(newJson);
    case 'storyInfo':
      return StoryInfo.fromJson(newJson);
    case 'chatActiveStories':
      return ChatActiveStories.fromJson(newJson);
    case 'storyInteractionType':
      return StoryInteractionType.fromJson(newJson);
    case 'storyInteractionTypeView':
      return StoryInteractionTypeView.fromJson(newJson);
    case 'storyInteractionTypeForward':
      return StoryInteractionTypeForward.fromJson(newJson);
    case 'storyInteractionTypeRepost':
      return StoryInteractionTypeRepost.fromJson(newJson);
    case 'storyInteraction':
      return StoryInteraction.fromJson(newJson);
    case 'storyInteractions':
      return StoryInteractions.fromJson(newJson);
    case 'quickReplyMessage':
      return QuickReplyMessage.fromJson(newJson);
    case 'quickReplyMessages':
      return QuickReplyMessages.fromJson(newJson);
    case 'quickReplyShortcut':
      return QuickReplyShortcut.fromJson(newJson);
    case 'publicForward':
      return PublicForward.fromJson(newJson);
    case 'publicForwardMessage':
      return PublicForwardMessage.fromJson(newJson);
    case 'publicForwardStory':
      return PublicForwardStory.fromJson(newJson);
    case 'publicForwards':
      return PublicForwards.fromJson(newJson);
    case 'botMediaPreview':
      return BotMediaPreview.fromJson(newJson);
    case 'botMediaPreviews':
      return BotMediaPreviews.fromJson(newJson);
    case 'botMediaPreviewInfo':
      return BotMediaPreviewInfo.fromJson(newJson);
    case 'chatBoostLevelFeatures':
      return ChatBoostLevelFeatures.fromJson(newJson);
    case 'chatBoostFeatures':
      return ChatBoostFeatures.fromJson(newJson);
    case 'chatBoostSource':
      return ChatBoostSource.fromJson(newJson);
    case 'chatBoostSourceGiftCode':
      return ChatBoostSourceGiftCode.fromJson(newJson);
    case 'chatBoostSourceGiveaway':
      return ChatBoostSourceGiveaway.fromJson(newJson);
    case 'chatBoostSourcePremium':
      return ChatBoostSourcePremium.fromJson(newJson);
    case 'prepaidGiveaway':
      return PrepaidGiveaway.fromJson(newJson);
    case 'chatBoostStatus':
      return ChatBoostStatus.fromJson(newJson);
    case 'chatBoost':
      return ChatBoost.fromJson(newJson);
    case 'foundChatBoosts':
      return FoundChatBoosts.fromJson(newJson);
    case 'chatBoostSlot':
      return ChatBoostSlot.fromJson(newJson);
    case 'chatBoostSlots':
      return ChatBoostSlots.fromJson(newJson);
    case 'resendCodeReason':
      return ResendCodeReason.fromJson(newJson);
    case 'resendCodeReasonUserRequest':
      return ResendCodeReasonUserRequest.fromJson(newJson);
    case 'resendCodeReasonVerificationFailed':
      return ResendCodeReasonVerificationFailed.fromJson(newJson);
    case 'callDiscardReason':
      return CallDiscardReason.fromJson(newJson);
    case 'callDiscardReasonEmpty':
      return CallDiscardReasonEmpty.fromJson(newJson);
    case 'callDiscardReasonMissed':
      return CallDiscardReasonMissed.fromJson(newJson);
    case 'callDiscardReasonDeclined':
      return CallDiscardReasonDeclined.fromJson(newJson);
    case 'callDiscardReasonDisconnected':
      return CallDiscardReasonDisconnected.fromJson(newJson);
    case 'callDiscardReasonHungUp':
      return CallDiscardReasonHungUp.fromJson(newJson);
    case 'callDiscardReasonUpgradeToGroupCall':
      return CallDiscardReasonUpgradeToGroupCall.fromJson(newJson);
    case 'callProtocol':
      return CallProtocol.fromJson(newJson);
    case 'callServerType':
      return CallServerType.fromJson(newJson);
    case 'callServerTypeTelegramReflector':
      return CallServerTypeTelegramReflector.fromJson(newJson);
    case 'callServerTypeWebrtc':
      return CallServerTypeWebrtc.fromJson(newJson);
    case 'callServer':
      return CallServer.fromJson(newJson);
    case 'callId':
      return CallId.fromJson(newJson);
    case 'groupCallId':
      return GroupCallId.fromJson(newJson);
    case 'callState':
      return CallState.fromJson(newJson);
    case 'callStatePending':
      return CallStatePending.fromJson(newJson);
    case 'callStateExchangingKeys':
      return CallStateExchangingKeys.fromJson(newJson);
    case 'callStateReady':
      return CallStateReady.fromJson(newJson);
    case 'callStateHangingUp':
      return CallStateHangingUp.fromJson(newJson);
    case 'callStateDiscarded':
      return CallStateDiscarded.fromJson(newJson);
    case 'callStateError':
      return CallStateError.fromJson(newJson);
    case 'groupCallJoinParameters':
      return GroupCallJoinParameters.fromJson(newJson);
    case 'groupCallVideoQuality':
      return GroupCallVideoQuality.fromJson(newJson);
    case 'groupCallVideoQualityThumbnail':
      return GroupCallVideoQualityThumbnail.fromJson(newJson);
    case 'groupCallVideoQualityMedium':
      return GroupCallVideoQualityMedium.fromJson(newJson);
    case 'groupCallVideoQualityFull':
      return GroupCallVideoQualityFull.fromJson(newJson);
    case 'videoChatStream':
      return VideoChatStream.fromJson(newJson);
    case 'videoChatStreams':
      return VideoChatStreams.fromJson(newJson);
    case 'rtmpUrl':
      return RtmpUrl.fromJson(newJson);
    case 'groupCallRecentSpeaker':
      return GroupCallRecentSpeaker.fromJson(newJson);
    case 'groupCall':
      return GroupCall.fromJson(newJson);
    case 'groupCallVideoSourceGroup':
      return GroupCallVideoSourceGroup.fromJson(newJson);
    case 'groupCallParticipantVideoInfo':
      return GroupCallParticipantVideoInfo.fromJson(newJson);
    case 'groupCallParticipant':
      return GroupCallParticipant.fromJson(newJson);
    case 'groupCallParticipants':
      return GroupCallParticipants.fromJson(newJson);
    case 'groupCallInfo':
      return GroupCallInfo.fromJson(newJson);
    case 'inviteGroupCallParticipantResult':
      return InviteGroupCallParticipantResult.fromJson(newJson);
    case 'inviteGroupCallParticipantResultUserPrivacyRestricted':
      return InviteGroupCallParticipantResultUserPrivacyRestricted.fromJson(
          newJson);
    case 'inviteGroupCallParticipantResultUserAlreadyParticipant':
      return InviteGroupCallParticipantResultUserAlreadyParticipant.fromJson(
          newJson);
    case 'inviteGroupCallParticipantResultUserWasBanned':
      return InviteGroupCallParticipantResultUserWasBanned.fromJson(newJson);
    case 'inviteGroupCallParticipantResultSuccess':
      return InviteGroupCallParticipantResultSuccess.fromJson(newJson);
    case 'groupCallDataChannel':
      return GroupCallDataChannel.fromJson(newJson);
    case 'groupCallDataChannelMain':
      return GroupCallDataChannelMain.fromJson(newJson);
    case 'groupCallDataChannelScreenSharing':
      return GroupCallDataChannelScreenSharing.fromJson(newJson);
    case 'inputGroupCall':
      return InputGroupCall.fromJson(newJson);
    case 'inputGroupCallLink':
      return InputGroupCallLink.fromJson(newJson);
    case 'inputGroupCallMessage':
      return InputGroupCallMessage.fromJson(newJson);
    case 'callProblem':
      return CallProblem.fromJson(newJson);
    case 'callProblemEcho':
      return CallProblemEcho.fromJson(newJson);
    case 'callProblemNoise':
      return CallProblemNoise.fromJson(newJson);
    case 'callProblemInterruptions':
      return CallProblemInterruptions.fromJson(newJson);
    case 'callProblemDistortedSpeech':
      return CallProblemDistortedSpeech.fromJson(newJson);
    case 'callProblemSilentLocal':
      return CallProblemSilentLocal.fromJson(newJson);
    case 'callProblemSilentRemote':
      return CallProblemSilentRemote.fromJson(newJson);
    case 'callProblemDropped':
      return CallProblemDropped.fromJson(newJson);
    case 'callProblemDistortedVideo':
      return CallProblemDistortedVideo.fromJson(newJson);
    case 'callProblemPixelatedVideo':
      return CallProblemPixelatedVideo.fromJson(newJson);
    case 'call':
      return Call.fromJson(newJson);
    case 'firebaseAuthenticationSettings':
      return FirebaseAuthenticationSettings.fromJson(newJson);
    case 'firebaseAuthenticationSettingsAndroid':
      return FirebaseAuthenticationSettingsAndroid.fromJson(newJson);
    case 'firebaseAuthenticationSettingsIos':
      return FirebaseAuthenticationSettingsIos.fromJson(newJson);
    case 'phoneNumberAuthenticationSettings':
      return PhoneNumberAuthenticationSettings.fromJson(newJson);
    case 'addedReaction':
      return AddedReaction.fromJson(newJson);
    case 'addedReactions':
      return AddedReactions.fromJson(newJson);
    case 'availableReaction':
      return AvailableReaction.fromJson(newJson);
    case 'availableReactions':
      return AvailableReactions.fromJson(newJson);
    case 'emojiReaction':
      return EmojiReaction.fromJson(newJson);
    case 'reactionUnavailabilityReason':
      return ReactionUnavailabilityReason.fromJson(newJson);
    case 'reactionUnavailabilityReasonAnonymousAdministrator':
      return ReactionUnavailabilityReasonAnonymousAdministrator.fromJson(
          newJson);
    case 'reactionUnavailabilityReasonGuest':
      return ReactionUnavailabilityReasonGuest.fromJson(newJson);
    case 'animations':
      return Animations.fromJson(newJson);
    case 'diceStickers':
      return DiceStickers.fromJson(newJson);
    case 'diceStickersRegular':
      return DiceStickersRegular.fromJson(newJson);
    case 'diceStickersSlotMachine':
      return DiceStickersSlotMachine.fromJson(newJson);
    case 'importedContacts':
      return ImportedContacts.fromJson(newJson);
    case 'speechRecognitionResult':
      return SpeechRecognitionResult.fromJson(newJson);
    case 'speechRecognitionResultPending':
      return SpeechRecognitionResultPending.fromJson(newJson);
    case 'speechRecognitionResultText':
      return SpeechRecognitionResultText.fromJson(newJson);
    case 'speechRecognitionResultError':
      return SpeechRecognitionResultError.fromJson(newJson);
    case 'businessConnection':
      return BusinessConnection.fromJson(newJson);
    case 'attachmentMenuBotColor':
      return AttachmentMenuBotColor.fromJson(newJson);
    case 'attachmentMenuBot':
      return AttachmentMenuBot.fromJson(newJson);
    case 'sentWebAppMessage':
      return SentWebAppMessage.fromJson(newJson);
    case 'botWriteAccessAllowReason':
      return BotWriteAccessAllowReason.fromJson(newJson);
    case 'botWriteAccessAllowReasonConnectedWebsite':
      return BotWriteAccessAllowReasonConnectedWebsite.fromJson(newJson);
    case 'botWriteAccessAllowReasonAddedToAttachmentMenu':
      return BotWriteAccessAllowReasonAddedToAttachmentMenu.fromJson(newJson);
    case 'botWriteAccessAllowReasonLaunchedWebApp':
      return BotWriteAccessAllowReasonLaunchedWebApp.fromJson(newJson);
    case 'botWriteAccessAllowReasonAcceptedRequest':
      return BotWriteAccessAllowReasonAcceptedRequest.fromJson(newJson);
    case 'httpUrl':
      return HttpUrl.fromJson(newJson);
    case 'userLink':
      return UserLink.fromJson(newJson);
    case 'targetChatTypes':
      return TargetChatTypes.fromJson(newJson);
    case 'targetChat':
      return TargetChat.fromJson(newJson);
    case 'targetChatCurrent':
      return TargetChatCurrent.fromJson(newJson);
    case 'targetChatChosen':
      return TargetChatChosen.fromJson(newJson);
    case 'targetChatInternalLink':
      return TargetChatInternalLink.fromJson(newJson);
    case 'inputInlineQueryResult':
      return InputInlineQueryResult.fromJson(newJson);
    case 'inputInlineQueryResultAnimation':
      return InputInlineQueryResultAnimation.fromJson(newJson);
    case 'inputInlineQueryResultArticle':
      return InputInlineQueryResultArticle.fromJson(newJson);
    case 'inputInlineQueryResultAudio':
      return InputInlineQueryResultAudio.fromJson(newJson);
    case 'inputInlineQueryResultContact':
      return InputInlineQueryResultContact.fromJson(newJson);
    case 'inputInlineQueryResultDocument':
      return InputInlineQueryResultDocument.fromJson(newJson);
    case 'inputInlineQueryResultGame':
      return InputInlineQueryResultGame.fromJson(newJson);
    case 'inputInlineQueryResultLocation':
      return InputInlineQueryResultLocation.fromJson(newJson);
    case 'inputInlineQueryResultPhoto':
      return InputInlineQueryResultPhoto.fromJson(newJson);
    case 'inputInlineQueryResultSticker':
      return InputInlineQueryResultSticker.fromJson(newJson);
    case 'inputInlineQueryResultVenue':
      return InputInlineQueryResultVenue.fromJson(newJson);
    case 'inputInlineQueryResultVideo':
      return InputInlineQueryResultVideo.fromJson(newJson);
    case 'inputInlineQueryResultVoiceNote':
      return InputInlineQueryResultVoiceNote.fromJson(newJson);
    case 'inlineQueryResult':
      return InlineQueryResult.fromJson(newJson);
    case 'inlineQueryResultArticle':
      return InlineQueryResultArticle.fromJson(newJson);
    case 'inlineQueryResultContact':
      return InlineQueryResultContact.fromJson(newJson);
    case 'inlineQueryResultLocation':
      return InlineQueryResultLocation.fromJson(newJson);
    case 'inlineQueryResultVenue':
      return InlineQueryResultVenue.fromJson(newJson);
    case 'inlineQueryResultGame':
      return InlineQueryResultGame.fromJson(newJson);
    case 'inlineQueryResultAnimation':
      return InlineQueryResultAnimation.fromJson(newJson);
    case 'inlineQueryResultAudio':
      return InlineQueryResultAudio.fromJson(newJson);
    case 'inlineQueryResultDocument':
      return InlineQueryResultDocument.fromJson(newJson);
    case 'inlineQueryResultPhoto':
      return InlineQueryResultPhoto.fromJson(newJson);
    case 'inlineQueryResultSticker':
      return InlineQueryResultSticker.fromJson(newJson);
    case 'inlineQueryResultVideo':
      return InlineQueryResultVideo.fromJson(newJson);
    case 'inlineQueryResultVoiceNote':
      return InlineQueryResultVoiceNote.fromJson(newJson);
    case 'inlineQueryResultsButtonType':
      return InlineQueryResultsButtonType.fromJson(newJson);
    case 'inlineQueryResultsButtonTypeStartBot':
      return InlineQueryResultsButtonTypeStartBot.fromJson(newJson);
    case 'inlineQueryResultsButtonTypeWebApp':
      return InlineQueryResultsButtonTypeWebApp.fromJson(newJson);
    case 'inlineQueryResultsButton':
      return InlineQueryResultsButton.fromJson(newJson);
    case 'inlineQueryResults':
      return InlineQueryResults.fromJson(newJson);
    case 'preparedInlineMessageId':
      return PreparedInlineMessageId.fromJson(newJson);
    case 'preparedInlineMessage':
      return PreparedInlineMessage.fromJson(newJson);
    case 'callbackQueryPayload':
      return CallbackQueryPayload.fromJson(newJson);
    case 'callbackQueryPayloadData':
      return CallbackQueryPayloadData.fromJson(newJson);
    case 'callbackQueryPayloadDataWithPassword':
      return CallbackQueryPayloadDataWithPassword.fromJson(newJson);
    case 'callbackQueryPayloadGame':
      return CallbackQueryPayloadGame.fromJson(newJson);
    case 'callbackQueryAnswer':
      return CallbackQueryAnswer.fromJson(newJson);
    case 'customRequestResult':
      return CustomRequestResult.fromJson(newJson);
    case 'gameHighScore':
      return GameHighScore.fromJson(newJson);
    case 'gameHighScores':
      return GameHighScores.fromJson(newJson);
    case 'chatEventAction':
      return ChatEventAction.fromJson(newJson);
    case 'chatEventMessageEdited':
      return ChatEventMessageEdited.fromJson(newJson);
    case 'chatEventMessageDeleted':
      return ChatEventMessageDeleted.fromJson(newJson);
    case 'chatEventMessagePinned':
      return ChatEventMessagePinned.fromJson(newJson);
    case 'chatEventMessageUnpinned':
      return ChatEventMessageUnpinned.fromJson(newJson);
    case 'chatEventPollStopped':
      return ChatEventPollStopped.fromJson(newJson);
    case 'chatEventMemberJoined':
      return ChatEventMemberJoined.fromJson(newJson);
    case 'chatEventMemberJoinedByInviteLink':
      return ChatEventMemberJoinedByInviteLink.fromJson(newJson);
    case 'chatEventMemberJoinedByRequest':
      return ChatEventMemberJoinedByRequest.fromJson(newJson);
    case 'chatEventMemberInvited':
      return ChatEventMemberInvited.fromJson(newJson);
    case 'chatEventMemberLeft':
      return ChatEventMemberLeft.fromJson(newJson);
    case 'chatEventMemberPromoted':
      return ChatEventMemberPromoted.fromJson(newJson);
    case 'chatEventMemberRestricted':
      return ChatEventMemberRestricted.fromJson(newJson);
    case 'chatEventMemberSubscriptionExtended':
      return ChatEventMemberSubscriptionExtended.fromJson(newJson);
    case 'chatEventAvailableReactionsChanged':
      return ChatEventAvailableReactionsChanged.fromJson(newJson);
    case 'chatEventBackgroundChanged':
      return ChatEventBackgroundChanged.fromJson(newJson);
    case 'chatEventDescriptionChanged':
      return ChatEventDescriptionChanged.fromJson(newJson);
    case 'chatEventEmojiStatusChanged':
      return ChatEventEmojiStatusChanged.fromJson(newJson);
    case 'chatEventLinkedChatChanged':
      return ChatEventLinkedChatChanged.fromJson(newJson);
    case 'chatEventLocationChanged':
      return ChatEventLocationChanged.fromJson(newJson);
    case 'chatEventMessageAutoDeleteTimeChanged':
      return ChatEventMessageAutoDeleteTimeChanged.fromJson(newJson);
    case 'chatEventPermissionsChanged':
      return ChatEventPermissionsChanged.fromJson(newJson);
    case 'chatEventPhotoChanged':
      return ChatEventPhotoChanged.fromJson(newJson);
    case 'chatEventSlowModeDelayChanged':
      return ChatEventSlowModeDelayChanged.fromJson(newJson);
    case 'chatEventStickerSetChanged':
      return ChatEventStickerSetChanged.fromJson(newJson);
    case 'chatEventCustomEmojiStickerSetChanged':
      return ChatEventCustomEmojiStickerSetChanged.fromJson(newJson);
    case 'chatEventTitleChanged':
      return ChatEventTitleChanged.fromJson(newJson);
    case 'chatEventUsernameChanged':
      return ChatEventUsernameChanged.fromJson(newJson);
    case 'chatEventActiveUsernamesChanged':
      return ChatEventActiveUsernamesChanged.fromJson(newJson);
    case 'chatEventAccentColorChanged':
      return ChatEventAccentColorChanged.fromJson(newJson);
    case 'chatEventProfileAccentColorChanged':
      return ChatEventProfileAccentColorChanged.fromJson(newJson);
    case 'chatEventHasProtectedContentToggled':
      return ChatEventHasProtectedContentToggled.fromJson(newJson);
    case 'chatEventInvitesToggled':
      return ChatEventInvitesToggled.fromJson(newJson);
    case 'chatEventIsAllHistoryAvailableToggled':
      return ChatEventIsAllHistoryAvailableToggled.fromJson(newJson);
    case 'chatEventHasAggressiveAntiSpamEnabledToggled':
      return ChatEventHasAggressiveAntiSpamEnabledToggled.fromJson(newJson);
    case 'chatEventSignMessagesToggled':
      return ChatEventSignMessagesToggled.fromJson(newJson);
    case 'chatEventShowMessageSenderToggled':
      return ChatEventShowMessageSenderToggled.fromJson(newJson);
    case 'chatEventAutomaticTranslationToggled':
      return ChatEventAutomaticTranslationToggled.fromJson(newJson);
    case 'chatEventInviteLinkEdited':
      return ChatEventInviteLinkEdited.fromJson(newJson);
    case 'chatEventInviteLinkRevoked':
      return ChatEventInviteLinkRevoked.fromJson(newJson);
    case 'chatEventInviteLinkDeleted':
      return ChatEventInviteLinkDeleted.fromJson(newJson);
    case 'chatEventVideoChatCreated':
      return ChatEventVideoChatCreated.fromJson(newJson);
    case 'chatEventVideoChatEnded':
      return ChatEventVideoChatEnded.fromJson(newJson);
    case 'chatEventVideoChatMuteNewParticipantsToggled':
      return ChatEventVideoChatMuteNewParticipantsToggled.fromJson(newJson);
    case 'chatEventVideoChatParticipantIsMutedToggled':
      return ChatEventVideoChatParticipantIsMutedToggled.fromJson(newJson);
    case 'chatEventVideoChatParticipantVolumeLevelChanged':
      return ChatEventVideoChatParticipantVolumeLevelChanged.fromJson(newJson);
    case 'chatEventIsForumToggled':
      return ChatEventIsForumToggled.fromJson(newJson);
    case 'chatEventForumTopicCreated':
      return ChatEventForumTopicCreated.fromJson(newJson);
    case 'chatEventForumTopicEdited':
      return ChatEventForumTopicEdited.fromJson(newJson);
    case 'chatEventForumTopicToggleIsClosed':
      return ChatEventForumTopicToggleIsClosed.fromJson(newJson);
    case 'chatEventForumTopicToggleIsHidden':
      return ChatEventForumTopicToggleIsHidden.fromJson(newJson);
    case 'chatEventForumTopicDeleted':
      return ChatEventForumTopicDeleted.fromJson(newJson);
    case 'chatEventForumTopicPinned':
      return ChatEventForumTopicPinned.fromJson(newJson);
    case 'chatEvent':
      return ChatEvent.fromJson(newJson);
    case 'chatEvents':
      return ChatEvents.fromJson(newJson);
    case 'chatEventLogFilters':
      return ChatEventLogFilters.fromJson(newJson);
    case 'languagePackStringValue':
      return LanguagePackStringValue.fromJson(newJson);
    case 'languagePackStringValueOrdinary':
      return LanguagePackStringValueOrdinary.fromJson(newJson);
    case 'languagePackStringValuePluralized':
      return LanguagePackStringValuePluralized.fromJson(newJson);
    case 'languagePackStringValueDeleted':
      return LanguagePackStringValueDeleted.fromJson(newJson);
    case 'languagePackString':
      return LanguagePackString.fromJson(newJson);
    case 'languagePackStrings':
      return LanguagePackStrings.fromJson(newJson);
    case 'languagePackInfo':
      return LanguagePackInfo.fromJson(newJson);
    case 'localizationTargetInfo':
      return LocalizationTargetInfo.fromJson(newJson);
    case 'premiumLimitType':
      return PremiumLimitType.fromJson(newJson);
    case 'premiumLimitTypeSupergroupCount':
      return PremiumLimitTypeSupergroupCount.fromJson(newJson);
    case 'premiumLimitTypePinnedChatCount':
      return PremiumLimitTypePinnedChatCount.fromJson(newJson);
    case 'premiumLimitTypeCreatedPublicChatCount':
      return PremiumLimitTypeCreatedPublicChatCount.fromJson(newJson);
    case 'premiumLimitTypeSavedAnimationCount':
      return PremiumLimitTypeSavedAnimationCount.fromJson(newJson);
    case 'premiumLimitTypeFavoriteStickerCount':
      return PremiumLimitTypeFavoriteStickerCount.fromJson(newJson);
    case 'premiumLimitTypeChatFolderCount':
      return PremiumLimitTypeChatFolderCount.fromJson(newJson);
    case 'premiumLimitTypeChatFolderChosenChatCount':
      return PremiumLimitTypeChatFolderChosenChatCount.fromJson(newJson);
    case 'premiumLimitTypePinnedArchivedChatCount':
      return PremiumLimitTypePinnedArchivedChatCount.fromJson(newJson);
    case 'premiumLimitTypePinnedSavedMessagesTopicCount':
      return PremiumLimitTypePinnedSavedMessagesTopicCount.fromJson(newJson);
    case 'premiumLimitTypeCaptionLength':
      return PremiumLimitTypeCaptionLength.fromJson(newJson);
    case 'premiumLimitTypeBioLength':
      return PremiumLimitTypeBioLength.fromJson(newJson);
    case 'premiumLimitTypeChatFolderInviteLinkCount':
      return PremiumLimitTypeChatFolderInviteLinkCount.fromJson(newJson);
    case 'premiumLimitTypeShareableChatFolderCount':
      return PremiumLimitTypeShareableChatFolderCount.fromJson(newJson);
    case 'premiumLimitTypeActiveStoryCount':
      return PremiumLimitTypeActiveStoryCount.fromJson(newJson);
    case 'premiumLimitTypeWeeklyPostedStoryCount':
      return PremiumLimitTypeWeeklyPostedStoryCount.fromJson(newJson);
    case 'premiumLimitTypeMonthlyPostedStoryCount':
      return PremiumLimitTypeMonthlyPostedStoryCount.fromJson(newJson);
    case 'premiumLimitTypeStoryCaptionLength':
      return PremiumLimitTypeStoryCaptionLength.fromJson(newJson);
    case 'premiumLimitTypeStorySuggestedReactionAreaCount':
      return PremiumLimitTypeStorySuggestedReactionAreaCount.fromJson(newJson);
    case 'premiumLimitTypeSimilarChatCount':
      return PremiumLimitTypeSimilarChatCount.fromJson(newJson);
    case 'premiumFeature':
      return PremiumFeature.fromJson(newJson);
    case 'premiumFeatureIncreasedLimits':
      return PremiumFeatureIncreasedLimits.fromJson(newJson);
    case 'premiumFeatureIncreasedUploadFileSize':
      return PremiumFeatureIncreasedUploadFileSize.fromJson(newJson);
    case 'premiumFeatureImprovedDownloadSpeed':
      return PremiumFeatureImprovedDownloadSpeed.fromJson(newJson);
    case 'premiumFeatureVoiceRecognition':
      return PremiumFeatureVoiceRecognition.fromJson(newJson);
    case 'premiumFeatureDisabledAds':
      return PremiumFeatureDisabledAds.fromJson(newJson);
    case 'premiumFeatureUniqueReactions':
      return PremiumFeatureUniqueReactions.fromJson(newJson);
    case 'premiumFeatureUniqueStickers':
      return PremiumFeatureUniqueStickers.fromJson(newJson);
    case 'premiumFeatureCustomEmoji':
      return PremiumFeatureCustomEmoji.fromJson(newJson);
    case 'premiumFeatureAdvancedChatManagement':
      return PremiumFeatureAdvancedChatManagement.fromJson(newJson);
    case 'premiumFeatureProfileBadge':
      return PremiumFeatureProfileBadge.fromJson(newJson);
    case 'premiumFeatureEmojiStatus':
      return PremiumFeatureEmojiStatus.fromJson(newJson);
    case 'premiumFeatureAnimatedProfilePhoto':
      return PremiumFeatureAnimatedProfilePhoto.fromJson(newJson);
    case 'premiumFeatureForumTopicIcon':
      return PremiumFeatureForumTopicIcon.fromJson(newJson);
    case 'premiumFeatureAppIcons':
      return PremiumFeatureAppIcons.fromJson(newJson);
    case 'premiumFeatureRealTimeChatTranslation':
      return PremiumFeatureRealTimeChatTranslation.fromJson(newJson);
    case 'premiumFeatureUpgradedStories':
      return PremiumFeatureUpgradedStories.fromJson(newJson);
    case 'premiumFeatureChatBoost':
      return PremiumFeatureChatBoost.fromJson(newJson);
    case 'premiumFeatureAccentColor':
      return PremiumFeatureAccentColor.fromJson(newJson);
    case 'premiumFeatureBackgroundForBoth':
      return PremiumFeatureBackgroundForBoth.fromJson(newJson);
    case 'premiumFeatureSavedMessagesTags':
      return PremiumFeatureSavedMessagesTags.fromJson(newJson);
    case 'premiumFeatureMessagePrivacy':
      return PremiumFeatureMessagePrivacy.fromJson(newJson);
    case 'premiumFeatureLastSeenTimes':
      return PremiumFeatureLastSeenTimes.fromJson(newJson);
    case 'premiumFeatureBusiness':
      return PremiumFeatureBusiness.fromJson(newJson);
    case 'premiumFeatureMessageEffects':
      return PremiumFeatureMessageEffects.fromJson(newJson);
    case 'businessFeature':
      return BusinessFeature.fromJson(newJson);
    case 'businessFeatureLocation':
      return BusinessFeatureLocation.fromJson(newJson);
    case 'businessFeatureOpeningHours':
      return BusinessFeatureOpeningHours.fromJson(newJson);
    case 'businessFeatureQuickReplies':
      return BusinessFeatureQuickReplies.fromJson(newJson);
    case 'businessFeatureGreetingMessage':
      return BusinessFeatureGreetingMessage.fromJson(newJson);
    case 'businessFeatureAwayMessage':
      return BusinessFeatureAwayMessage.fromJson(newJson);
    case 'businessFeatureAccountLinks':
      return BusinessFeatureAccountLinks.fromJson(newJson);
    case 'businessFeatureStartPage':
      return BusinessFeatureStartPage.fromJson(newJson);
    case 'businessFeatureBots':
      return BusinessFeatureBots.fromJson(newJson);
    case 'businessFeatureEmojiStatus':
      return BusinessFeatureEmojiStatus.fromJson(newJson);
    case 'businessFeatureChatFolderTags':
      return BusinessFeatureChatFolderTags.fromJson(newJson);
    case 'businessFeatureUpgradedStories':
      return BusinessFeatureUpgradedStories.fromJson(newJson);
    case 'premiumStoryFeature':
      return PremiumStoryFeature.fromJson(newJson);
    case 'premiumStoryFeaturePriorityOrder':
      return PremiumStoryFeaturePriorityOrder.fromJson(newJson);
    case 'premiumStoryFeatureStealthMode':
      return PremiumStoryFeatureStealthMode.fromJson(newJson);
    case 'premiumStoryFeaturePermanentViewsHistory':
      return PremiumStoryFeaturePermanentViewsHistory.fromJson(newJson);
    case 'premiumStoryFeatureCustomExpirationDuration':
      return PremiumStoryFeatureCustomExpirationDuration.fromJson(newJson);
    case 'premiumStoryFeatureSaveStories':
      return PremiumStoryFeatureSaveStories.fromJson(newJson);
    case 'premiumStoryFeatureLinksAndFormatting':
      return PremiumStoryFeatureLinksAndFormatting.fromJson(newJson);
    case 'premiumStoryFeatureVideoQuality':
      return PremiumStoryFeatureVideoQuality.fromJson(newJson);
    case 'premiumLimit':
      return PremiumLimit.fromJson(newJson);
    case 'premiumFeatures':
      return PremiumFeatures.fromJson(newJson);
    case 'businessFeatures':
      return BusinessFeatures.fromJson(newJson);
    case 'premiumSource':
      return PremiumSource.fromJson(newJson);
    case 'premiumSourceLimitExceeded':
      return PremiumSourceLimitExceeded.fromJson(newJson);
    case 'premiumSourceFeature':
      return PremiumSourceFeature.fromJson(newJson);
    case 'premiumSourceBusinessFeature':
      return PremiumSourceBusinessFeature.fromJson(newJson);
    case 'premiumSourceStoryFeature':
      return PremiumSourceStoryFeature.fromJson(newJson);
    case 'premiumSourceLink':
      return PremiumSourceLink.fromJson(newJson);
    case 'premiumSourceSettings':
      return PremiumSourceSettings.fromJson(newJson);
    case 'premiumFeaturePromotionAnimation':
      return PremiumFeaturePromotionAnimation.fromJson(newJson);
    case 'businessFeaturePromotionAnimation':
      return BusinessFeaturePromotionAnimation.fromJson(newJson);
    case 'premiumState':
      return PremiumState.fromJson(newJson);
    case 'storePaymentPurpose':
      return StorePaymentPurpose.fromJson(newJson);
    case 'storePaymentPurposePremiumSubscription':
      return StorePaymentPurposePremiumSubscription.fromJson(newJson);
    case 'storePaymentPurposePremiumGift':
      return StorePaymentPurposePremiumGift.fromJson(newJson);
    case 'storePaymentPurposePremiumGiftCodes':
      return StorePaymentPurposePremiumGiftCodes.fromJson(newJson);
    case 'storePaymentPurposePremiumGiveaway':
      return StorePaymentPurposePremiumGiveaway.fromJson(newJson);
    case 'storePaymentPurposeStarGiveaway':
      return StorePaymentPurposeStarGiveaway.fromJson(newJson);
    case 'storePaymentPurposeStars':
      return StorePaymentPurposeStars.fromJson(newJson);
    case 'storePaymentPurposeGiftedStars':
      return StorePaymentPurposeGiftedStars.fromJson(newJson);
    case 'storeTransaction':
      return StoreTransaction.fromJson(newJson);
    case 'storeTransactionAppStore':
      return StoreTransactionAppStore.fromJson(newJson);
    case 'storeTransactionGooglePlay':
      return StoreTransactionGooglePlay.fromJson(newJson);
    case 'telegramPaymentPurpose':
      return TelegramPaymentPurpose.fromJson(newJson);
    case 'telegramPaymentPurposePremiumGift':
      return TelegramPaymentPurposePremiumGift.fromJson(newJson);
    case 'telegramPaymentPurposePremiumGiftCodes':
      return TelegramPaymentPurposePremiumGiftCodes.fromJson(newJson);
    case 'telegramPaymentPurposePremiumGiveaway':
      return TelegramPaymentPurposePremiumGiveaway.fromJson(newJson);
    case 'telegramPaymentPurposeStars':
      return TelegramPaymentPurposeStars.fromJson(newJson);
    case 'telegramPaymentPurposeGiftedStars':
      return TelegramPaymentPurposeGiftedStars.fromJson(newJson);
    case 'telegramPaymentPurposeStarGiveaway':
      return TelegramPaymentPurposeStarGiveaway.fromJson(newJson);
    case 'telegramPaymentPurposeJoinChat':
      return TelegramPaymentPurposeJoinChat.fromJson(newJson);
    case 'deviceToken':
      return DeviceToken.fromJson(newJson);
    case 'deviceTokenFirebaseCloudMessaging':
      return DeviceTokenFirebaseCloudMessaging.fromJson(newJson);
    case 'deviceTokenApplePush':
      return DeviceTokenApplePush.fromJson(newJson);
    case 'deviceTokenApplePushVoIP':
      return DeviceTokenApplePushVoIP.fromJson(newJson);
    case 'deviceTokenWindowsPush':
      return DeviceTokenWindowsPush.fromJson(newJson);
    case 'deviceTokenMicrosoftPush':
      return DeviceTokenMicrosoftPush.fromJson(newJson);
    case 'deviceTokenMicrosoftPushVoIP':
      return DeviceTokenMicrosoftPushVoIP.fromJson(newJson);
    case 'deviceTokenWebPush':
      return DeviceTokenWebPush.fromJson(newJson);
    case 'deviceTokenSimplePush':
      return DeviceTokenSimplePush.fromJson(newJson);
    case 'deviceTokenUbuntuPush':
      return DeviceTokenUbuntuPush.fromJson(newJson);
    case 'deviceTokenBlackBerryPush':
      return DeviceTokenBlackBerryPush.fromJson(newJson);
    case 'deviceTokenTizenPush':
      return DeviceTokenTizenPush.fromJson(newJson);
    case 'deviceTokenHuaweiPush':
      return DeviceTokenHuaweiPush.fromJson(newJson);
    case 'pushReceiverId':
      return PushReceiverId.fromJson(newJson);
    case 'backgroundFill':
      return BackgroundFill.fromJson(newJson);
    case 'backgroundFillSolid':
      return BackgroundFillSolid.fromJson(newJson);
    case 'backgroundFillGradient':
      return BackgroundFillGradient.fromJson(newJson);
    case 'backgroundFillFreeformGradient':
      return BackgroundFillFreeformGradient.fromJson(newJson);
    case 'backgroundType':
      return BackgroundType.fromJson(newJson);
    case 'backgroundTypeWallpaper':
      return BackgroundTypeWallpaper.fromJson(newJson);
    case 'backgroundTypePattern':
      return BackgroundTypePattern.fromJson(newJson);
    case 'backgroundTypeFill':
      return BackgroundTypeFill.fromJson(newJson);
    case 'backgroundTypeChatTheme':
      return BackgroundTypeChatTheme.fromJson(newJson);
    case 'inputBackground':
      return InputBackground.fromJson(newJson);
    case 'inputBackgroundLocal':
      return InputBackgroundLocal.fromJson(newJson);
    case 'inputBackgroundRemote':
      return InputBackgroundRemote.fromJson(newJson);
    case 'inputBackgroundPrevious':
      return InputBackgroundPrevious.fromJson(newJson);
    case 'chatTheme':
      return ChatTheme.fromJson(newJson);
    case 'timeZone':
      return TimeZone.fromJson(newJson);
    case 'timeZones':
      return TimeZones.fromJson(newJson);
    case 'hashtags':
      return Hashtags.fromJson(newJson);
    case 'canPostStoryResult':
      return CanPostStoryResult.fromJson(newJson);
    case 'canPostStoryResultOk':
      return CanPostStoryResultOk.fromJson(newJson);
    case 'canPostStoryResultPremiumNeeded':
      return CanPostStoryResultPremiumNeeded.fromJson(newJson);
    case 'canPostStoryResultBoostNeeded':
      return CanPostStoryResultBoostNeeded.fromJson(newJson);
    case 'canPostStoryResultActiveStoryLimitExceeded':
      return CanPostStoryResultActiveStoryLimitExceeded.fromJson(newJson);
    case 'canPostStoryResultWeeklyLimitExceeded':
      return CanPostStoryResultWeeklyLimitExceeded.fromJson(newJson);
    case 'canPostStoryResultMonthlyLimitExceeded':
      return CanPostStoryResultMonthlyLimitExceeded.fromJson(newJson);
    case 'canTransferOwnershipResult':
      return CanTransferOwnershipResult.fromJson(newJson);
    case 'canTransferOwnershipResultOk':
      return CanTransferOwnershipResultOk.fromJson(newJson);
    case 'canTransferOwnershipResultPasswordNeeded':
      return CanTransferOwnershipResultPasswordNeeded.fromJson(newJson);
    case 'canTransferOwnershipResultPasswordTooFresh':
      return CanTransferOwnershipResultPasswordTooFresh.fromJson(newJson);
    case 'canTransferOwnershipResultSessionTooFresh':
      return CanTransferOwnershipResultSessionTooFresh.fromJson(newJson);
    case 'checkChatUsernameResult':
      return CheckChatUsernameResult.fromJson(newJson);
    case 'checkChatUsernameResultOk':
      return CheckChatUsernameResultOk.fromJson(newJson);
    case 'checkChatUsernameResultUsernameInvalid':
      return CheckChatUsernameResultUsernameInvalid.fromJson(newJson);
    case 'checkChatUsernameResultUsernameOccupied':
      return CheckChatUsernameResultUsernameOccupied.fromJson(newJson);
    case 'checkChatUsernameResultUsernamePurchasable':
      return CheckChatUsernameResultUsernamePurchasable.fromJson(newJson);
    case 'checkChatUsernameResultPublicChatsTooMany':
      return CheckChatUsernameResultPublicChatsTooMany.fromJson(newJson);
    case 'checkChatUsernameResultPublicGroupsUnavailable':
      return CheckChatUsernameResultPublicGroupsUnavailable.fromJson(newJson);
    case 'checkStickerSetNameResult':
      return CheckStickerSetNameResult.fromJson(newJson);
    case 'checkStickerSetNameResultOk':
      return CheckStickerSetNameResultOk.fromJson(newJson);
    case 'checkStickerSetNameResultNameInvalid':
      return CheckStickerSetNameResultNameInvalid.fromJson(newJson);
    case 'checkStickerSetNameResultNameOccupied':
      return CheckStickerSetNameResultNameOccupied.fromJson(newJson);
    case 'resetPasswordResult':
      return ResetPasswordResult.fromJson(newJson);
    case 'resetPasswordResultOk':
      return ResetPasswordResultOk.fromJson(newJson);
    case 'resetPasswordResultPending':
      return ResetPasswordResultPending.fromJson(newJson);
    case 'resetPasswordResultDeclined':
      return ResetPasswordResultDeclined.fromJson(newJson);
    case 'messageFileType':
      return MessageFileType.fromJson(newJson);
    case 'messageFileTypePrivate':
      return MessageFileTypePrivate.fromJson(newJson);
    case 'messageFileTypeGroup':
      return MessageFileTypeGroup.fromJson(newJson);
    case 'messageFileTypeUnknown':
      return MessageFileTypeUnknown.fromJson(newJson);
    case 'pushMessageContent':
      return PushMessageContent.fromJson(newJson);
    case 'pushMessageContentHidden':
      return PushMessageContentHidden.fromJson(newJson);
    case 'pushMessageContentAnimation':
      return PushMessageContentAnimation.fromJson(newJson);
    case 'pushMessageContentAudio':
      return PushMessageContentAudio.fromJson(newJson);
    case 'pushMessageContentContact':
      return PushMessageContentContact.fromJson(newJson);
    case 'pushMessageContentContactRegistered':
      return PushMessageContentContactRegistered.fromJson(newJson);
    case 'pushMessageContentDocument':
      return PushMessageContentDocument.fromJson(newJson);
    case 'pushMessageContentGame':
      return PushMessageContentGame.fromJson(newJson);
    case 'pushMessageContentGameScore':
      return PushMessageContentGameScore.fromJson(newJson);
    case 'pushMessageContentInvoice':
      return PushMessageContentInvoice.fromJson(newJson);
    case 'pushMessageContentLocation':
      return PushMessageContentLocation.fromJson(newJson);
    case 'pushMessageContentPaidMedia':
      return PushMessageContentPaidMedia.fromJson(newJson);
    case 'pushMessageContentPhoto':
      return PushMessageContentPhoto.fromJson(newJson);
    case 'pushMessageContentPoll':
      return PushMessageContentPoll.fromJson(newJson);
    case 'pushMessageContentPremiumGiftCode':
      return PushMessageContentPremiumGiftCode.fromJson(newJson);
    case 'pushMessageContentGiveaway':
      return PushMessageContentGiveaway.fromJson(newJson);
    case 'pushMessageContentGift':
      return PushMessageContentGift.fromJson(newJson);
    case 'pushMessageContentUpgradedGift':
      return PushMessageContentUpgradedGift.fromJson(newJson);
    case 'pushMessageContentScreenshotTaken':
      return PushMessageContentScreenshotTaken.fromJson(newJson);
    case 'pushMessageContentSticker':
      return PushMessageContentSticker.fromJson(newJson);
    case 'pushMessageContentStory':
      return PushMessageContentStory.fromJson(newJson);
    case 'pushMessageContentText':
      return PushMessageContentText.fromJson(newJson);
    case 'pushMessageContentVideo':
      return PushMessageContentVideo.fromJson(newJson);
    case 'pushMessageContentVideoNote':
      return PushMessageContentVideoNote.fromJson(newJson);
    case 'pushMessageContentVoiceNote':
      return PushMessageContentVoiceNote.fromJson(newJson);
    case 'pushMessageContentBasicGroupChatCreate':
      return PushMessageContentBasicGroupChatCreate.fromJson(newJson);
    case 'pushMessageContentVideoChatStarted':
      return PushMessageContentVideoChatStarted.fromJson(newJson);
    case 'pushMessageContentVideoChatEnded':
      return PushMessageContentVideoChatEnded.fromJson(newJson);
    case 'pushMessageContentInviteVideoChatParticipants':
      return PushMessageContentInviteVideoChatParticipants.fromJson(newJson);
    case 'pushMessageContentChatAddMembers':
      return PushMessageContentChatAddMembers.fromJson(newJson);
    case 'pushMessageContentChatChangePhoto':
      return PushMessageContentChatChangePhoto.fromJson(newJson);
    case 'pushMessageContentChatChangeTitle':
      return PushMessageContentChatChangeTitle.fromJson(newJson);
    case 'pushMessageContentChatSetBackground':
      return PushMessageContentChatSetBackground.fromJson(newJson);
    case 'pushMessageContentChatSetTheme':
      return PushMessageContentChatSetTheme.fromJson(newJson);
    case 'pushMessageContentChatDeleteMember':
      return PushMessageContentChatDeleteMember.fromJson(newJson);
    case 'pushMessageContentChatJoinByLink':
      return PushMessageContentChatJoinByLink.fromJson(newJson);
    case 'pushMessageContentChatJoinByRequest':
      return PushMessageContentChatJoinByRequest.fromJson(newJson);
    case 'pushMessageContentRecurringPayment':
      return PushMessageContentRecurringPayment.fromJson(newJson);
    case 'pushMessageContentSuggestProfilePhoto':
      return PushMessageContentSuggestProfilePhoto.fromJson(newJson);
    case 'pushMessageContentProximityAlertTriggered':
      return PushMessageContentProximityAlertTriggered.fromJson(newJson);
    case 'pushMessageContentMessageForwards':
      return PushMessageContentMessageForwards.fromJson(newJson);
    case 'pushMessageContentMediaAlbum':
      return PushMessageContentMediaAlbum.fromJson(newJson);
    case 'notificationType':
      return NotificationType.fromJson(newJson);
    case 'notificationTypeNewMessage':
      return NotificationTypeNewMessage.fromJson(newJson);
    case 'notificationTypeNewSecretChat':
      return NotificationTypeNewSecretChat.fromJson(newJson);
    case 'notificationTypeNewCall':
      return NotificationTypeNewCall.fromJson(newJson);
    case 'notificationTypeNewPushMessage':
      return NotificationTypeNewPushMessage.fromJson(newJson);
    case 'notificationGroupType':
      return NotificationGroupType.fromJson(newJson);
    case 'notificationGroupTypeMessages':
      return NotificationGroupTypeMessages.fromJson(newJson);
    case 'notificationGroupTypeMentions':
      return NotificationGroupTypeMentions.fromJson(newJson);
    case 'notificationGroupTypeSecretChat':
      return NotificationGroupTypeSecretChat.fromJson(newJson);
    case 'notificationGroupTypeCalls':
      return NotificationGroupTypeCalls.fromJson(newJson);
    case 'notificationSound':
      return NotificationSound.fromJson(newJson);
    case 'notificationSounds':
      return NotificationSounds.fromJson(newJson);
    case 'notification':
      return Notification.fromJson(newJson);
    case 'notificationGroup':
      return NotificationGroup.fromJson(newJson);
    case 'optionValue':
      return OptionValue.fromJson(newJson);
    case 'optionValueBoolean':
      return OptionValueBoolean.fromJson(newJson);
    case 'optionValueEmpty':
      return OptionValueEmpty.fromJson(newJson);
    case 'optionValueInteger':
      return OptionValueInteger.fromJson(newJson);
    case 'optionValueString':
      return OptionValueString.fromJson(newJson);
    case 'jsonObjectMember':
      return JsonObjectMember.fromJson(newJson);
    case 'jsonValue':
      return JsonValue.fromJson(newJson);
    case 'jsonValueNull':
      return JsonValueNull.fromJson(newJson);
    case 'jsonValueBoolean':
      return JsonValueBoolean.fromJson(newJson);
    case 'jsonValueNumber':
      return JsonValueNumber.fromJson(newJson);
    case 'jsonValueString':
      return JsonValueString.fromJson(newJson);
    case 'jsonValueArray':
      return JsonValueArray.fromJson(newJson);
    case 'jsonValueObject':
      return JsonValueObject.fromJson(newJson);
    case 'storyPrivacySettings':
      return StoryPrivacySettings.fromJson(newJson);
    case 'storyPrivacySettingsEveryone':
      return StoryPrivacySettingsEveryone.fromJson(newJson);
    case 'storyPrivacySettingsContacts':
      return StoryPrivacySettingsContacts.fromJson(newJson);
    case 'storyPrivacySettingsCloseFriends':
      return StoryPrivacySettingsCloseFriends.fromJson(newJson);
    case 'storyPrivacySettingsSelectedUsers':
      return StoryPrivacySettingsSelectedUsers.fromJson(newJson);
    case 'userPrivacySettingRule':
      return UserPrivacySettingRule.fromJson(newJson);
    case 'userPrivacySettingRuleAllowAll':
      return UserPrivacySettingRuleAllowAll.fromJson(newJson);
    case 'userPrivacySettingRuleAllowContacts':
      return UserPrivacySettingRuleAllowContacts.fromJson(newJson);
    case 'userPrivacySettingRuleAllowBots':
      return UserPrivacySettingRuleAllowBots.fromJson(newJson);
    case 'userPrivacySettingRuleAllowPremiumUsers':
      return UserPrivacySettingRuleAllowPremiumUsers.fromJson(newJson);
    case 'userPrivacySettingRuleAllowUsers':
      return UserPrivacySettingRuleAllowUsers.fromJson(newJson);
    case 'userPrivacySettingRuleAllowChatMembers':
      return UserPrivacySettingRuleAllowChatMembers.fromJson(newJson);
    case 'userPrivacySettingRuleRestrictAll':
      return UserPrivacySettingRuleRestrictAll.fromJson(newJson);
    case 'userPrivacySettingRuleRestrictContacts':
      return UserPrivacySettingRuleRestrictContacts.fromJson(newJson);
    case 'userPrivacySettingRuleRestrictBots':
      return UserPrivacySettingRuleRestrictBots.fromJson(newJson);
    case 'userPrivacySettingRuleRestrictUsers':
      return UserPrivacySettingRuleRestrictUsers.fromJson(newJson);
    case 'userPrivacySettingRuleRestrictChatMembers':
      return UserPrivacySettingRuleRestrictChatMembers.fromJson(newJson);
    case 'userPrivacySettingRules':
      return UserPrivacySettingRules.fromJson(newJson);
    case 'userPrivacySetting':
      return UserPrivacySetting.fromJson(newJson);
    case 'userPrivacySettingShowStatus':
      return UserPrivacySettingShowStatus.fromJson(newJson);
    case 'userPrivacySettingShowProfilePhoto':
      return UserPrivacySettingShowProfilePhoto.fromJson(newJson);
    case 'userPrivacySettingShowLinkInForwardedMessages':
      return UserPrivacySettingShowLinkInForwardedMessages.fromJson(newJson);
    case 'userPrivacySettingShowPhoneNumber':
      return UserPrivacySettingShowPhoneNumber.fromJson(newJson);
    case 'userPrivacySettingShowBio':
      return UserPrivacySettingShowBio.fromJson(newJson);
    case 'userPrivacySettingShowBirthdate':
      return UserPrivacySettingShowBirthdate.fromJson(newJson);
    case 'userPrivacySettingAllowChatInvites':
      return UserPrivacySettingAllowChatInvites.fromJson(newJson);
    case 'userPrivacySettingAllowCalls':
      return UserPrivacySettingAllowCalls.fromJson(newJson);
    case 'userPrivacySettingAllowPeerToPeerCalls':
      return UserPrivacySettingAllowPeerToPeerCalls.fromJson(newJson);
    case 'userPrivacySettingAllowFindingByPhoneNumber':
      return UserPrivacySettingAllowFindingByPhoneNumber.fromJson(newJson);
    case 'userPrivacySettingAllowPrivateVoiceAndVideoNoteMessages':
      return UserPrivacySettingAllowPrivateVoiceAndVideoNoteMessages.fromJson(
          newJson);
    case 'userPrivacySettingAutosaveGifts':
      return UserPrivacySettingAutosaveGifts.fromJson(newJson);
    case 'userPrivacySettingAllowUnpaidMessages':
      return UserPrivacySettingAllowUnpaidMessages.fromJson(newJson);
    case 'readDatePrivacySettings':
      return ReadDatePrivacySettings.fromJson(newJson);
    case 'newChatPrivacySettings':
      return NewChatPrivacySettings.fromJson(newJson);
    case 'canSendMessageToUserResult':
      return CanSendMessageToUserResult.fromJson(newJson);
    case 'canSendMessageToUserResultOk':
      return CanSendMessageToUserResultOk.fromJson(newJson);
    case 'canSendMessageToUserResultUserHasPaidMessages':
      return CanSendMessageToUserResultUserHasPaidMessages.fromJson(newJson);
    case 'canSendMessageToUserResultUserIsDeleted':
      return CanSendMessageToUserResultUserIsDeleted.fromJson(newJson);
    case 'canSendMessageToUserResultUserRestrictsNewChats':
      return CanSendMessageToUserResultUserRestrictsNewChats.fromJson(newJson);
    case 'accountTtl':
      return AccountTtl.fromJson(newJson);
    case 'messageAutoDeleteTime':
      return MessageAutoDeleteTime.fromJson(newJson);
    case 'sessionType':
      return SessionType.fromJson(newJson);
    case 'sessionTypeAndroid':
      return SessionTypeAndroid.fromJson(newJson);
    case 'sessionTypeApple':
      return SessionTypeApple.fromJson(newJson);
    case 'sessionTypeBrave':
      return SessionTypeBrave.fromJson(newJson);
    case 'sessionTypeChrome':
      return SessionTypeChrome.fromJson(newJson);
    case 'sessionTypeEdge':
      return SessionTypeEdge.fromJson(newJson);
    case 'sessionTypeFirefox':
      return SessionTypeFirefox.fromJson(newJson);
    case 'sessionTypeIpad':
      return SessionTypeIpad.fromJson(newJson);
    case 'sessionTypeIphone':
      return SessionTypeIphone.fromJson(newJson);
    case 'sessionTypeLinux':
      return SessionTypeLinux.fromJson(newJson);
    case 'sessionTypeMac':
      return SessionTypeMac.fromJson(newJson);
    case 'sessionTypeOpera':
      return SessionTypeOpera.fromJson(newJson);
    case 'sessionTypeSafari':
      return SessionTypeSafari.fromJson(newJson);
    case 'sessionTypeUbuntu':
      return SessionTypeUbuntu.fromJson(newJson);
    case 'sessionTypeUnknown':
      return SessionTypeUnknown.fromJson(newJson);
    case 'sessionTypeVivaldi':
      return SessionTypeVivaldi.fromJson(newJson);
    case 'sessionTypeWindows':
      return SessionTypeWindows.fromJson(newJson);
    case 'sessionTypeXbox':
      return SessionTypeXbox.fromJson(newJson);
    case 'session':
      return Session.fromJson(newJson);
    case 'sessions':
      return Sessions.fromJson(newJson);
    case 'unconfirmedSession':
      return UnconfirmedSession.fromJson(newJson);
    case 'connectedWebsite':
      return ConnectedWebsite.fromJson(newJson);
    case 'connectedWebsites':
      return ConnectedWebsites.fromJson(newJson);
    case 'reportReason':
      return ReportReason.fromJson(newJson);
    case 'reportReasonSpam':
      return ReportReasonSpam.fromJson(newJson);
    case 'reportReasonViolence':
      return ReportReasonViolence.fromJson(newJson);
    case 'reportReasonPornography':
      return ReportReasonPornography.fromJson(newJson);
    case 'reportReasonChildAbuse':
      return ReportReasonChildAbuse.fromJson(newJson);
    case 'reportReasonCopyright':
      return ReportReasonCopyright.fromJson(newJson);
    case 'reportReasonUnrelatedLocation':
      return ReportReasonUnrelatedLocation.fromJson(newJson);
    case 'reportReasonFake':
      return ReportReasonFake.fromJson(newJson);
    case 'reportReasonIllegalDrugs':
      return ReportReasonIllegalDrugs.fromJson(newJson);
    case 'reportReasonPersonalDetails':
      return ReportReasonPersonalDetails.fromJson(newJson);
    case 'reportReasonCustom':
      return ReportReasonCustom.fromJson(newJson);
    case 'reportChatResult':
      return ReportChatResult.fromJson(newJson);
    case 'reportChatResultOk':
      return ReportChatResultOk.fromJson(newJson);
    case 'reportChatResultOptionRequired':
      return ReportChatResultOptionRequired.fromJson(newJson);
    case 'reportChatResultTextRequired':
      return ReportChatResultTextRequired.fromJson(newJson);
    case 'reportChatResultMessagesRequired':
      return ReportChatResultMessagesRequired.fromJson(newJson);
    case 'reportStoryResult':
      return ReportStoryResult.fromJson(newJson);
    case 'reportStoryResultOk':
      return ReportStoryResultOk.fromJson(newJson);
    case 'reportStoryResultOptionRequired':
      return ReportStoryResultOptionRequired.fromJson(newJson);
    case 'reportStoryResultTextRequired':
      return ReportStoryResultTextRequired.fromJson(newJson);
    case 'internalLinkType':
      return InternalLinkType.fromJson(newJson);
    case 'internalLinkTypeActiveSessions':
      return InternalLinkTypeActiveSessions.fromJson(newJson);
    case 'internalLinkTypeAttachmentMenuBot':
      return InternalLinkTypeAttachmentMenuBot.fromJson(newJson);
    case 'internalLinkTypeAuthenticationCode':
      return InternalLinkTypeAuthenticationCode.fromJson(newJson);
    case 'internalLinkTypeBackground':
      return InternalLinkTypeBackground.fromJson(newJson);
    case 'internalLinkTypeBotAddToChannel':
      return InternalLinkTypeBotAddToChannel.fromJson(newJson);
    case 'internalLinkTypeBotStart':
      return InternalLinkTypeBotStart.fromJson(newJson);
    case 'internalLinkTypeBotStartInGroup':
      return InternalLinkTypeBotStartInGroup.fromJson(newJson);
    case 'internalLinkTypeBusinessChat':
      return InternalLinkTypeBusinessChat.fromJson(newJson);
    case 'internalLinkTypeBuyStars':
      return InternalLinkTypeBuyStars.fromJson(newJson);
    case 'internalLinkTypeChangePhoneNumber':
      return InternalLinkTypeChangePhoneNumber.fromJson(newJson);
    case 'internalLinkTypeChatAffiliateProgram':
      return InternalLinkTypeChatAffiliateProgram.fromJson(newJson);
    case 'internalLinkTypeChatBoost':
      return InternalLinkTypeChatBoost.fromJson(newJson);
    case 'internalLinkTypeChatFolderInvite':
      return InternalLinkTypeChatFolderInvite.fromJson(newJson);
    case 'internalLinkTypeChatFolderSettings':
      return InternalLinkTypeChatFolderSettings.fromJson(newJson);
    case 'internalLinkTypeChatInvite':
      return InternalLinkTypeChatInvite.fromJson(newJson);
    case 'internalLinkTypeDefaultMessageAutoDeleteTimerSettings':
      return InternalLinkTypeDefaultMessageAutoDeleteTimerSettings.fromJson(
          newJson);
    case 'internalLinkTypeEditProfileSettings':
      return InternalLinkTypeEditProfileSettings.fromJson(newJson);
    case 'internalLinkTypeGame':
      return InternalLinkTypeGame.fromJson(newJson);
    case 'internalLinkTypeGroupCall':
      return InternalLinkTypeGroupCall.fromJson(newJson);
    case 'internalLinkTypeInstantView':
      return InternalLinkTypeInstantView.fromJson(newJson);
    case 'internalLinkTypeInvoice':
      return InternalLinkTypeInvoice.fromJson(newJson);
    case 'internalLinkTypeLanguagePack':
      return InternalLinkTypeLanguagePack.fromJson(newJson);
    case 'internalLinkTypeLanguageSettings':
      return InternalLinkTypeLanguageSettings.fromJson(newJson);
    case 'internalLinkTypeMainWebApp':
      return InternalLinkTypeMainWebApp.fromJson(newJson);
    case 'internalLinkTypeMessage':
      return InternalLinkTypeMessage.fromJson(newJson);
    case 'internalLinkTypeMessageDraft':
      return InternalLinkTypeMessageDraft.fromJson(newJson);
    case 'internalLinkTypeMyStars':
      return InternalLinkTypeMyStars.fromJson(newJson);
    case 'internalLinkTypePassportDataRequest':
      return InternalLinkTypePassportDataRequest.fromJson(newJson);
    case 'internalLinkTypePhoneNumberConfirmation':
      return InternalLinkTypePhoneNumberConfirmation.fromJson(newJson);
    case 'internalLinkTypePremiumFeatures':
      return InternalLinkTypePremiumFeatures.fromJson(newJson);
    case 'internalLinkTypePremiumGift':
      return InternalLinkTypePremiumGift.fromJson(newJson);
    case 'internalLinkTypePremiumGiftCode':
      return InternalLinkTypePremiumGiftCode.fromJson(newJson);
    case 'internalLinkTypePrivacyAndSecuritySettings':
      return InternalLinkTypePrivacyAndSecuritySettings.fromJson(newJson);
    case 'internalLinkTypeProxy':
      return InternalLinkTypeProxy.fromJson(newJson);
    case 'internalLinkTypePublicChat':
      return InternalLinkTypePublicChat.fromJson(newJson);
    case 'internalLinkTypeQrCodeAuthentication':
      return InternalLinkTypeQrCodeAuthentication.fromJson(newJson);
    case 'internalLinkTypeRestorePurchases':
      return InternalLinkTypeRestorePurchases.fromJson(newJson);
    case 'internalLinkTypeSettings':
      return InternalLinkTypeSettings.fromJson(newJson);
    case 'internalLinkTypeStickerSet':
      return InternalLinkTypeStickerSet.fromJson(newJson);
    case 'internalLinkTypeStory':
      return InternalLinkTypeStory.fromJson(newJson);
    case 'internalLinkTypeTheme':
      return InternalLinkTypeTheme.fromJson(newJson);
    case 'internalLinkTypeThemeSettings':
      return InternalLinkTypeThemeSettings.fromJson(newJson);
    case 'internalLinkTypeUnknownDeepLink':
      return InternalLinkTypeUnknownDeepLink.fromJson(newJson);
    case 'internalLinkTypeUnsupportedProxy':
      return InternalLinkTypeUnsupportedProxy.fromJson(newJson);
    case 'internalLinkTypeUpgradedGift':
      return InternalLinkTypeUpgradedGift.fromJson(newJson);
    case 'internalLinkTypeUserPhoneNumber':
      return InternalLinkTypeUserPhoneNumber.fromJson(newJson);
    case 'internalLinkTypeUserToken':
      return InternalLinkTypeUserToken.fromJson(newJson);
    case 'internalLinkTypeVideoChat':
      return InternalLinkTypeVideoChat.fromJson(newJson);
    case 'internalLinkTypeWebApp':
      return InternalLinkTypeWebApp.fromJson(newJson);
    case 'messageLink':
      return MessageLink.fromJson(newJson);
    case 'messageLinkInfo':
      return MessageLinkInfo.fromJson(newJson);
    case 'chatBoostLink':
      return ChatBoostLink.fromJson(newJson);
    case 'chatBoostLinkInfo':
      return ChatBoostLinkInfo.fromJson(newJson);
    case 'blockList':
      return BlockList.fromJson(newJson);
    case 'blockListMain':
      return BlockListMain.fromJson(newJson);
    case 'blockListStories':
      return BlockListStories.fromJson(newJson);
    case 'fileType':
      return FileType.fromJson(newJson);
    case 'fileTypeNone':
      return FileTypeNone.fromJson(newJson);
    case 'fileTypeAnimation':
      return FileTypeAnimation.fromJson(newJson);
    case 'fileTypeAudio':
      return FileTypeAudio.fromJson(newJson);
    case 'fileTypeDocument':
      return FileTypeDocument.fromJson(newJson);
    case 'fileTypeNotificationSound':
      return FileTypeNotificationSound.fromJson(newJson);
    case 'fileTypePhoto':
      return FileTypePhoto.fromJson(newJson);
    case 'fileTypePhotoStory':
      return FileTypePhotoStory.fromJson(newJson);
    case 'fileTypeProfilePhoto':
      return FileTypeProfilePhoto.fromJson(newJson);
    case 'fileTypeSecret':
      return FileTypeSecret.fromJson(newJson);
    case 'fileTypeSecretThumbnail':
      return FileTypeSecretThumbnail.fromJson(newJson);
    case 'fileTypeSecure':
      return FileTypeSecure.fromJson(newJson);
    case 'fileTypeSelfDestructingPhoto':
      return FileTypeSelfDestructingPhoto.fromJson(newJson);
    case 'fileTypeSelfDestructingVideo':
      return FileTypeSelfDestructingVideo.fromJson(newJson);
    case 'fileTypeSelfDestructingVideoNote':
      return FileTypeSelfDestructingVideoNote.fromJson(newJson);
    case 'fileTypeSelfDestructingVoiceNote':
      return FileTypeSelfDestructingVoiceNote.fromJson(newJson);
    case 'fileTypeSticker':
      return FileTypeSticker.fromJson(newJson);
    case 'fileTypeThumbnail':
      return FileTypeThumbnail.fromJson(newJson);
    case 'fileTypeUnknown':
      return FileTypeUnknown.fromJson(newJson);
    case 'fileTypeVideo':
      return FileTypeVideo.fromJson(newJson);
    case 'fileTypeVideoNote':
      return FileTypeVideoNote.fromJson(newJson);
    case 'fileTypeVideoStory':
      return FileTypeVideoStory.fromJson(newJson);
    case 'fileTypeVoiceNote':
      return FileTypeVoiceNote.fromJson(newJson);
    case 'fileTypeWallpaper':
      return FileTypeWallpaper.fromJson(newJson);
    case 'storageStatisticsByFileType':
      return StorageStatisticsByFileType.fromJson(newJson);
    case 'storageStatisticsByChat':
      return StorageStatisticsByChat.fromJson(newJson);
    case 'storageStatistics':
      return StorageStatistics.fromJson(newJson);
    case 'storageStatisticsFast':
      return StorageStatisticsFast.fromJson(newJson);
    case 'databaseStatistics':
      return DatabaseStatistics.fromJson(newJson);
    case 'networkType':
      return NetworkType.fromJson(newJson);
    case 'networkTypeNone':
      return NetworkTypeNone.fromJson(newJson);
    case 'networkTypeMobile':
      return NetworkTypeMobile.fromJson(newJson);
    case 'networkTypeMobileRoaming':
      return NetworkTypeMobileRoaming.fromJson(newJson);
    case 'networkTypeWiFi':
      return NetworkTypeWiFi.fromJson(newJson);
    case 'networkTypeOther':
      return NetworkTypeOther.fromJson(newJson);
    case 'networkStatisticsEntry':
      return NetworkStatisticsEntry.fromJson(newJson);
    case 'networkStatisticsEntryFile':
      return NetworkStatisticsEntryFile.fromJson(newJson);
    case 'networkStatisticsEntryCall':
      return NetworkStatisticsEntryCall.fromJson(newJson);
    case 'networkStatistics':
      return NetworkStatistics.fromJson(newJson);
    case 'autoDownloadSettings':
      return AutoDownloadSettings.fromJson(newJson);
    case 'autoDownloadSettingsPresets':
      return AutoDownloadSettingsPresets.fromJson(newJson);
    case 'autosaveSettingsScope':
      return AutosaveSettingsScope.fromJson(newJson);
    case 'autosaveSettingsScopePrivateChats':
      return AutosaveSettingsScopePrivateChats.fromJson(newJson);
    case 'autosaveSettingsScopeGroupChats':
      return AutosaveSettingsScopeGroupChats.fromJson(newJson);
    case 'autosaveSettingsScopeChannelChats':
      return AutosaveSettingsScopeChannelChats.fromJson(newJson);
    case 'autosaveSettingsScopeChat':
      return AutosaveSettingsScopeChat.fromJson(newJson);
    case 'scopeAutosaveSettings':
      return ScopeAutosaveSettings.fromJson(newJson);
    case 'autosaveSettingsException':
      return AutosaveSettingsException.fromJson(newJson);
    case 'autosaveSettings':
      return AutosaveSettings.fromJson(newJson);
    case 'connectionState':
      return ConnectionState.fromJson(newJson);
    case 'connectionStateWaitingForNetwork':
      return ConnectionStateWaitingForNetwork.fromJson(newJson);
    case 'connectionStateConnectingToProxy':
      return ConnectionStateConnectingToProxy.fromJson(newJson);
    case 'connectionStateConnecting':
      return ConnectionStateConnecting.fromJson(newJson);
    case 'connectionStateUpdating':
      return ConnectionStateUpdating.fromJson(newJson);
    case 'connectionStateReady':
      return ConnectionStateReady.fromJson(newJson);
    case 'topChatCategory':
      return TopChatCategory.fromJson(newJson);
    case 'topChatCategoryUsers':
      return TopChatCategoryUsers.fromJson(newJson);
    case 'topChatCategoryBots':
      return TopChatCategoryBots.fromJson(newJson);
    case 'topChatCategoryGroups':
      return TopChatCategoryGroups.fromJson(newJson);
    case 'topChatCategoryChannels':
      return TopChatCategoryChannels.fromJson(newJson);
    case 'topChatCategoryInlineBots':
      return TopChatCategoryInlineBots.fromJson(newJson);
    case 'topChatCategoryWebAppBots':
      return TopChatCategoryWebAppBots.fromJson(newJson);
    case 'topChatCategoryCalls':
      return TopChatCategoryCalls.fromJson(newJson);
    case 'topChatCategoryForwardChats':
      return TopChatCategoryForwardChats.fromJson(newJson);
    case 'foundPosition':
      return FoundPosition.fromJson(newJson);
    case 'foundPositions':
      return FoundPositions.fromJson(newJson);
    case 'tMeUrlType':
      return TMeUrlType.fromJson(newJson);
    case 'tMeUrlTypeUser':
      return TMeUrlTypeUser.fromJson(newJson);
    case 'tMeUrlTypeSupergroup':
      return TMeUrlTypeSupergroup.fromJson(newJson);
    case 'tMeUrlTypeChatInvite':
      return TMeUrlTypeChatInvite.fromJson(newJson);
    case 'tMeUrlTypeStickerSet':
      return TMeUrlTypeStickerSet.fromJson(newJson);
    case 'tMeUrl':
      return TMeUrl.fromJson(newJson);
    case 'tMeUrls':
      return TMeUrls.fromJson(newJson);
    case 'suggestedAction':
      return SuggestedAction.fromJson(newJson);
    case 'suggestedActionEnableArchiveAndMuteNewChats':
      return SuggestedActionEnableArchiveAndMuteNewChats.fromJson(newJson);
    case 'suggestedActionCheckPassword':
      return SuggestedActionCheckPassword.fromJson(newJson);
    case 'suggestedActionCheckPhoneNumber':
      return SuggestedActionCheckPhoneNumber.fromJson(newJson);
    case 'suggestedActionViewChecksHint':
      return SuggestedActionViewChecksHint.fromJson(newJson);
    case 'suggestedActionConvertToBroadcastGroup':
      return SuggestedActionConvertToBroadcastGroup.fromJson(newJson);
    case 'suggestedActionSetPassword':
      return SuggestedActionSetPassword.fromJson(newJson);
    case 'suggestedActionUpgradePremium':
      return SuggestedActionUpgradePremium.fromJson(newJson);
    case 'suggestedActionRestorePremium':
      return SuggestedActionRestorePremium.fromJson(newJson);
    case 'suggestedActionSubscribeToAnnualPremium':
      return SuggestedActionSubscribeToAnnualPremium.fromJson(newJson);
    case 'suggestedActionGiftPremiumForChristmas':
      return SuggestedActionGiftPremiumForChristmas.fromJson(newJson);
    case 'suggestedActionSetBirthdate':
      return SuggestedActionSetBirthdate.fromJson(newJson);
    case 'suggestedActionSetProfilePhoto':
      return SuggestedActionSetProfilePhoto.fromJson(newJson);
    case 'suggestedActionExtendPremium':
      return SuggestedActionExtendPremium.fromJson(newJson);
    case 'suggestedActionExtendStarSubscriptions':
      return SuggestedActionExtendStarSubscriptions.fromJson(newJson);
    case 'suggestedActionCustom':
      return SuggestedActionCustom.fromJson(newJson);
    case 'count':
      return Count.fromJson(newJson);
    case 'text':
      return Text.fromJson(newJson);
    case 'data':
      return Data.fromJson(newJson);
    case 'seconds':
      return Seconds.fromJson(newJson);
    case 'fileDownloadedPrefixSize':
      return FileDownloadedPrefixSize.fromJson(newJson);
    case 'starCount':
      return StarCount.fromJson(newJson);
    case 'deepLinkInfo':
      return DeepLinkInfo.fromJson(newJson);
    case 'textParseMode':
      return TextParseMode.fromJson(newJson);
    case 'textParseModeMarkdown':
      return TextParseModeMarkdown.fromJson(newJson);
    case 'textParseModeHTML':
      return TextParseModeHTML.fromJson(newJson);
    case 'proxyType':
      return ProxyType.fromJson(newJson);
    case 'proxyTypeSocks5':
      return ProxyTypeSocks5.fromJson(newJson);
    case 'proxyTypeHttp':
      return ProxyTypeHttp.fromJson(newJson);
    case 'proxyTypeMtproto':
      return ProxyTypeMtproto.fromJson(newJson);
    case 'proxy':
      return Proxy.fromJson(newJson);
    case 'proxies':
      return Proxies.fromJson(newJson);
    case 'inputSticker':
      return InputSticker.fromJson(newJson);
    case 'dateRange':
      return DateRange.fromJson(newJson);
    case 'statisticalValue':
      return StatisticalValue.fromJson(newJson);
    case 'statisticalGraph':
      return StatisticalGraph.fromJson(newJson);
    case 'statisticalGraphData':
      return StatisticalGraphData.fromJson(newJson);
    case 'statisticalGraphAsync':
      return StatisticalGraphAsync.fromJson(newJson);
    case 'statisticalGraphError':
      return StatisticalGraphError.fromJson(newJson);
    case 'chatStatisticsObjectType':
      return ChatStatisticsObjectType.fromJson(newJson);
    case 'chatStatisticsObjectTypeMessage':
      return ChatStatisticsObjectTypeMessage.fromJson(newJson);
    case 'chatStatisticsObjectTypeStory':
      return ChatStatisticsObjectTypeStory.fromJson(newJson);
    case 'chatStatisticsInteractionInfo':
      return ChatStatisticsInteractionInfo.fromJson(newJson);
    case 'chatStatisticsMessageSenderInfo':
      return ChatStatisticsMessageSenderInfo.fromJson(newJson);
    case 'chatStatisticsAdministratorActionsInfo':
      return ChatStatisticsAdministratorActionsInfo.fromJson(newJson);
    case 'chatStatisticsInviterInfo':
      return ChatStatisticsInviterInfo.fromJson(newJson);
    case 'chatStatistics':
      return ChatStatistics.fromJson(newJson);
    case 'chatStatisticsSupergroup':
      return ChatStatisticsSupergroup.fromJson(newJson);
    case 'chatStatisticsChannel':
      return ChatStatisticsChannel.fromJson(newJson);
    case 'chatRevenueAmount':
      return ChatRevenueAmount.fromJson(newJson);
    case 'chatRevenueStatistics':
      return ChatRevenueStatistics.fromJson(newJson);
    case 'messageStatistics':
      return MessageStatistics.fromJson(newJson);
    case 'storyStatistics':
      return StoryStatistics.fromJson(newJson);
    case 'revenueWithdrawalState':
      return RevenueWithdrawalState.fromJson(newJson);
    case 'revenueWithdrawalStatePending':
      return RevenueWithdrawalStatePending.fromJson(newJson);
    case 'revenueWithdrawalStateSucceeded':
      return RevenueWithdrawalStateSucceeded.fromJson(newJson);
    case 'revenueWithdrawalStateFailed':
      return RevenueWithdrawalStateFailed.fromJson(newJson);
    case 'chatRevenueTransactionType':
      return ChatRevenueTransactionType.fromJson(newJson);
    case 'chatRevenueTransactionTypeEarnings':
      return ChatRevenueTransactionTypeEarnings.fromJson(newJson);
    case 'chatRevenueTransactionTypeWithdrawal':
      return ChatRevenueTransactionTypeWithdrawal.fromJson(newJson);
    case 'chatRevenueTransactionTypeRefund':
      return ChatRevenueTransactionTypeRefund.fromJson(newJson);
    case 'chatRevenueTransaction':
      return ChatRevenueTransaction.fromJson(newJson);
    case 'chatRevenueTransactions':
      return ChatRevenueTransactions.fromJson(newJson);
    case 'starRevenueStatus':
      return StarRevenueStatus.fromJson(newJson);
    case 'starRevenueStatistics':
      return StarRevenueStatistics.fromJson(newJson);
    case 'point':
      return Point.fromJson(newJson);
    case 'vectorPathCommand':
      return VectorPathCommand.fromJson(newJson);
    case 'vectorPathCommandLine':
      return VectorPathCommandLine.fromJson(newJson);
    case 'vectorPathCommandCubicBezierCurve':
      return VectorPathCommandCubicBezierCurve.fromJson(newJson);
    case 'botCommandScope':
      return BotCommandScope.fromJson(newJson);
    case 'botCommandScopeDefault':
      return BotCommandScopeDefault.fromJson(newJson);
    case 'botCommandScopeAllPrivateChats':
      return BotCommandScopeAllPrivateChats.fromJson(newJson);
    case 'botCommandScopeAllGroupChats':
      return BotCommandScopeAllGroupChats.fromJson(newJson);
    case 'botCommandScopeAllChatAdministrators':
      return BotCommandScopeAllChatAdministrators.fromJson(newJson);
    case 'botCommandScopeChat':
      return BotCommandScopeChat.fromJson(newJson);
    case 'botCommandScopeChatAdministrators':
      return BotCommandScopeChatAdministrators.fromJson(newJson);
    case 'botCommandScopeChatMember':
      return BotCommandScopeChatMember.fromJson(newJson);
    case 'phoneNumberCodeType':
      return PhoneNumberCodeType.fromJson(newJson);
    case 'phoneNumberCodeTypeChange':
      return PhoneNumberCodeTypeChange.fromJson(newJson);
    case 'phoneNumberCodeTypeVerify':
      return PhoneNumberCodeTypeVerify.fromJson(newJson);
    case 'phoneNumberCodeTypeConfirmOwnership':
      return PhoneNumberCodeTypeConfirmOwnership.fromJson(newJson);
    case 'update':
      return Update.fromJson(newJson);
    case 'updateAuthorizationState':
      return UpdateAuthorizationState.fromJson(newJson);
    case 'updateNewMessage':
      return UpdateNewMessage.fromJson(newJson);
    case 'updateMessageSendAcknowledged':
      return UpdateMessageSendAcknowledged.fromJson(newJson);
    case 'updateMessageSendSucceeded':
      return UpdateMessageSendSucceeded.fromJson(newJson);
    case 'updateMessageSendFailed':
      return UpdateMessageSendFailed.fromJson(newJson);
    case 'updateMessageContent':
      return UpdateMessageContent.fromJson(newJson);
    case 'updateMessageEdited':
      return UpdateMessageEdited.fromJson(newJson);
    case 'updateMessageIsPinned':
      return UpdateMessageIsPinned.fromJson(newJson);
    case 'updateMessageInteractionInfo':
      return UpdateMessageInteractionInfo.fromJson(newJson);
    case 'updateMessageContentOpened':
      return UpdateMessageContentOpened.fromJson(newJson);
    case 'updateMessageMentionRead':
      return UpdateMessageMentionRead.fromJson(newJson);
    case 'updateMessageUnreadReactions':
      return UpdateMessageUnreadReactions.fromJson(newJson);
    case 'updateMessageFactCheck':
      return UpdateMessageFactCheck.fromJson(newJson);
    case 'updateMessageLiveLocationViewed':
      return UpdateMessageLiveLocationViewed.fromJson(newJson);
    case 'updateVideoPublished':
      return UpdateVideoPublished.fromJson(newJson);
    case 'updateNewChat':
      return UpdateNewChat.fromJson(newJson);
    case 'updateChatTitle':
      return UpdateChatTitle.fromJson(newJson);
    case 'updateChatPhoto':
      return UpdateChatPhoto.fromJson(newJson);
    case 'updateChatAccentColors':
      return UpdateChatAccentColors.fromJson(newJson);
    case 'updateChatPermissions':
      return UpdateChatPermissions.fromJson(newJson);
    case 'updateChatLastMessage':
      return UpdateChatLastMessage.fromJson(newJson);
    case 'updateChatPosition':
      return UpdateChatPosition.fromJson(newJson);
    case 'updateChatAddedToList':
      return UpdateChatAddedToList.fromJson(newJson);
    case 'updateChatRemovedFromList':
      return UpdateChatRemovedFromList.fromJson(newJson);
    case 'updateChatReadInbox':
      return UpdateChatReadInbox.fromJson(newJson);
    case 'updateChatReadOutbox':
      return UpdateChatReadOutbox.fromJson(newJson);
    case 'updateChatActionBar':
      return UpdateChatActionBar.fromJson(newJson);
    case 'updateChatBusinessBotManageBar':
      return UpdateChatBusinessBotManageBar.fromJson(newJson);
    case 'updateChatAvailableReactions':
      return UpdateChatAvailableReactions.fromJson(newJson);
    case 'updateChatDraftMessage':
      return UpdateChatDraftMessage.fromJson(newJson);
    case 'updateChatEmojiStatus':
      return UpdateChatEmojiStatus.fromJson(newJson);
    case 'updateChatMessageSender':
      return UpdateChatMessageSender.fromJson(newJson);
    case 'updateChatMessageAutoDeleteTime':
      return UpdateChatMessageAutoDeleteTime.fromJson(newJson);
    case 'updateChatNotificationSettings':
      return UpdateChatNotificationSettings.fromJson(newJson);
    case 'updateChatPendingJoinRequests':
      return UpdateChatPendingJoinRequests.fromJson(newJson);
    case 'updateChatReplyMarkup':
      return UpdateChatReplyMarkup.fromJson(newJson);
    case 'updateChatBackground':
      return UpdateChatBackground.fromJson(newJson);
    case 'updateChatTheme':
      return UpdateChatTheme.fromJson(newJson);
    case 'updateChatUnreadMentionCount':
      return UpdateChatUnreadMentionCount.fromJson(newJson);
    case 'updateChatUnreadReactionCount':
      return UpdateChatUnreadReactionCount.fromJson(newJson);
    case 'updateChatVideoChat':
      return UpdateChatVideoChat.fromJson(newJson);
    case 'updateChatDefaultDisableNotification':
      return UpdateChatDefaultDisableNotification.fromJson(newJson);
    case 'updateChatHasProtectedContent':
      return UpdateChatHasProtectedContent.fromJson(newJson);
    case 'updateChatIsTranslatable':
      return UpdateChatIsTranslatable.fromJson(newJson);
    case 'updateChatIsMarkedAsUnread':
      return UpdateChatIsMarkedAsUnread.fromJson(newJson);
    case 'updateChatViewAsTopics':
      return UpdateChatViewAsTopics.fromJson(newJson);
    case 'updateChatBlockList':
      return UpdateChatBlockList.fromJson(newJson);
    case 'updateChatHasScheduledMessages':
      return UpdateChatHasScheduledMessages.fromJson(newJson);
    case 'updateChatFolders':
      return UpdateChatFolders.fromJson(newJson);
    case 'updateChatOnlineMemberCount':
      return UpdateChatOnlineMemberCount.fromJson(newJson);
    case 'updateSavedMessagesTopic':
      return UpdateSavedMessagesTopic.fromJson(newJson);
    case 'updateSavedMessagesTopicCount':
      return UpdateSavedMessagesTopicCount.fromJson(newJson);
    case 'updateQuickReplyShortcut':
      return UpdateQuickReplyShortcut.fromJson(newJson);
    case 'updateQuickReplyShortcutDeleted':
      return UpdateQuickReplyShortcutDeleted.fromJson(newJson);
    case 'updateQuickReplyShortcuts':
      return UpdateQuickReplyShortcuts.fromJson(newJson);
    case 'updateQuickReplyShortcutMessages':
      return UpdateQuickReplyShortcutMessages.fromJson(newJson);
    case 'updateForumTopicInfo':
      return UpdateForumTopicInfo.fromJson(newJson);
    case 'updateForumTopic':
      return UpdateForumTopic.fromJson(newJson);
    case 'updateScopeNotificationSettings':
      return UpdateScopeNotificationSettings.fromJson(newJson);
    case 'updateReactionNotificationSettings':
      return UpdateReactionNotificationSettings.fromJson(newJson);
    case 'updateNotification':
      return UpdateNotification.fromJson(newJson);
    case 'updateNotificationGroup':
      return UpdateNotificationGroup.fromJson(newJson);
    case 'updateActiveNotifications':
      return UpdateActiveNotifications.fromJson(newJson);
    case 'updateHavePendingNotifications':
      return UpdateHavePendingNotifications.fromJson(newJson);
    case 'updateDeleteMessages':
      return UpdateDeleteMessages.fromJson(newJson);
    case 'updateChatAction':
      return UpdateChatAction.fromJson(newJson);
    case 'updateUserStatus':
      return UpdateUserStatus.fromJson(newJson);
    case 'updateUser':
      return UpdateUser.fromJson(newJson);
    case 'updateBasicGroup':
      return UpdateBasicGroup.fromJson(newJson);
    case 'updateSupergroup':
      return UpdateSupergroup.fromJson(newJson);
    case 'updateSecretChat':
      return UpdateSecretChat.fromJson(newJson);
    case 'updateUserFullInfo':
      return UpdateUserFullInfo.fromJson(newJson);
    case 'updateBasicGroupFullInfo':
      return UpdateBasicGroupFullInfo.fromJson(newJson);
    case 'updateSupergroupFullInfo':
      return UpdateSupergroupFullInfo.fromJson(newJson);
    case 'updateServiceNotification':
      return UpdateServiceNotification.fromJson(newJson);
    case 'updateFile':
      return UpdateFile.fromJson(newJson);
    case 'updateFileGenerationStart':
      return UpdateFileGenerationStart.fromJson(newJson);
    case 'updateFileGenerationStop':
      return UpdateFileGenerationStop.fromJson(newJson);
    case 'updateFileDownloads':
      return UpdateFileDownloads.fromJson(newJson);
    case 'updateFileAddedToDownloads':
      return UpdateFileAddedToDownloads.fromJson(newJson);
    case 'updateFileDownload':
      return UpdateFileDownload.fromJson(newJson);
    case 'updateFileRemovedFromDownloads':
      return UpdateFileRemovedFromDownloads.fromJson(newJson);
    case 'updateApplicationVerificationRequired':
      return UpdateApplicationVerificationRequired.fromJson(newJson);
    case 'updateApplicationRecaptchaVerificationRequired':
      return UpdateApplicationRecaptchaVerificationRequired.fromJson(newJson);
    case 'updateCall':
      return UpdateCall.fromJson(newJson);
    case 'updateGroupCall':
      return UpdateGroupCall.fromJson(newJson);
    case 'updateGroupCallParticipant':
      return UpdateGroupCallParticipant.fromJson(newJson);
    case 'updateGroupCallParticipants':
      return UpdateGroupCallParticipants.fromJson(newJson);
    case 'updateGroupCallVerificationState':
      return UpdateGroupCallVerificationState.fromJson(newJson);
    case 'updateNewCallSignalingData':
      return UpdateNewCallSignalingData.fromJson(newJson);
    case 'updateUserPrivacySettingRules':
      return UpdateUserPrivacySettingRules.fromJson(newJson);
    case 'updateUnreadMessageCount':
      return UpdateUnreadMessageCount.fromJson(newJson);
    case 'updateUnreadChatCount':
      return UpdateUnreadChatCount.fromJson(newJson);
    case 'updateStory':
      return UpdateStory.fromJson(newJson);
    case 'updateStoryDeleted':
      return UpdateStoryDeleted.fromJson(newJson);
    case 'updateStoryPostSucceeded':
      return UpdateStoryPostSucceeded.fromJson(newJson);
    case 'updateStoryPostFailed':
      return UpdateStoryPostFailed.fromJson(newJson);
    case 'updateChatActiveStories':
      return UpdateChatActiveStories.fromJson(newJson);
    case 'updateStoryListChatCount':
      return UpdateStoryListChatCount.fromJson(newJson);
    case 'updateStoryStealthMode':
      return UpdateStoryStealthMode.fromJson(newJson);
    case 'updateOption':
      return UpdateOption.fromJson(newJson);
    case 'updateStickerSet':
      return UpdateStickerSet.fromJson(newJson);
    case 'updateInstalledStickerSets':
      return UpdateInstalledStickerSets.fromJson(newJson);
    case 'updateTrendingStickerSets':
      return UpdateTrendingStickerSets.fromJson(newJson);
    case 'updateRecentStickers':
      return UpdateRecentStickers.fromJson(newJson);
    case 'updateFavoriteStickers':
      return UpdateFavoriteStickers.fromJson(newJson);
    case 'updateSavedAnimations':
      return UpdateSavedAnimations.fromJson(newJson);
    case 'updateSavedNotificationSounds':
      return UpdateSavedNotificationSounds.fromJson(newJson);
    case 'updateDefaultBackground':
      return UpdateDefaultBackground.fromJson(newJson);
    case 'updateChatThemes':
      return UpdateChatThemes.fromJson(newJson);
    case 'updateAccentColors':
      return UpdateAccentColors.fromJson(newJson);
    case 'updateProfileAccentColors':
      return UpdateProfileAccentColors.fromJson(newJson);
    case 'updateLanguagePackStrings':
      return UpdateLanguagePackStrings.fromJson(newJson);
    case 'updateConnectionState':
      return UpdateConnectionState.fromJson(newJson);
    case 'updateFreezeState':
      return UpdateFreezeState.fromJson(newJson);
    case 'updateTermsOfService':
      return UpdateTermsOfService.fromJson(newJson);
    case 'updateUnconfirmedSession':
      return UpdateUnconfirmedSession.fromJson(newJson);
    case 'updateAttachmentMenuBots':
      return UpdateAttachmentMenuBots.fromJson(newJson);
    case 'updateWebAppMessageSent':
      return UpdateWebAppMessageSent.fromJson(newJson);
    case 'updateActiveEmojiReactions':
      return UpdateActiveEmojiReactions.fromJson(newJson);
    case 'updateAvailableMessageEffects':
      return UpdateAvailableMessageEffects.fromJson(newJson);
    case 'updateDefaultReactionType':
      return UpdateDefaultReactionType.fromJson(newJson);
    case 'updateDefaultPaidReactionType':
      return UpdateDefaultPaidReactionType.fromJson(newJson);
    case 'updateSavedMessagesTags':
      return UpdateSavedMessagesTags.fromJson(newJson);
    case 'updateActiveLiveLocationMessages':
      return UpdateActiveLiveLocationMessages.fromJson(newJson);
    case 'updateOwnedStarCount':
      return UpdateOwnedStarCount.fromJson(newJson);
    case 'updateChatRevenueAmount':
      return UpdateChatRevenueAmount.fromJson(newJson);
    case 'updateStarRevenueStatus':
      return UpdateStarRevenueStatus.fromJson(newJson);
    case 'updateSpeechRecognitionTrial':
      return UpdateSpeechRecognitionTrial.fromJson(newJson);
    case 'updateDiceEmojis':
      return UpdateDiceEmojis.fromJson(newJson);
    case 'updateAnimatedEmojiMessageClicked':
      return UpdateAnimatedEmojiMessageClicked.fromJson(newJson);
    case 'updateAnimationSearchParameters':
      return UpdateAnimationSearchParameters.fromJson(newJson);
    case 'updateSuggestedActions':
      return UpdateSuggestedActions.fromJson(newJson);
    case 'updateSpeedLimitNotification':
      return UpdateSpeedLimitNotification.fromJson(newJson);
    case 'updateContactCloseBirthdays':
      return UpdateContactCloseBirthdays.fromJson(newJson);
    case 'updateAutosaveSettings':
      return UpdateAutosaveSettings.fromJson(newJson);
    case 'updateBusinessConnection':
      return UpdateBusinessConnection.fromJson(newJson);
    case 'updateNewBusinessMessage':
      return UpdateNewBusinessMessage.fromJson(newJson);
    case 'updateBusinessMessageEdited':
      return UpdateBusinessMessageEdited.fromJson(newJson);
    case 'updateBusinessMessagesDeleted':
      return UpdateBusinessMessagesDeleted.fromJson(newJson);
    case 'updateNewInlineQuery':
      return UpdateNewInlineQuery.fromJson(newJson);
    case 'updateNewChosenInlineResult':
      return UpdateNewChosenInlineResult.fromJson(newJson);
    case 'updateNewCallbackQuery':
      return UpdateNewCallbackQuery.fromJson(newJson);
    case 'updateNewInlineCallbackQuery':
      return UpdateNewInlineCallbackQuery.fromJson(newJson);
    case 'updateNewBusinessCallbackQuery':
      return UpdateNewBusinessCallbackQuery.fromJson(newJson);
    case 'updateNewShippingQuery':
      return UpdateNewShippingQuery.fromJson(newJson);
    case 'updateNewPreCheckoutQuery':
      return UpdateNewPreCheckoutQuery.fromJson(newJson);
    case 'updateNewCustomEvent':
      return UpdateNewCustomEvent.fromJson(newJson);
    case 'updateNewCustomQuery':
      return UpdateNewCustomQuery.fromJson(newJson);
    case 'updatePoll':
      return UpdatePoll.fromJson(newJson);
    case 'updatePollAnswer':
      return UpdatePollAnswer.fromJson(newJson);
    case 'updateChatMember':
      return UpdateChatMember.fromJson(newJson);
    case 'updateNewChatJoinRequest':
      return UpdateNewChatJoinRequest.fromJson(newJson);
    case 'updateChatBoost':
      return UpdateChatBoost.fromJson(newJson);
    case 'updateMessageReaction':
      return UpdateMessageReaction.fromJson(newJson);
    case 'updateMessageReactions':
      return UpdateMessageReactions.fromJson(newJson);
    case 'updatePaidMediaPurchased':
      return UpdatePaidMediaPurchased.fromJson(newJson);
    case 'updates':
      return Updates.fromJson(newJson);
    case 'logStream':
      return LogStream.fromJson(newJson);
    case 'logStreamDefault':
      return LogStreamDefault.fromJson(newJson);
    case 'logStreamFile':
      return LogStreamFile.fromJson(newJson);
    case 'logStreamEmpty':
      return LogStreamEmpty.fromJson(newJson);
    case 'logVerbosityLevel':
      return LogVerbosityLevel.fromJson(newJson);
    case 'logTags':
      return LogTags.fromJson(newJson);
    case 'userSupportInfo':
      return UserSupportInfo.fromJson(newJson);
    case 'testInt':
      return TestInt.fromJson(newJson);
    case 'testString':
      return TestString.fromJson(newJson);
    case 'testBytes':
      return TestBytes.fromJson(newJson);
    case 'testVectorInt':
      return TestVectorInt.fromJson(newJson);
    case 'testVectorIntObject':
      return TestVectorIntObject.fromJson(newJson);
    case 'testVectorString':
      return TestVectorString.fromJson(newJson);
    case 'testVectorStringObject':
      return TestVectorStringObject.fromJson(newJson);
    default:
      return null;
  }
}
